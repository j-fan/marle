import{K as eE,S as tE,i as nE,s as rE,a as wu,k as po,v as C0,Y as aE,h as cr,c as vu,l as ho,m as co,w as E0,n as cs,b as Vu,I as ta,x as $0,M as sE,t as io,d as Ww,f as us,y as A0,J as Vw,o as iE,U as lg,X as bo,g as Uw,Q as oE,q as nm,r as rm,A as lE,u as uE}from"../../../chunks/index-10565635.js";import{P as pE}from"../../../chunks/PixiWaterAsync-e9f346e2.js";import{w as Md}from"../../../chunks/index-e56b14df.js";import{C as hE,f as xo}from"../../../chunks/ChatBot-57eb2f31.js";var dE=Object.defineProperty,ps=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,n)=>(typeof require<"u"?require:t)[n]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')}),ug=(e,t)=>{for(var n in t)dE(e,n,{get:t[n],enumerable:!0})},cE={};ug(cE,{Abs:()=>Wo,Acos:()=>Vo,Acosh:()=>Uo,AdadeltaOptimizer:()=>Yc,AdagradOptimizer:()=>Jc,AdamOptimizer:()=>Qc,AdamaxOptimizer:()=>ef,Add:()=>Ua,AddN:()=>Gs,All:()=>Go,Any:()=>Ho,ArgMax:()=>Hs,ArgMin:()=>lp,Asin:()=>qo,Asinh:()=>jo,Atan:()=>Ko,Atan2:()=>Zo,Atanh:()=>Xo,AvgPool:()=>qs,AvgPool3D:()=>up,AvgPool3DGrad:()=>Bd,AvgPoolGrad:()=>Pd,BackendWasm:()=>D_,BatchMatMul:()=>js,BatchToSpaceND:()=>Yo,Bincount:()=>Wd,BroadcastArgs:()=>Vd,BroadcastTo:()=>q0,Callback:()=>hS,CallbackList:()=>mI,Cast:()=>Ks,Ceil:()=>Xs,ClipByValue:()=>Ga,Complex:()=>Ud,ComplexAbs:()=>pp,Concat:()=>Jo,Conv2D:()=>Zs,Conv2DBackpropFilter:()=>Gd,Conv2DBackpropInput:()=>Ys,Conv3D:()=>hp,Conv3DBackpropFilterV2:()=>Hd,Conv3DBackpropInputV2:()=>qd,Cos:()=>Js,Cosh:()=>Qs,CropAndResize:()=>el,Cumprod:()=>Qo,Cumsum:()=>ei,CustomCallback:()=>yI,DataStorage:()=>Od,DenseBincount:()=>jd,DepthToSpace:()=>tl,DepthwiseConv2dNative:()=>ti,DepthwiseConv2dNativeBackpropFilter:()=>Kd,DepthwiseConv2dNativeBackpropInput:()=>Xd,Diag:()=>Zd,Dilation2D:()=>dp,Dilation2DBackpropFilter:()=>nd,Dilation2DBackpropInput:()=>td,ENV:()=>mg,EarlyStopping:()=>dS,Einsum:()=>Yd,Elu:()=>ri,EluGrad:()=>Jd,Environment:()=>G0,Equal:()=>rl,Erf:()=>nl,Exp:()=>ai,ExpandDims:()=>al,Expm1:()=>sl,FFT:()=>Qd,Fill:()=>cp,FlipLeftRight:()=>il,Floor:()=>si,FloorDiv:()=>ii,FromPixels:()=>rd,FusedBatchNorm:()=>oi,FusedConv2D:()=>Cs,FusedDepthwiseConv2D:()=>Es,GPGPUContext:()=>Zh,GatherNd:()=>ll,GatherV2:()=>ol,GraphModel:()=>cx,Greater:()=>ul,GreaterEqual:()=>li,History:()=>gI,IFFT:()=>ec,Identity:()=>ui,Imag:()=>tc,InputSpec:()=>Ct,IsFinite:()=>pl,IsInf:()=>hl,IsNan:()=>dl,KernelBackend:()=>op,LRN:()=>fp,LRNGrad:()=>rc,LayerVariable:()=>lI,LayersModel:()=>la,LeakyRelu:()=>pi,Less:()=>cl,LessEqual:()=>fl,LinSpace:()=>nc,Log:()=>hi,Log1p:()=>ml,LogSoftmax:()=>K0,LogicalAnd:()=>gl,LogicalNot:()=>yl,LogicalOr:()=>bl,LogicalXor:()=>j0,LowerBound:()=>r$,MathBackendWebGL:()=>Nf,Max:()=>di,MaxPool:()=>fi,MaxPool3D:()=>mp,MaxPool3DGrad:()=>sc,MaxPoolGrad:()=>ac,MaxPoolWithArgmax:()=>ic,Maximum:()=>ci,Mean:()=>mi,Min:()=>gi,Minimum:()=>yi,MirrorPad:()=>bi,Mod:()=>xl,MomentumOptimizer:()=>tf,Multinomial:()=>oc,Multiply:()=>xi,Neg:()=>wl,NonMaxSuppressionV3:()=>kl,NonMaxSuppressionV4:()=>Il,NonMaxSuppressionV5:()=>Sl,NotEqual:()=>vl,OP_SCOPE_SUFFIX:()=>xg,OneHot:()=>wi,OnesLike:()=>Nl,Optimizer:()=>ma,OptimizerConstructors:()=>wa,Pack:()=>Tl,PadV2:()=>vi,Pool:()=>a$,Pow:()=>ki,Prelu:()=>Ii,Prod:()=>Si,RMSPropOptimizer:()=>nf,RNN:()=>Kr,RaggedGather:()=>lc,RaggedRange:()=>uc,RaggedTensorToTensor:()=>pc,Range:()=>gp,Rank:()=>om,Real:()=>hc,RealDiv:()=>ni,Reciprocal:()=>_l,Reduction:()=>ln,Relu:()=>Ni,Relu6:()=>Ci,Reshape:()=>Cl,ResizeBilinear:()=>_i,ResizeBilinearGrad:()=>cc,ResizeNearestNeighbor:()=>Ti,ResizeNearestNeighborGrad:()=>dc,Reverse:()=>Ei,RotateWithOffset:()=>Gl,Round:()=>$i,Rsqrt:()=>Ai,SGDOptimizer:()=>Gp,ScatterNd:()=>El,SearchSorted:()=>fc,Select:()=>$l,Selu:()=>Al,Sequential:()=>Ro,Sigmoid:()=>Fi,Sign:()=>Ml,Sin:()=>Ri,Sinh:()=>Fl,Slice:()=>Rl,Softmax:()=>Oi,Softplus:()=>Dl,SpaceToBatchND:()=>Ol,SparseFillEmptyRows:()=>yp,SparseReshape:()=>zl,SparseSegmentMean:()=>bp,SparseSegmentSum:()=>xp,SparseToDense:()=>mc,SplitV:()=>Ll,Sqrt:()=>Mi,Square:()=>wp,SquaredDifference:()=>Li,Step:()=>qa,StridedSlice:()=>Pl,StringNGrams:()=>vp,StringSplit:()=>kp,StringToHashBucketFast:()=>Ip,Sub:()=>zi,Sum:()=>Di,SymbolicTensor:()=>kr,Tan:()=>Pi,Tanh:()=>Bi,Tensor:()=>Re,TensorBuffer:()=>Ft,Tile:()=>Ha,TopK:()=>Bl,Transform:()=>Wl,Transpose:()=>oa,Unique:()=>gc,Unpack:()=>Vl,UnsortedSegmentSum:()=>Sp,UpperBound:()=>s$,Variable:()=>$s,ZerosLike:()=>Ul,_FusedMatMul:()=>_s,abs:()=>_t,acos:()=>Rg,acosh:()=>Fg,add:()=>Y,addN:()=>B1,all:()=>kc,any:()=>Ku,argMax:()=>Fs,argMin:()=>Mg,asin:()=>Dg,asinh:()=>Og,atan:()=>Lg,atan2:()=>zg,atanh:()=>Pg,avgPool:()=>da,avgPool3d:()=>Wg,backend:()=>k1,backend_util:()=>T,basicLSTMCell:()=>G1,batchNorm:()=>Wi,batchNorm2d:()=>Vg,batchNorm3d:()=>Ug,batchNorm4d:()=>Gg,batchToSpaceND:()=>Fp,bincount:()=>Hg,booleanMaskAsync:()=>Tk,broadcastArgs:()=>H1,broadcastTo:()=>ks,broadcast_util:()=>Hl,browser:()=>Ap,buffer:()=>Le,callbacks:()=>TV,cast:()=>ie,ceil:()=>qg,clipByValue:()=>an,clone:()=>Pr,complex:()=>pa,concat:()=>nt,concat1d:()=>jg,concat2d:()=>Kg,concat3d:()=>Xg,concat4d:()=>Zg,constraints:()=>hI,conv1d:()=>Ic,conv2d:()=>hn,conv2dTranspose:()=>Sc,conv3d:()=>Jg,conv3dTranspose:()=>Qg,copyRegisteredKernels:()=>u$,cos:()=>Mp,cosh:()=>Nc,cosineWindow:()=>qc,cumprod:()=>Xu,cumsum:()=>Tc,customGrad:()=>Ur,data:()=>OS,denseBincount:()=>pd,deprecationWarn:()=>v1,depthToSpace:()=>ey,depthwiseConv2d:()=>Vi,deregisterOp:()=>EV,device_util:()=>Cp,diag:()=>j1,dilation2d:()=>ty,disableDeprecationWarnings:()=>DA,dispose:()=>Ce,disposeVariables:()=>OA,div:()=>me,divNoNan:()=>ny,dot:()=>ry,dropout:()=>$y,einsum:()=>K1,elu:()=>ql,enableDebugMode:()=>MA,enableProdMode:()=>FA,enclosingPowerOfTwo:()=>Ay,engine:()=>hr,env:()=>q,equal:()=>Gn,erf:()=>ay,euclideanNorm:()=>oy,exp:()=>dn,expandDims:()=>Xt,expm1:()=>ly,eye:()=>_c,fft:()=>Vp,fill:()=>Vn,findBackend:()=>UA,findBackendFactory:()=>GA,floor:()=>Kl,floorDiv:()=>vc,forceHalfFloat:()=>tT,fused:()=>Eo,gather:()=>Xl,gatherND:()=>$k,gather_util:()=>Tg,getBackend:()=>WA,getGradient:()=>sm,getKernel:()=>ad,getKernelsForBackend:()=>sd,getThreadsCount:()=>coe,gpgpu_util:()=>F2,grad:()=>fM,grads:()=>mM,greater:()=>yn,greaterEqual:()=>ca,ifft:()=>Co,imag:()=>$p,image:()=>zr,inTopKAsync:()=>Ak,initializers:()=>dI,input:()=>AI,io:()=>Yt,irfft:()=>Vc,isFinite:()=>uy,isInf:()=>py,isNaN:()=>hy,keep:()=>Bt,kernel_impls:()=>jr,layers:()=>cI,leakyRelu:()=>Dp,less:()=>Cc,lessEqual:()=>Xa,linalg:()=>My,linspace:()=>Q1,loadGraphModel:()=>RU,loadGraphModelSync:()=>FU,loadLayersModel:()=>_W,localResponseNormalization:()=>dy,log:()=>Hn,log1p:()=>Op,logSigmoid:()=>cy,logSoftmax:()=>$c,logSumExp:()=>Ac,logicalAnd:()=>mr,logicalNot:()=>Lp,logicalOr:()=>Rc,logicalXor:()=>fy,losses:()=>Uk,lowerBound:()=>tk,matMul:()=>Oe,math:()=>w1,max:()=>nr,maxPool:()=>zt,maxPool3d:()=>my,maxPoolWithArgmax:()=>nk,maximum:()=>qr,mean:()=>yt,memory:()=>ld,meshgrid:()=>rk,metrics:()=>lS,min:()=>No,minimum:()=>Zl,mirrorPad:()=>gy,mod:()=>yy,model:()=>$W,models:()=>uS,moments:()=>zp,movingAverage:()=>_k,mul:()=>z,multiRNNCell:()=>ak,multinomial:()=>sk,neg:()=>dt,nextFrame:()=>Dy,norm:()=>jl,notEqual:()=>Os,oneHot:()=>Io,ones:()=>Wn,onesLike:()=>qn,op:()=>L,outerProduct:()=>ik,pad:()=>Er,pad1d:()=>ok,pad2d:()=>lk,pad3d:()=>uk,pad4d:()=>pk,pool:()=>by,pow:()=>ha,prelu:()=>Bp,print:()=>Ig,prod:()=>xy,profile:()=>LA,raggedGather:()=>hk,raggedRange:()=>dk,raggedTensorToTensor:()=>ck,rand:()=>fk,randomGamma:()=>mk,randomNormal:()=>Mc,randomStandardNormal:()=>gk,randomUniform:()=>Yl,range:()=>To,ready:()=>BA,real:()=>So,reciprocal:()=>ky,registerBackend:()=>xc,registerCallbackConstructor:()=>RW,registerGradient:()=>X0,registerKernel:()=>Np,registerOp:()=>CV,regularizers:()=>pS,relu:()=>Je,relu6:()=>Dc,removeBackend:()=>VA,reshape:()=>P,reverse:()=>ar,reverse1d:()=>yk,reverse2d:()=>bk,reverse3d:()=>xk,reverse4d:()=>wk,rfft:()=>Up,round:()=>Oc,rsqrt:()=>Lc,scalar:()=>ve,scatterND:()=>Ck,scatter_util:()=>_g,searchSorted:()=>Fc,selu:()=>zc,separableConv2d:()=>Jl,sequential:()=>AW,serialization:()=>ne,setBackend:()=>PA,setPlatform:()=>HA,setThreadsCount:()=>doe,setWasmPath:()=>poe,setWasmPaths:()=>hoe,setWebGLContext:()=>r2,setdiff1dAsync:()=>vk,sigmoid:()=>fr,sign:()=>Iy,signal:()=>Vk,sin:()=>Pc,sinh:()=>Bc,slice:()=>We,slice1d:()=>Wp,slice2d:()=>Wc,slice3d:()=>Ql,slice4d:()=>_o,slice_util:()=>Mt,softmax:()=>Za,softplus:()=>Ui,spaceToBatchND:()=>Pp,sparse:()=>Gk,sparseToDense:()=>Ek,spectral:()=>Wk,split:()=>_n,sqrt:()=>Jt,square:()=>tt,squaredDifference:()=>Uc,squeeze:()=>Ya,stack:()=>Vt,step:()=>Gi,stridedSlice:()=>Sy,string:()=>Hk,sub:()=>pe,sum:()=>ye,sumOutType:()=>bc,tan:()=>Ny,tanh:()=>Ms,tensor:()=>Tn,tensor1d:()=>Ye,tensor2d:()=>Br,tensor3d:()=>wc,tensor4d:()=>Fa,tensor5d:()=>kk,tensor6d:()=>Ik,tensor_util:()=>Ir,test_util:()=>L1,tidy:()=>B,tile:()=>Bn,time:()=>zA,topk:()=>Ty,train:()=>ds,transpose:()=>Fe,truncatedNormal:()=>Gc,unique:()=>_y,unregisterGradient:()=>l$,unregisterKernel:()=>o$,unsortedSegmentSum:()=>Hc,unstack:()=>St,upcastType:()=>rr,upperBound:()=>Sk,util:()=>v,valueAndGrad:()=>gM,valueAndGrads:()=>yM,variable:()=>Cy,variableGrads:()=>ek,version:()=>woe,version_converter:()=>DU,version_core:()=>IR,version_layers:()=>rb,version_wasm:()=>foe,version_webgl:()=>d7,webgl:()=>c7,webgl_util:()=>n2,where:()=>sn,whereAsync:()=>Ey,zeros:()=>bt,zerosLike:()=>Ue});var fE=Object.create,pg=Object.defineProperty,mE=Object.getOwnPropertyDescriptor,gE=Object.getOwnPropertyNames,yE=Object.getPrototypeOf,bE=Object.prototype.hasOwnProperty,R0=(e=>typeof ps<"u"?ps:typeof Proxy<"u"?new Proxy(e,{get:(t,n)=>(typeof ps<"u"?ps:t)[n]}):e)(function(e){if(typeof ps<"u")return ps.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')}),$t=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Ee=(e,t)=>{for(var n in t)pg(e,n,{get:t[n],enumerable:!0})},xE=(e,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of gE(t))!bE.call(e,a)&&a!==n&&pg(e,a,{get:()=>t[a],enumerable:!(r=mE(t,a))||r.enumerable});return e},Wa=(e,t,n)=>(n=e!=null?fE(yE(e)):{},xE(t||!e||!e.__esModule?pg(n,"default",{value:e,enumerable:!0}):n,e)),wE=$t((e,t)=>{t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function r(S,D,W){this.low=S|0,this.high=D|0,this.unsigned=!!W}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0});function a(S){return(S&&S.__isLong__)===!0}r.isLong=a;var s={},i={};function o(S,D){var W,U,G;return D?(S>>>=0,(G=0<=S&&S<256)&&(U=i[S],U)?U:(W=p(S,(S|0)<0?-1:0,!0),G&&(i[S]=W),W)):(S|=0,(G=-128<=S&&S<128)&&(U=s[S],U)?U:(W=p(S,S<0?-1:0,!1),G&&(s[S]=W),W))}r.fromInt=o;function l(S,D){if(isNaN(S))return D?w:x;if(D){if(S<0)return w;if(S>=g)return $}else{if(S<=-y)return F;if(S+1>=y)return E}return S<0?l(-S,D).neg():p(S%m|0,S/m|0,D)}r.fromNumber=l;function p(S,D,W){return new r(S,D,W)}r.fromBits=p;var u=Math.pow;function h(S,D,W){if(S.length===0)throw Error("empty string");if(S==="NaN"||S==="Infinity"||S==="+Infinity"||S==="-Infinity")return x;if(typeof D=="number"?(W=D,D=!1):D=!!D,W=W||10,W<2||36<W)throw RangeError("radix");var U;if((U=S.indexOf("-"))>0)throw Error("interior hyphen");if(U===0)return h(S.substring(1),D,W).neg();for(var G=l(u(W,8)),j=x,H=0;H<S.length;H+=8){var X=Math.min(8,S.length-H),ee=parseInt(S.substring(H,H+X),W);if(X<8){var Z=l(u(W,X));j=j.mul(Z).add(l(ee))}else j=j.mul(G),j=j.add(l(ee))}return j.unsigned=D,j}r.fromString=h;function d(S,D){return typeof S=="number"?l(S,D):typeof S=="string"?h(S,D):p(S.low,S.high,typeof D=="boolean"?D:S.unsigned)}r.fromValue=d;var c=1<<16,f=1<<24,m=c*c,g=m*m,y=g/2,b=o(f),x=o(0);r.ZERO=x;var w=o(0,!0);r.UZERO=w;var I=o(1);r.ONE=I;var N=o(1,!0);r.UONE=N;var C=o(-1);r.NEG_ONE=C;var E=p(-1,2147483647,!1);r.MAX_VALUE=E;var $=p(-1,-1,!0);r.MAX_UNSIGNED_VALUE=$;var F=p(0,-2147483648,!1);r.MIN_VALUE=F;var R=r.prototype;R.toInt=function(){return this.unsigned?this.low>>>0:this.low},R.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},R.toString=function(S){if(S=S||10,S<2||36<S)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(F)){var D=l(S),W=this.div(D),U=W.mul(D).sub(this);return W.toString(S)+U.toInt().toString(S)}else return"-"+this.neg().toString(S);for(var G=l(u(S,6),this.unsigned),j=this,H="";;){var X=j.div(G),ee=j.sub(X.mul(G)).toInt()>>>0,Z=ee.toString(S);if(j=X,j.isZero())return Z+H;for(;Z.length<6;)Z="0"+Z;H=""+Z+H}},R.getHighBits=function(){return this.high},R.getHighBitsUnsigned=function(){return this.high>>>0},R.getLowBits=function(){return this.low},R.getLowBitsUnsigned=function(){return this.low>>>0},R.getNumBitsAbs=function(){if(this.isNegative())return this.eq(F)?64:this.neg().getNumBitsAbs();for(var S=this.high!=0?this.high:this.low,D=31;D>0&&(S&1<<D)==0;D--);return this.high!=0?D+33:D+1},R.isZero=function(){return this.high===0&&this.low===0},R.eqz=R.isZero,R.isNegative=function(){return!this.unsigned&&this.high<0},R.isPositive=function(){return this.unsigned||this.high>=0},R.isOdd=function(){return(this.low&1)===1},R.isEven=function(){return(this.low&1)===0},R.equals=function(S){return a(S)||(S=d(S)),this.unsigned!==S.unsigned&&this.high>>>31===1&&S.high>>>31===1?!1:this.high===S.high&&this.low===S.low},R.eq=R.equals,R.notEquals=function(S){return!this.eq(S)},R.neq=R.notEquals,R.ne=R.notEquals,R.lessThan=function(S){return this.comp(S)<0},R.lt=R.lessThan,R.lessThanOrEqual=function(S){return this.comp(S)<=0},R.lte=R.lessThanOrEqual,R.le=R.lessThanOrEqual,R.greaterThan=function(S){return this.comp(S)>0},R.gt=R.greaterThan,R.greaterThanOrEqual=function(S){return this.comp(S)>=0},R.gte=R.greaterThanOrEqual,R.ge=R.greaterThanOrEqual,R.compare=function(S){if(a(S)||(S=d(S)),this.eq(S))return 0;var D=this.isNegative(),W=S.isNegative();return D&&!W?-1:!D&&W?1:this.unsigned?S.high>>>0>this.high>>>0||S.high===this.high&&S.low>>>0>this.low>>>0?-1:1:this.sub(S).isNegative()?-1:1},R.comp=R.compare,R.negate=function(){return!this.unsigned&&this.eq(F)?F:this.not().add(I)},R.neg=R.negate,R.add=function(S){a(S)||(S=d(S));var D=this.high>>>16,W=this.high&65535,U=this.low>>>16,G=this.low&65535,j=S.high>>>16,H=S.high&65535,X=S.low>>>16,ee=S.low&65535,Z=0,re=0,te=0,ae=0;return ae+=G+ee,te+=ae>>>16,ae&=65535,te+=U+X,re+=te>>>16,te&=65535,re+=W+H,Z+=re>>>16,re&=65535,Z+=D+j,Z&=65535,p(te<<16|ae,Z<<16|re,this.unsigned)},R.subtract=function(S){return a(S)||(S=d(S)),this.add(S.neg())},R.sub=R.subtract,R.multiply=function(S){if(this.isZero())return x;if(a(S)||(S=d(S)),n){var D=n.mul(this.low,this.high,S.low,S.high);return p(D,n.get_high(),this.unsigned)}if(S.isZero())return x;if(this.eq(F))return S.isOdd()?F:x;if(S.eq(F))return this.isOdd()?F:x;if(this.isNegative())return S.isNegative()?this.neg().mul(S.neg()):this.neg().mul(S).neg();if(S.isNegative())return this.mul(S.neg()).neg();if(this.lt(b)&&S.lt(b))return l(this.toNumber()*S.toNumber(),this.unsigned);var W=this.high>>>16,U=this.high&65535,G=this.low>>>16,j=this.low&65535,H=S.high>>>16,X=S.high&65535,ee=S.low>>>16,Z=S.low&65535,re=0,te=0,ae=0,oe=0;return oe+=j*Z,ae+=oe>>>16,oe&=65535,ae+=G*Z,te+=ae>>>16,ae&=65535,ae+=j*ee,te+=ae>>>16,ae&=65535,te+=U*Z,re+=te>>>16,te&=65535,te+=G*ee,re+=te>>>16,te&=65535,te+=j*X,re+=te>>>16,te&=65535,re+=W*Z+U*ee+G*X+j*H,re&=65535,p(ae<<16|oe,re<<16|te,this.unsigned)},R.mul=R.multiply,R.divide=function(S){if(a(S)||(S=d(S)),S.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&S.low===-1&&S.high===-1)return this;var D=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,S.low,S.high);return p(D,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?w:x;var W,U,G;if(this.unsigned){if(S.unsigned||(S=S.toUnsigned()),S.gt(this))return w;if(S.gt(this.shru(1)))return N;G=w}else{if(this.eq(F)){if(S.eq(I)||S.eq(C))return F;if(S.eq(F))return I;var j=this.shr(1);return W=j.div(S).shl(1),W.eq(x)?S.isNegative()?I:C:(U=this.sub(S.mul(W)),G=W.add(U.div(S)),G)}else if(S.eq(F))return this.unsigned?w:x;if(this.isNegative())return S.isNegative()?this.neg().div(S.neg()):this.neg().div(S).neg();if(S.isNegative())return this.div(S.neg()).neg();G=x}for(U=this;U.gte(S);){W=Math.max(1,Math.floor(U.toNumber()/S.toNumber()));for(var H=Math.ceil(Math.log(W)/Math.LN2),X=H<=48?1:u(2,H-48),ee=l(W),Z=ee.mul(S);Z.isNegative()||Z.gt(U);)W-=X,ee=l(W,this.unsigned),Z=ee.mul(S);ee.isZero()&&(ee=I),G=G.add(ee),U=U.sub(Z)}return G},R.div=R.divide,R.modulo=function(S){if(a(S)||(S=d(S)),n){var D=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,S.low,S.high);return p(D,n.get_high(),this.unsigned)}return this.sub(this.div(S).mul(S))},R.mod=R.modulo,R.rem=R.modulo,R.not=function(){return p(~this.low,~this.high,this.unsigned)},R.and=function(S){return a(S)||(S=d(S)),p(this.low&S.low,this.high&S.high,this.unsigned)},R.or=function(S){return a(S)||(S=d(S)),p(this.low|S.low,this.high|S.high,this.unsigned)},R.xor=function(S){return a(S)||(S=d(S)),p(this.low^S.low,this.high^S.high,this.unsigned)},R.shiftLeft=function(S){return a(S)&&(S=S.toInt()),(S&=63)===0?this:S<32?p(this.low<<S,this.high<<S|this.low>>>32-S,this.unsigned):p(0,this.low<<S-32,this.unsigned)},R.shl=R.shiftLeft,R.shiftRight=function(S){return a(S)&&(S=S.toInt()),(S&=63)===0?this:S<32?p(this.low>>>S|this.high<<32-S,this.high>>S,this.unsigned):p(this.high>>S-32,this.high>=0?0:-1,this.unsigned)},R.shr=R.shiftRight,R.shiftRightUnsigned=function(S){if(a(S)&&(S=S.toInt()),S&=63,S===0)return this;var D=this.high;if(S<32){var W=this.low;return p(W>>>S|D<<32-S,D>>>S,this.unsigned)}else return S===32?p(D,0,this.unsigned):p(D>>>S-32,0,this.unsigned)},R.shru=R.shiftRightUnsigned,R.shr_u=R.shiftRightUnsigned,R.toSigned=function(){return this.unsigned?p(this.low,this.high,!1):this},R.toUnsigned=function(){return this.unsigned?this:p(this.low,this.high,!0)},R.toBytes=function(S){return S?this.toBytesLE():this.toBytesBE()},R.toBytesLE=function(){var S=this.high,D=this.low;return[D&255,D>>>8&255,D>>>16&255,D>>>24,S&255,S>>>8&255,S>>>16&255,S>>>24]},R.toBytesBE=function(){var S=this.high,D=this.low;return[S>>>24,S>>>16&255,S>>>8&255,S&255,D>>>24,D>>>16&255,D>>>8&255,D&255]},r.fromBytes=function(S,D,W){return W?r.fromBytesLE(S,D):r.fromBytesBE(S,D)},r.fromBytesLE=function(S,D){return new r(S[0]|S[1]<<8|S[2]<<16|S[3]<<24,S[4]|S[5]<<8|S[6]<<16|S[7]<<24,D)},r.fromBytesBE=function(S,D){return new r(S[4]<<24|S[5]<<16|S[6]<<8|S[7],S[0]<<24|S[1]<<16|S[2]<<8|S[3],D)}}),vE=$t(()=>{}),kE=$t(()=>{}),IE=$t((e,t)=>{(function(n,r,a){function s(p){var u=this,h=l();u.next=function(){var d=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=d-(u.c=d|0)},u.c=1,u.s0=h(" "),u.s1=h(" "),u.s2=h(" "),u.s0-=h(p),u.s0<0&&(u.s0+=1),u.s1-=h(p),u.s1<0&&(u.s1+=1),u.s2-=h(p),u.s2<0&&(u.s2+=1),h=null}function i(p,u){return u.c=p.c,u.s0=p.s0,u.s1=p.s1,u.s2=p.s2,u}function o(p,u){var h=new s(p),d=u&&u.state,c=h.next;return c.int32=function(){return h.next()*4294967296|0},c.double=function(){return c()+(c()*2097152|0)*11102230246251565e-32},c.quick=c,d&&(typeof d=="object"&&i(d,h),c.state=function(){return i(h,{})}),c}function l(){var p=4022871197,u=function(h){h=String(h);for(var d=0;d<h.length;d++){p+=h.charCodeAt(d);var c=.02519603282416938*p;p=c>>>0,c-=p,c*=p,p=c>>>0,c-=p,p+=c*4294967296}return(p>>>0)*23283064365386963e-26};return u}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),SE=$t((e,t)=>{(function(n,r,a){function s(l){var p=this,u="";p.x=0,p.y=0,p.z=0,p.w=0,p.next=function(){var d=p.x^p.x<<11;return p.x=p.y,p.y=p.z,p.z=p.w,p.w^=p.w>>>19^d^d>>>8},l===(l|0)?p.x=l:u+=l;for(var h=0;h<u.length+64;h++)p.x^=u.charCodeAt(h)|0,p.next()}function i(l,p){return p.x=l.x,p.y=l.y,p.z=l.z,p.w=l.w,p}function o(l,p){var u=new s(l),h=p&&p.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var c=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(typeof h=="object"&&i(h,u),d.state=function(){return i(u,{})}),d}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),NE=$t((e,t)=>{(function(n,r,a){function s(l){var p=this,u="";p.next=function(){var d=p.x^p.x>>>2;return p.x=p.y,p.y=p.z,p.z=p.w,p.w=p.v,(p.d=p.d+362437|0)+(p.v=p.v^p.v<<4^(d^d<<1))|0},p.x=0,p.y=0,p.z=0,p.w=0,p.v=0,l===(l|0)?p.x=l:u+=l;for(var h=0;h<u.length+64;h++)p.x^=u.charCodeAt(h)|0,h==u.length&&(p.d=p.x<<10^p.x>>>4),p.next()}function i(l,p){return p.x=l.x,p.y=l.y,p.z=l.z,p.w=l.w,p.v=l.v,p.d=l.d,p}function o(l,p){var u=new s(l),h=p&&p.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var c=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(typeof h=="object"&&i(h,u),d.state=function(){return i(u,{})}),d}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),TE=$t((e,t)=>{(function(n,r,a){function s(l){var p=this;p.next=function(){var h=p.x,d=p.i,c,f;return c=h[d],c^=c>>>7,f=c^c<<24,c=h[d+1&7],f^=c^c>>>10,c=h[d+3&7],f^=c^c>>>3,c=h[d+4&7],f^=c^c<<7,c=h[d+7&7],c=c^c<<13,f^=c^c<<9,h[d]=f,p.i=d+1&7,f};function u(h,d){var c,f=[];if(d===(d|0))f[0]=d;else for(d=""+d,c=0;c<d.length;++c)f[c&7]=f[c&7]<<15^d.charCodeAt(c)+f[c+1&7]<<13;for(;f.length<8;)f.push(0);for(c=0;c<8&&f[c]===0;++c);for(c==8?f[7]=-1:f[c],h.x=f,h.i=0,c=256;c>0;--c)h.next()}u(p,l)}function i(l,p){return p.x=l.x.slice(),p.i=l.i,p}function o(l,p){l==null&&(l=+new Date);var u=new s(l),h=p&&p.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var c=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(h.x&&i(h,u),d.state=function(){return i(u,{})}),d}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),_E=$t((e,t)=>{(function(n,r,a){function s(l){var p=this;p.next=function(){var h=p.w,d=p.X,c=p.i,f,m;return p.w=h=h+1640531527|0,m=d[c+34&127],f=d[c=c+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=d[c]=m^f,p.i=c,m+(h^h>>>16)|0};function u(h,d){var c,f,m,g,y,b=[],x=128;for(d===(d|0)?(f=d,d=null):(d=d+"\0",f=0,x=Math.max(x,d.length)),m=0,g=-32;g<x;++g)d&&(f^=d.charCodeAt((g+32)%d.length)),g===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(y=y+1640531527|0,c=b[g&127]^=f+y,m=c==0?m+1:0);for(m>=128&&(b[(d&&d.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=b[m+34&127],c=b[m=m+1&127],f^=f<<13,c^=c<<17,f^=f>>>15,c^=c>>>12,b[m]=f^c;h.w=y,h.X=b,h.i=m}u(p,l)}function i(l,p){return p.i=l.i,p.w=l.w,p.X=l.X.slice(),p}function o(l,p){l==null&&(l=+new Date);var u=new s(l),h=p&&p.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var c=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(h.X&&i(h,u),d.state=function(){return i(u,{})}),d}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),CE=$t((e,t)=>{(function(n,r,a){function s(l){var p=this,u="";p.next=function(){var d=p.b,c=p.c,f=p.d,m=p.a;return d=d<<25^d>>>7^c,c=c-f|0,f=f<<24^f>>>8^m,m=m-d|0,p.b=d=d<<20^d>>>12^c,p.c=c=c-f|0,p.d=f<<16^c>>>16^m,p.a=m-d|0},p.a=0,p.b=0,p.c=-1640531527,p.d=1367130551,l===Math.floor(l)?(p.a=l/4294967296|0,p.b=l|0):u+=l;for(var h=0;h<u.length+20;h++)p.b^=u.charCodeAt(h)|0,p.next()}function i(l,p){return p.a=l.a,p.b=l.b,p.c=l.c,p.d=l.d,p}function o(l,p){var u=new s(l),h=p&&p.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var c=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(typeof h=="object"&&i(h,u),d.state=function(){return i(u,{})}),d}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),EE=$t(()=>{}),$E=$t((e,t)=>{(function(n,r,a){var s=256,i=6,o=52,l="random",p=a.pow(s,i),u=a.pow(2,o),h=u*2,d=s-1,c;function f(I,N,C){var E=[];N=N==!0?{entropy:!0}:N||{};var $=b(y(N.entropy?[I,w(r)]:I==null?x():I,3),E),F=new m(E),R=function(){for(var S=F.g(i),D=p,W=0;S<u;)S=(S+W)*s,D*=s,W=F.g(1);for(;S>=h;)S/=2,D/=2,W>>>=1;return(S+W)/D};return R.int32=function(){return F.g(4)|0},R.quick=function(){return F.g(4)/4294967296},R.double=R,b(w(F.S),r),(N.pass||C||function(S,D,W,U){return U&&(U.S&&g(U,F),S.state=function(){return g(F,{})}),W?(a[l]=S,D):S})(R,$,"global"in N?N.global:this==a,N.state)}function m(I){var N,C=I.length,E=this,$=0,F=E.i=E.j=0,R=E.S=[];for(C||(I=[C++]);$<s;)R[$]=$++;for($=0;$<s;$++)R[$]=R[F=d&F+I[$%C]+(N=R[$])],R[F]=N;(E.g=function(S){for(var D,W=0,U=E.i,G=E.j,j=E.S;S--;)D=j[U=d&U+1],W=W*s+j[d&(j[U]=j[G=d&G+D])+(j[G]=D)];return E.i=U,E.j=G,W})(s)}function g(I,N){return N.i=I.i,N.j=I.j,N.S=I.S.slice(),N}function y(I,N){var C=[],E=typeof I,$;if(N&&E=="object")for($ in I)try{C.push(y(I[$],N-1))}catch{}return C.length?C:E=="string"?I:I+"\0"}function b(I,N){for(var C=I+"",E,$=0;$<C.length;)N[d&$]=d&(E^=N[d&$]*19)+C.charCodeAt($++);return w(N)}function x(){try{var I;return c&&(I=c.randomBytes)?I=I(s):(I=new Uint8Array(s),(n.crypto||n.msCrypto).getRandomValues(I)),w(I)}catch{var N=n.navigator,C=N&&N.plugins;return[+new Date,n,C,n.screen,w(r)]}}function w(I){return String.fromCharCode.apply(0,I)}if(b(a.random(),r),typeof t=="object"&&t.exports){t.exports=f;try{c=EE()}catch{}}else typeof define=="function"&&define.amd?define(function(){return f}):a["seed"+l]=f})(typeof self<"u"?self:e,[],Math)}),Dd=$t((e,t)=>{var n=IE(),r=SE(),a=NE(),s=TE(),i=_E(),o=CE(),l=$E();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}),F0=$t(()=>{}),hg=$t(()=>{}),Jh=$t(()=>{}),AE=$t(()=>{}),RE=$t(()=>{}),FE=$t(()=>{}),ME=$t((e,t)=>{var n=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(a){a=a||{};function s(){return H.buffer!=he&&Ge(H.buffer),Ie}function i(){return H.buffer!=he&&Ge(H.buffer),Ne}function o(){return H.buffer!=he&&Ge(H.buffer),De}function l(){return H.buffer!=he&&Ge(H.buffer),ze}function p(){return H.buffer!=he&&Ge(H.buffer),Xe}var u=typeof a<"u"?a:{},h,d;u.ready=new Promise(function(M,K){h=M,d=K});var c;typeof process<"u"&&process.listeners&&(c={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var f=Object.assign({},u),m=(M,K)=>{throw K},g=typeof window=="object",y=typeof importScripts=="function",b=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",x=u.ENVIRONMENT_IS_PTHREAD||!1,w="";function I(M){return u.locateFile?u.locateFile(M,w):w+M}var N,C,E;function $(M){M instanceof Yr||U("exiting due to exception: "+M)}if(b){y?w=Jh().dirname(w)+"/":w=__dirname+"/";var F,R;typeof R0=="function"&&(F=hg(),R=Jh()),N=(K,se)=>(K=R.normalize(K),F.readFileSync(K,se?void 0:"utf8")),E=K=>{var se=N(K,!0);return se.buffer||(se=new Uint8Array(se)),se},C=(K,se,ce)=>{K=R.normalize(K),F.readFile(K,function(ke,He){ke?ce(ke):se(He.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(K){if(!(K instanceof Yr))throw K}),process.on("unhandledRejection",function(K){throw K}),m=(K,se)=>{if(kt())throw process.exitCode=K,se;$(se),process.exit(K)},u.inspect=function(){return"[Emscripten Module object]"};let M;try{M=AE()}catch(K){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),K}global.Worker=M.Worker}else(g||y)&&(y?w=self.location.href:typeof document<"u"&&document.currentScript&&(w=document.currentScript.src),typeof r<"u"&&r&&(w=r),w.indexOf("blob:")!==0?w=w.substr(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1):w="",b||(N=M=>{var K=new XMLHttpRequest;return K.open("GET",M,!1),K.send(null),K.responseText},y&&(E=M=>{var K=new XMLHttpRequest;return K.open("GET",M,!1),K.responseType="arraybuffer",K.send(null),new Uint8Array(K.response)}),C=(M,K,se)=>{var ce=new XMLHttpRequest;ce.open("GET",M,!0),ce.responseType="arraybuffer",ce.onload=()=>{if(ce.status==200||ce.status==0&&ce.response){K(ce.response);return}se()},ce.onerror=se,ce.send(null)}));b&&typeof performance>"u"&&(global.performance=RE().performance);var S=console.log.bind(console),D=console.warn.bind(console);b&&(S=M=>F.writeSync(1,M+`
`),D=M=>F.writeSync(2,M+`
`));var W=u.print||S,U=u.printErr||D;Object.assign(u,f),f=null,u.arguments&&u.arguments,u.thisProgram&&u.thisProgram,u.quit&&(m=u.quit);var G;u.wasmBinary&&(G=u.wasmBinary);var j=u.noExitRuntime||!0;typeof WebAssembly!="object"&&Xr("no native wasm support detected");var H,X,ee=!1,Z;function re(M,K){M||Xr(K)}var te=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function ae(M,K,se){for(var ce=K+se,ke=K;M[ke]&&!(ke>=ce);)++ke;if(ke-K>16&&M.buffer&&te)return te.decode(M.buffer instanceof SharedArrayBuffer?M.slice(K,ke):M.subarray(K,ke));for(var He="";K<ke;){var _e=M[K++];if(!(_e&128)){He+=String.fromCharCode(_e);continue}var Ae=M[K++]&63;if((_e&224)==192){He+=String.fromCharCode((_e&31)<<6|Ae);continue}var Tt=M[K++]&63;if((_e&240)==224?_e=(_e&15)<<12|Ae<<6|Tt:_e=(_e&7)<<18|Ae<<12|Tt<<6|M[K++]&63,_e<65536)He+=String.fromCharCode(_e);else{var Yn=_e-65536;He+=String.fromCharCode(55296|Yn>>10,56320|Yn&1023)}}return He}function oe(M,K){return M?ae(i(),M,K):""}function xe(M,K,se,ce){if(!(ce>0))return 0;for(var ke=se,He=se+ce-1,_e=0;_e<M.length;++_e){var Ae=M.charCodeAt(_e);if(Ae>=55296&&Ae<=57343){var Tt=M.charCodeAt(++_e);Ae=65536+((Ae&1023)<<10)|Tt&1023}if(Ae<=127){if(se>=He)break;K[se++]=Ae}else if(Ae<=2047){if(se+1>=He)break;K[se++]=192|Ae>>6,K[se++]=128|Ae&63}else if(Ae<=65535){if(se+2>=He)break;K[se++]=224|Ae>>12,K[se++]=128|Ae>>6&63,K[se++]=128|Ae&63}else{if(se+3>=He)break;K[se++]=240|Ae>>18,K[se++]=128|Ae>>12&63,K[se++]=128|Ae>>6&63,K[se++]=128|Ae&63}}return K[se]=0,se-ke}function ge(M,K,se){return xe(M,i(),K,se)}var he,Ie,Ne,De,ze,Xe;x&&(he=u.buffer);function Ge(M){he=M,u.HEAP8=Ie=new Int8Array(M),u.HEAP16=new Int16Array(M),u.HEAP32=De=new Int32Array(M),u.HEAPU8=Ne=new Uint8Array(M),u.HEAPU16=new Uint16Array(M),u.HEAPU32=ze=new Uint32Array(M),u.HEAPF32=new Float32Array(M),u.HEAPF64=Xe=new Float64Array(M)}var Ke=u.INITIAL_MEMORY||16777216;if(x)H=u.wasmMemory,he=u.buffer;else if(u.wasmMemory)H=u.wasmMemory;else if(H=new WebAssembly.Memory({initial:Ke/65536,maximum:32768,shared:!0}),!(H.buffer instanceof SharedArrayBuffer))throw U("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),b&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");H&&(he=H.buffer),Ke=he.byteLength,Ge(he);var $e,et=[],st=[],Fn=[];function kt(){return j}function wn(){if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)Kn(u.preRun.shift());it(et)}function qt(){!x&&it(st)}function Mn(){if(!x){if(u.postRun)for(typeof u.postRun=="function"&&(u.postRun=[u.postRun]);u.postRun.length;)vn(u.postRun.shift());it(Fn)}}function Kn(M){et.unshift(M)}function Dn(M){st.unshift(M)}function vn(M){Fn.unshift(M)}var jt=0,Xn=null;function ya(M){jt++,u.monitorRunDependencies&&u.monitorRunDependencies(jt)}function mu(M){if(jt--,u.monitorRunDependencies&&u.monitorRunDependencies(jt),jt==0&&Xn){var K=Xn;Xn=null,K()}}function Xr(M){x?postMessage({cmd:"onAbort",arg:M}):u.onAbort&&u.onAbort(M),M="Aborted("+M+")",U(M),ee=!0,Z=1,M+=". Build with -sASSERTIONS for more info.";var K=new WebAssembly.RuntimeError(M);throw d(K),K}var gu="data:application/octet-stream;base64,";function Zr(M){return M.startsWith(gu)}function as(M){return M.startsWith("file://")}var Kt;Kt="tfjs-backend-wasm-threaded-simd.wasm",Zr(Kt)||(Kt=I(Kt));function dh(M){try{if(M==Kt&&G)return new Uint8Array(G);if(E)return E(M);throw"both async and sync fetching of the wasm failed"}catch(K){Xr(K)}}function ch(){if(!G&&(g||y)){if(typeof fetch=="function"&&!as(Kt))return fetch(Kt,{credentials:"same-origin"}).then(function(M){if(!M.ok)throw"failed to load wasm binary file at '"+Kt+"'";return M.arrayBuffer()}).catch(function(){return dh(Kt)});if(C)return new Promise(function(M,K){C(Kt,function(se){M(new Uint8Array(se))},K)})}return Promise.resolve().then(function(){return dh(Kt)})}function fh(){var M={env:Rw,wasi_snapshot_preview1:Rw};function K(_e,Ae){var Tt=_e.exports;if(u.asm=Tt,bh(u.asm._emscripten_tls_init),$e=u.asm.__indirect_function_table,Dn(u.asm.__wasm_call_ctors),X=Ae,!x){var Yn=de.unusedWorkers.length;de.unusedWorkers.forEach(function(ea){de.loadWasmModuleToWorker(ea,function(){--Yn||mu()})})}}x||ya();function se(_e){K(_e.instance,_e.module)}function ce(_e){return ch().then(function(Ae){return WebAssembly.instantiate(Ae,M)}).then(function(Ae){return Ae}).then(_e,function(Ae){U("failed to asynchronously prepare wasm: "+Ae),Xr(Ae)})}function ke(){return!G&&typeof WebAssembly.instantiateStreaming=="function"&&!Zr(Kt)&&!as(Kt)&&!b&&typeof fetch=="function"?fetch(Kt,{credentials:"same-origin"}).then(function(_e){var Ae=WebAssembly.instantiateStreaming(_e,M);return Ae.then(se,function(Tt){return U("wasm streaming compile failed: "+Tt),U("falling back to ArrayBuffer instantiation"),ce(se)})}):ce(se)}if(u.instantiateWasm)try{var He=u.instantiateWasm(M,K);return He}catch(_e){U("Module.instantiateWasm callback failed with error: "+_e),d(_e)}return ke().catch(d),{}}var mh={};function Yr(M){this.name="ExitStatus",this.message="Program terminated with exit("+M+")",this.status=M}function Qi(M){var K=de.pthreads[M];delete de.pthreads[M],K.terminate(),Of(M),de.runningWorkers.splice(de.runningWorkers.indexOf(K),1),K.pthread_ptr=0}function gh(M){var K=de.pthreads[M];K.postMessage({cmd:"cancel"})}function ss(M){var K=de.pthreads[M];re(K),de.returnWorkerToPool(K)}function is(M){var K=de.getNewWorker();if(!K)return 6;de.runningWorkers.push(K),de.pthreads[M.pthread_ptr]=K,K.pthread_ptr=M.pthread_ptr;var se={cmd:"run",start_routine:M.startRoutine,arg:M.arg,pthread_ptr:M.pthread_ptr};return K.runPthread=()=>{se.time=performance.now(),K.postMessage(se,M.transferList)},K.loaded&&(K.runPthread(),delete K.runPthread),0}function yh(M){if(x)return eo(1,1,M);Z=M,kt()||(de.terminateAllThreads(),u.onExit&&u.onExit(M),ee=!0),m(M,new Yr(M))}function Q(M,K){if(Z=M,!K&&x)throw Pe(M),"unwind";yh(M)}var le=Q;function Se(M){if(M instanceof Yr||M=="unwind")return Z;m(1,M)}var de={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){x?de.initWorker():de.initMainThread()},initMainThread:function(){for(var M=8;M--;)de.allocateUnusedWorker()},initWorker:function(){j=!1},setExitStatus:function(M){Z=M},terminateAllThreads:function(){for(var M of Object.values(de.pthreads))de.returnWorkerToPool(M);for(var M of de.unusedWorkers)M.terminate();de.unusedWorkers=[]},returnWorkerToPool:function(M){var K=M.pthread_ptr;delete de.pthreads[K],de.unusedWorkers.push(M),de.runningWorkers.splice(de.runningWorkers.indexOf(M),1),M.pthread_ptr=0,Of(K)},receiveObjectTransfer:function(M){},threadInitTLS:function(){de.tlsInitFunctions.forEach(M=>M())},loadWasmModuleToWorker:function(M,K){M.onmessage=se=>{var ce=se.data,ke=ce.cmd;if(M.pthread_ptr&&(de.currentProxiedOperationCallerThread=M.pthread_ptr),ce.targetThread&&ce.targetThread!=wh()){var He=de.pthreads[ce.targetThread];He?He.postMessage(ce,ce.transferList):U('Internal error! Worker sent a message "'+ke+'" to target pthread '+ce.targetThread+", but that thread no longer exists!"),de.currentProxiedOperationCallerThread=void 0;return}ke==="processProxyingQueue"?Mf(ce.queue):ke==="spawnThread"?is(ce):ke==="cleanupThread"?ss(ce.thread):ke==="killThread"?Qi(ce.thread):ke==="cancelThread"?gh(ce.thread):ke==="loaded"?(M.loaded=!0,K&&K(M),M.runPthread&&(M.runPthread(),delete M.runPthread)):ke==="print"?W("Thread "+ce.threadId+": "+ce.text):ke==="printErr"?U("Thread "+ce.threadId+": "+ce.text):ke==="alert"?alert("Thread "+ce.threadId+": "+ce.text):ce.target==="setimmediate"?M.postMessage(ce):ke==="onAbort"?u.onAbort&&u.onAbort(ce.arg):ke&&U("worker sent an unknown command "+ke),de.currentProxiedOperationCallerThread=void 0},M.onerror=se=>{var ce="worker sent an error!";throw U(ce+" "+se.filename+":"+se.lineno+": "+se.message),se},b&&(M.on("message",function(se){M.onmessage({data:se})}),M.on("error",function(se){M.onerror(se)}),M.on("detachedExit",function(){})),M.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||r,wasmMemory:H,wasmModule:X})},allocateUnusedWorker:function(){var M=I("tfjs-backend-wasm-threaded-simd.worker.js");de.unusedWorkers.push(new Worker(M))},getNewWorker:function(){return de.unusedWorkers.length==0&&(de.allocateUnusedWorker(),de.loadWasmModuleToWorker(de.unusedWorkers[0])),de.unusedWorkers.pop()}};u.PThread=de;function it(M){for(;M.length>0;)M.shift()(u)}function ct(M){var K=Lf(),se=M();return vh(K),se}function Be(){var M=wh(),K=o()[M+44>>2],se=o()[M+48>>2],ce=K-se;Lw(K,ce),vh(K)}u.establishStackSpace=Be;function Pe(M){if(x)return eo(2,0,M);try{le(M)}catch(K){Se(K)}}var gt=[];function Zn(M){var K=gt[M];return K||(M>=gt.length&&(gt.length=M+1),gt[M]=K=$e.get(M)),K}function Jr(M,K){var se=Zn(M)(K);kt()?de.setExitStatus(se):Ow(se)}u.invokeEntryPoint=Jr;function bh(M){de.tlsInitFunctions.push(M)}function yu(M,K){s().set(M,K)}function Ff(M){Fw(M,!y,1,!g),de.threadInitTLS()}function kn(M){x?postMessage({cmd:"cleanupThread",thread:M}):ss(M)}function Qr(M,K,se,ce){return x?eo(3,1,M,K,se,ce):bu(M,K,se,ce)}function bu(M,K,se,ce){if(typeof SharedArrayBuffer>"u")return U("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var ke=[],He=0;if(x&&(ke.length===0||He))return Qr(M,K,se,ce);var _e={startRoutine:se,pthread_ptr:M,arg:ce,transferList:ke};return x?(_e.cmd="spawnThread",postMessage(_e,ke),0):is(_e)}function RC(){return 2097152}var FC=!0;function MC(){return FC}function Mf(M){Atomics.store(o(),M>>2,1),wh()&&Dw(M),Atomics.compareExchange(o(),M>>2,1,0)}u.executeNotifiedProxyingQueue=Mf;function DC(M,K,se,ce){if(M==K)setTimeout(()=>Mf(ce));else if(x)postMessage({targetThread:M,cmd:"processProxyingQueue",queue:ce});else{var ke=de.pthreads[M];if(!ke)return;ke.postMessage({cmd:"processProxyingQueue",queue:ce})}return 1}function OC(M,K,se){return-1}function LC(){Xr("")}function xu(M){xu.shown||(xu.shown={}),xu.shown[M]||(xu.shown[M]=1,b&&(M="warning: "+M),U(M))}function zC(){b||y||xu("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function PC(){return Date.now()}function _w(){return 2147483648}function BC(){return _w()}var xh;b?xh=()=>{var M=process.hrtime();return M[0]*1e3+M[1]/1e6}:x?xh=()=>performance.now()-u.__performance_now_clock_drift:xh=()=>performance.now();function WC(M,K,se){i().copyWithin(M,K,K+se)}function VC(){return b?FE().cpus().length:navigator.hardwareConcurrency}function eo(M,K){var se=arguments.length-2,ce=arguments;return ct(()=>{for(var ke=se,He=kh(ke*8),_e=He>>3,Ae=0;Ae<se;Ae++){var Tt=ce[2+Ae];p()[_e+Ae]=Tt}return Mw(M,ke,He,K)})}var Df=[];function UC(M,K,se){Df.length=K;for(var ce=se>>3,ke=0;ke<K;ke++)Df[ke]=p()[ce+ke];var He=M<0,_e=He?mh[-M-1]:YC[M];return _e.apply(null,Df)}function GC(M){try{return H.grow(M-he.byteLength+65535>>>16),Ge(H.buffer),1}catch{}}function HC(M){var K=i().length;if(M=M>>>0,M<=K)return!1;var se=_w();if(M>se)return!1;let ce=(Tt,Yn)=>Tt+(Yn-Tt%Yn)%Yn;for(var ke=1;ke<=4;ke*=2){var He=K*(1+.2/ke);He=Math.min(He,M+100663296);var _e=Math.min(se,ce(Math.max(M,He),65536)),Ae=GC(_e);if(Ae)return!0}return!1}function qC(){throw"unwind"}function Cw(M){return x?eo(4,1,M):52}function Ew(M,K,se,ce,ke){return x?eo(5,1,M,K,se,ce,ke):70}var jC=[null,[],[]];function KC(M,K){var se=jC[M];K===0||K===10?((M===1?W:U)(ae(se,0)),se.length=0):se.push(K)}function $w(M,K,se,ce){if(x)return eo(6,1,M,K,se,ce);for(var ke=0,He=0;He<se;He++){var _e=l()[K>>2],Ae=l()[K+4>>2];K+=8;for(var Tt=0;Tt<Ae;Tt++)KC(M,i()[_e+Tt]);ke+=Ae}return l()[ce>>2]=ke,0}function Aw(M){var K=u["_"+M];return K}function XC(M,K,se,ce,ke){var He={string:Jn=>{var to=0;if(Jn!=null&&Jn!==0){var Bw=(Jn.length<<2)+1;to=kh(Bw),ge(Jn,to,Bw)}return to},array:Jn=>{var to=kh(Jn.length);return yu(Jn,to),to}};function _e(Jn){return K==="string"?oe(Jn):K==="boolean"?Boolean(Jn):Jn}var Ae=Aw(M),Tt=[],Yn=0;if(ce)for(var ea=0;ea<ce.length;ea++){var Pw=He[se[ea]];Pw?(Yn===0&&(Yn=Lf()),Tt[ea]=Pw(ce[ea])):Tt[ea]=ce[ea]}var zf=Ae.apply(null,Tt);function QC(Jn){return Yn!==0&&vh(Yn),_e(Jn)}return zf=QC(zf),zf}function ZC(M,K,se,ce){se=se||[];var ke=se.every(_e=>_e==="number"||_e==="boolean"),He=K!=="string";return He&&ke&&!ce?Aw(M):function(){return XC(M,K,se,arguments)}}de.init();var YC=[null,yh,Pe,Qr,Cw,Ew,$w],Rw={__emscripten_init_main_thread_js:Ff,__emscripten_thread_cleanup:kn,__pthread_create_js:bu,_emscripten_default_pthread_stack_size:RC,_emscripten_get_now_is_monotonic:MC,_emscripten_notify_task_queue:DC,_emscripten_set_offscreencanvas_size:OC,abort:LC,emscripten_check_blocking_allowed:zC,emscripten_date_now:PC,emscripten_get_heap_max:BC,emscripten_get_now:xh,emscripten_memcpy_big:WC,emscripten_num_logical_cores:VC,emscripten_receive_on_main_thread_js:UC,emscripten_resize_heap:HC,emscripten_unwind_to_js_event_loop:qC,exit:le,fd_close:Cw,fd_seek:Ew,fd_write:$w,memory:H||u.wasmMemory};fh(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.__wasm_call_ctors).apply(null,arguments)},u._init=function(){return(u._init=u.asm.init).apply(null,arguments)},u._init_with_threads_count=function(){return(u._init_with_threads_count=u.asm.init_with_threads_count).apply(null,arguments)},u._get_threads_count=function(){return(u._get_threads_count=u.asm.get_threads_count).apply(null,arguments)},u._register_tensor=function(){return(u._register_tensor=u.asm.register_tensor).apply(null,arguments)},u._dispose_data=function(){return(u._dispose_data=u.asm.dispose_data).apply(null,arguments)},u._dispose=function(){return(u._dispose=u.asm.dispose).apply(null,arguments)},u._Abs=function(){return(u._Abs=u.asm.Abs).apply(null,arguments)},u._Add=function(){return(u._Add=u.asm.Add).apply(null,arguments)},u._AddN=function(){return(u._AddN=u.asm.AddN).apply(null,arguments)},u._All=function(){return(u._All=u.asm.All).apply(null,arguments)},u._Any=function(){return(u._Any=u.asm.Any).apply(null,arguments)},u._ArgMax=function(){return(u._ArgMax=u.asm.ArgMax).apply(null,arguments)},u._AvgPool=function(){return(u._AvgPool=u.asm.AvgPool).apply(null,arguments)},u._BatchMatMul=function(){return(u._BatchMatMul=u.asm.BatchMatMul).apply(null,arguments)},u._Ceil=function(){return(u._Ceil=u.asm.Ceil).apply(null,arguments)},u._ClipByValue=function(){return(u._ClipByValue=u.asm.ClipByValue).apply(null,arguments)},u._Conv2D=function(){return(u._Conv2D=u.asm.Conv2D).apply(null,arguments)},u._Conv2DBackpropInput=function(){return(u._Conv2DBackpropInput=u.asm.Conv2DBackpropInput).apply(null,arguments)},u._Cos=function(){return(u._Cos=u.asm.Cos).apply(null,arguments)},u._Cosh=function(){return(u._Cosh=u.asm.Cosh).apply(null,arguments)},u._CropAndResize=function(){return(u._CropAndResize=u.asm.CropAndResize).apply(null,arguments)},u._Cumprod=function(){return(u._Cumprod=u.asm.Cumprod).apply(null,arguments)},u._Cumsum=function(){return(u._Cumsum=u.asm.Cumsum).apply(null,arguments)},u._DepthToSpace=function(){return(u._DepthToSpace=u.asm.DepthToSpace).apply(null,arguments)},u._DepthwiseConv2dNative=function(){return(u._DepthwiseConv2dNative=u.asm.DepthwiseConv2dNative).apply(null,arguments)},u._Elu=function(){return(u._Elu=u.asm.Elu).apply(null,arguments)},u._Equal=function(){return(u._Equal=u.asm.Equal).apply(null,arguments)},u._Exp=function(){return(u._Exp=u.asm.Exp).apply(null,arguments)},u._FlipLeftRight=function(){return(u._FlipLeftRight=u.asm.FlipLeftRight).apply(null,arguments)},u._Floor=function(){return(u._Floor=u.asm.Floor).apply(null,arguments)},u._FloorDiv=function(){return(u._FloorDiv=u.asm.FloorDiv).apply(null,arguments)},u._FusedBatchNorm=function(){return(u._FusedBatchNorm=u.asm.FusedBatchNorm).apply(null,arguments)},u._FusedConv2D=function(){return(u._FusedConv2D=u.asm.FusedConv2D).apply(null,arguments)},u._FusedDepthwiseConv2D=function(){return(u._FusedDepthwiseConv2D=u.asm.FusedDepthwiseConv2D).apply(null,arguments)},u._Gather=function(){return(u._Gather=u.asm.Gather).apply(null,arguments)},u._GatherNd=function(){return(u._GatherNd=u.asm.GatherNd).apply(null,arguments)},u._Greater=function(){return(u._Greater=u.asm.Greater).apply(null,arguments)},u._GreaterEqual=function(){return(u._GreaterEqual=u.asm.GreaterEqual).apply(null,arguments)},u._LeakyRelu=function(){return(u._LeakyRelu=u.asm.LeakyRelu).apply(null,arguments)},u._Less=function(){return(u._Less=u.asm.Less).apply(null,arguments)},u._LessEqual=function(){return(u._LessEqual=u.asm.LessEqual).apply(null,arguments)},u._Log=function(){return(u._Log=u.asm.Log).apply(null,arguments)},u._LogicalAnd=function(){return(u._LogicalAnd=u.asm.LogicalAnd).apply(null,arguments)},u._LogicalNot=function(){return(u._LogicalNot=u.asm.LogicalNot).apply(null,arguments)},u._LogicalOr=function(){return(u._LogicalOr=u.asm.LogicalOr).apply(null,arguments)},u._LogicalXor=function(){return(u._LogicalXor=u.asm.LogicalXor).apply(null,arguments)},u._Max=function(){return(u._Max=u.asm.Max).apply(null,arguments)},u._MaxPool=function(){return(u._MaxPool=u.asm.MaxPool).apply(null,arguments)},u._Maximum=function(){return(u._Maximum=u.asm.Maximum).apply(null,arguments)},u._Mean=function(){return(u._Mean=u.asm.Mean).apply(null,arguments)},u._Min=function(){return(u._Min=u.asm.Min).apply(null,arguments)},u._Minimum=function(){return(u._Minimum=u.asm.Minimum).apply(null,arguments)},u._MirrorPad=function(){return(u._MirrorPad=u.asm.MirrorPad).apply(null,arguments)},u._Multiply=function(){return(u._Multiply=u.asm.Multiply).apply(null,arguments)},u._Neg=function(){return(u._Neg=u.asm.Neg).apply(null,arguments)},u._NonMaxSuppressionV3=function(){return(u._NonMaxSuppressionV3=u.asm.NonMaxSuppressionV3).apply(null,arguments)},u._NonMaxSuppressionV4=function(){return(u._NonMaxSuppressionV4=u.asm.NonMaxSuppressionV4).apply(null,arguments)},u._NonMaxSuppressionV5=function(){return(u._NonMaxSuppressionV5=u.asm.NonMaxSuppressionV5).apply(null,arguments)},u._NotEqual=function(){return(u._NotEqual=u.asm.NotEqual).apply(null,arguments)},u._OneHot=function(){return(u._OneHot=u.asm.OneHot).apply(null,arguments)},u._PadV2=function(){return(u._PadV2=u.asm.PadV2).apply(null,arguments)},u._Pow=function(){return(u._Pow=u.asm.Pow).apply(null,arguments)},u._Prelu=function(){return(u._Prelu=u.asm.Prelu).apply(null,arguments)},u._Prod=function(){return(u._Prod=u.asm.Prod).apply(null,arguments)},u._RealDiv=function(){return(u._RealDiv=u.asm.RealDiv).apply(null,arguments)},u._Relu=function(){return(u._Relu=u.asm.Relu).apply(null,arguments)},u._Relu6=function(){return(u._Relu6=u.asm.Relu6).apply(null,arguments)},u._ResizeBilinear=function(){return(u._ResizeBilinear=u.asm.ResizeBilinear).apply(null,arguments)},u._ResizeNearestNeighbor=function(){return(u._ResizeNearestNeighbor=u.asm.ResizeNearestNeighbor).apply(null,arguments)},u._Reverse=function(){return(u._Reverse=u.asm.Reverse).apply(null,arguments)},u._RotateWithOffset=function(){return(u._RotateWithOffset=u.asm.RotateWithOffset).apply(null,arguments)},u._Round=function(){return(u._Round=u.asm.Round).apply(null,arguments)},u._Rsqrt=function(){return(u._Rsqrt=u.asm.Rsqrt).apply(null,arguments)},u._ScatterNd=function(){return(u._ScatterNd=u.asm.ScatterNd).apply(null,arguments)},u._SelectV2=function(){return(u._SelectV2=u.asm.SelectV2).apply(null,arguments)},u._Sigmoid=function(){return(u._Sigmoid=u.asm.Sigmoid).apply(null,arguments)},u._Sin=function(){return(u._Sin=u.asm.Sin).apply(null,arguments)},u._Softmax=function(){return(u._Softmax=u.asm.Softmax).apply(null,arguments)},u._SparseFillEmptyRows=function(){return(u._SparseFillEmptyRows=u.asm.SparseFillEmptyRows).apply(null,arguments)},u._SparseReshape=function(){return(u._SparseReshape=u.asm.SparseReshape).apply(null,arguments)},u._SparseSegmentReduction=function(){return(u._SparseSegmentReduction=u.asm.SparseSegmentReduction).apply(null,arguments)},u._Sqrt=function(){return(u._Sqrt=u.asm.Sqrt).apply(null,arguments)},u._Square=function(){return(u._Square=u.asm.Square).apply(null,arguments)},u._SquaredDifference=function(){return(u._SquaredDifference=u.asm.SquaredDifference).apply(null,arguments)},u._Step=function(){return(u._Step=u.asm.Step).apply(null,arguments)},u._StridedSlice=function(){return(u._StridedSlice=u.asm.StridedSlice).apply(null,arguments)},u._Sub=function(){return(u._Sub=u.asm.Sub).apply(null,arguments)},u._Sum=function(){return(u._Sum=u.asm.Sum).apply(null,arguments)},u._Tan=function(){return(u._Tan=u.asm.Tan).apply(null,arguments)},u._Tanh=function(){return(u._Tanh=u.asm.Tanh).apply(null,arguments)},u._Tile=function(){return(u._Tile=u.asm.Tile).apply(null,arguments)},u._TopK=function(){return(u._TopK=u.asm.TopK).apply(null,arguments)},u._Transform=function(){return(u._Transform=u.asm.Transform).apply(null,arguments)},u._Transpose=function(){return(u._Transpose=u.asm.Transpose).apply(null,arguments)},u.__FusedMatMul=function(){return(u.__FusedMatMul=u.asm._FusedMatMul).apply(null,arguments)},u._malloc=function(){return(u._malloc=u.asm.malloc).apply(null,arguments)},u._free=function(){return(u._free=u.asm.free).apply(null,arguments)},u.__emscripten_tls_init=function(){return(u.__emscripten_tls_init=u.asm._emscripten_tls_init).apply(null,arguments)};var wh=u._pthread_self=function(){return(wh=u._pthread_self=u.asm.pthread_self).apply(null,arguments)};u.___errno_location=function(){return(u.___errno_location=u.asm.__errno_location).apply(null,arguments)};var Fw=u.__emscripten_thread_init=function(){return(Fw=u.__emscripten_thread_init=u.asm._emscripten_thread_init).apply(null,arguments)};u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm._emscripten_thread_crashed).apply(null,arguments)},u._emscripten_main_thread_process_queued_calls=function(){return(u._emscripten_main_thread_process_queued_calls=u.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},u._emscripten_main_browser_thread_id=function(){return(u._emscripten_main_browser_thread_id=u.asm.emscripten_main_browser_thread_id).apply(null,arguments)};var Mw=u._emscripten_run_in_main_runtime_thread_js=function(){return(Mw=u._emscripten_run_in_main_runtime_thread_js=u.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)};u._emscripten_dispatch_to_thread_=function(){return(u._emscripten_dispatch_to_thread_=u.asm.emscripten_dispatch_to_thread_).apply(null,arguments)};var Dw=u.__emscripten_proxy_execute_task_queue=function(){return(Dw=u.__emscripten_proxy_execute_task_queue=u.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)},Of=u.__emscripten_thread_free_data=function(){return(Of=u.__emscripten_thread_free_data=u.asm._emscripten_thread_free_data).apply(null,arguments)},Ow=u.__emscripten_thread_exit=function(){return(Ow=u.__emscripten_thread_exit=u.asm._emscripten_thread_exit).apply(null,arguments)},Lw=u._emscripten_stack_set_limits=function(){return(Lw=u._emscripten_stack_set_limits=u.asm.emscripten_stack_set_limits).apply(null,arguments)},Lf=u.stackSave=function(){return(Lf=u.stackSave=u.asm.stackSave).apply(null,arguments)},vh=u.stackRestore=function(){return(vh=u.stackRestore=u.asm.stackRestore).apply(null,arguments)},kh=u.stackAlloc=function(){return(kh=u.stackAlloc=u.asm.stackAlloc).apply(null,arguments)};u.dynCall_iijjiiii=function(){return(u.dynCall_iijjiiii=u.asm.dynCall_iijjiiii).apply(null,arguments)},u.dynCall_jiji=function(){return(u.dynCall_jiji=u.asm.dynCall_jiji).apply(null,arguments)},u.keepRuntimeAlive=kt,u.wasmMemory=H,u.cwrap=ZC,u.ExitStatus=Yr,u.PThread=de;var Ih;Xn=function M(){Ih||zw(),Ih||(Xn=M)};function zw(M){if(jt>0)return;if(x){h(u),qt(),postMessage({cmd:"loaded"});return}if(wn(),jt>0)return;function K(){Ih||(Ih=!0,u.calledRun=!0,!ee&&(qt(),h(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),Mn()))}u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),K()},1)):K()}if(u.preInit)for(typeof u.preInit=="function"&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();zw();var Sh;c&&(Sh={uncaughtException:process.listeners("uncaughtException").filter(function(M){return!c.uncaughtException.indexOf(M)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(M){return!c.unhandledRejection.indexOf(M)>-1})});var Nh;if(typeof WasmBackendModule<"u")Nh=WasmBackendModule;else if(typeof a<"u")Nh=a;else throw new Error("Could not find wasm module in post.js");if(Sh){var JC=Nh._dispose;Nh._dispose=function(){JC(),Sh.uncaughtException.forEach(function(M){process.removeListener("uncaughtException",M)}),Sh.unhandledRejection.forEach(function(M){process.removeListener("unhandledRejection",M)})}}return a.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}),DE=$t((e,t)=>{t.exports.wasmWorkerContents=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};`}),OE=$t((e,t)=>{var n=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(a){a=a||{};var s=typeof a<"u"?a:{},i,o;s.ready=new Promise(function(Q,le){i=Q,o=le});var l;typeof process<"u"&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var p=Object.assign({},s),u=typeof window=="object",h=typeof importScripts=="function",d=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",c="";function f(Q){return s.locateFile?s.locateFile(Q,c):c+Q}var m,g,y;if(d){h?c=Jh().dirname(c)+"/":c=__dirname+"/";var b,x;typeof R0=="function"&&(b=hg(),x=Jh()),m=(Q,le)=>(Q=x.normalize(Q),b.readFileSync(Q,le?void 0:"utf8")),y=Q=>{var le=m(Q,!0);return le.buffer||(le=new Uint8Array(le)),le},g=(Q,le,Se)=>{Q=x.normalize(Q),b.readFile(Q,function(de,it){de?Se(de):le(it.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(Q){if(!(Q instanceof kt))throw Q}),process.on("unhandledRejection",function(Q){throw Q}),s.inspect=function(){return"[Emscripten Module object]"}}else(u||h)&&(h?c=self.location.href:typeof document<"u"&&document.currentScript&&(c=document.currentScript.src),r&&(c=r),c.indexOf("blob:")!==0?c=c.substr(0,c.replace(/[?#].*/,"").lastIndexOf("/")+1):c="",m=Q=>{var le=new XMLHttpRequest;return le.open("GET",Q,!1),le.send(null),le.responseText},h&&(y=Q=>{var le=new XMLHttpRequest;return le.open("GET",Q,!1),le.responseType="arraybuffer",le.send(null),new Uint8Array(le.response)}),g=(Q,le,Se)=>{var de=new XMLHttpRequest;de.open("GET",Q,!0),de.responseType="arraybuffer",de.onload=()=>{if(de.status==200||de.status==0&&de.response){le(de.response);return}Se()},de.onerror=Se,de.send(null)});var w=s.print||console.log.bind(console),I=s.printErr||console.warn.bind(console);Object.assign(s,p),p=null,s.arguments&&s.arguments,s.thisProgram&&s.thisProgram,s.quit&&s.quit;var N;s.wasmBinary&&(N=s.wasmBinary),s.noExitRuntime,typeof WebAssembly!="object"&&ze("no native wasm support detected");var C,E=!1,$=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function F(Q,le,Se){for(var de=le+Se,it=le;Q[it]&&!(it>=de);)++it;if(it-le>16&&Q.buffer&&$)return $.decode(Q.subarray(le,it));for(var ct="";le<it;){var Be=Q[le++];if(!(Be&128)){ct+=String.fromCharCode(Be);continue}var Pe=Q[le++]&63;if((Be&224)==192){ct+=String.fromCharCode((Be&31)<<6|Pe);continue}var gt=Q[le++]&63;if((Be&240)==224?Be=(Be&15)<<12|Pe<<6|gt:Be=(Be&7)<<18|Pe<<12|gt<<6|Q[le++]&63,Be<65536)ct+=String.fromCharCode(Be);else{var Zn=Be-65536;ct+=String.fromCharCode(55296|Zn>>10,56320|Zn&1023)}}return ct}function R(Q,le){return Q?F(G,Q,le):""}function S(Q,le,Se,de){if(!(de>0))return 0;for(var it=Se,ct=Se+de-1,Be=0;Be<Q.length;++Be){var Pe=Q.charCodeAt(Be);if(Pe>=55296&&Pe<=57343){var gt=Q.charCodeAt(++Be);Pe=65536+((Pe&1023)<<10)|gt&1023}if(Pe<=127){if(Se>=ct)break;le[Se++]=Pe}else if(Pe<=2047){if(Se+1>=ct)break;le[Se++]=192|Pe>>6,le[Se++]=128|Pe&63}else if(Pe<=65535){if(Se+2>=ct)break;le[Se++]=224|Pe>>12,le[Se++]=128|Pe>>6&63,le[Se++]=128|Pe&63}else{if(Se+3>=ct)break;le[Se++]=240|Pe>>18,le[Se++]=128|Pe>>12&63,le[Se++]=128|Pe>>6&63,le[Se++]=128|Pe&63}}return le[Se]=0,Se-it}function D(Q,le,Se){return S(Q,G,le,Se)}var W,U,G,j;function H(Q){W=Q,s.HEAP8=U=new Int8Array(Q),s.HEAP16=new Int16Array(Q),s.HEAP32=new Int32Array(Q),s.HEAPU8=G=new Uint8Array(Q),s.HEAPU16=new Uint16Array(Q),s.HEAPU32=j=new Uint32Array(Q),s.HEAPF32=new Float32Array(Q),s.HEAPF64=new Float64Array(Q)}s.INITIAL_MEMORY;var X=[],ee=[],Z=[];function re(){if(s.preRun)for(typeof s.preRun=="function"&&(s.preRun=[s.preRun]);s.preRun.length;)oe(s.preRun.shift());wn(X)}function te(){wn(ee)}function ae(){if(s.postRun)for(typeof s.postRun=="function"&&(s.postRun=[s.postRun]);s.postRun.length;)ge(s.postRun.shift());wn(Z)}function oe(Q){X.unshift(Q)}function xe(Q){ee.unshift(Q)}function ge(Q){Z.unshift(Q)}var he=0,Ie=null;function Ne(Q){he++,s.monitorRunDependencies&&s.monitorRunDependencies(he)}function De(Q){if(he--,s.monitorRunDependencies&&s.monitorRunDependencies(he),he==0&&Ie){var le=Ie;Ie=null,le()}}function ze(Q){s.onAbort&&s.onAbort(Q),Q="Aborted("+Q+")",I(Q),E=!0,Q+=". Build with -sASSERTIONS for more info.";var le=new WebAssembly.RuntimeError(Q);throw o(le),le}var Xe="data:application/octet-stream;base64,";function Ge(Q){return Q.startsWith(Xe)}function Ke(Q){return Q.startsWith("file://")}var $e;$e="tfjs-backend-wasm.wasm",Ge($e)||($e=f($e));function et(Q){try{if(Q==$e&&N)return new Uint8Array(N);if(y)return y(Q);throw"both async and sync fetching of the wasm failed"}catch(le){ze(le)}}function st(){if(!N&&(u||h)){if(typeof fetch=="function"&&!Ke($e))return fetch($e,{credentials:"same-origin"}).then(function(Q){if(!Q.ok)throw"failed to load wasm binary file at '"+$e+"'";return Q.arrayBuffer()}).catch(function(){return et($e)});if(g)return new Promise(function(Q,le){g($e,function(Se){Q(new Uint8Array(Se))},le)})}return Promise.resolve().then(function(){return et($e)})}function Fn(){var Q={env:ch,wasi_snapshot_preview1:ch};function le(Be,Pe){var gt=Be.exports;s.asm=gt,C=s.asm.memory,H(C.buffer),s.asm.__indirect_function_table,xe(s.asm.__wasm_call_ctors),De()}Ne();function Se(Be){le(Be.instance)}function de(Be){return st().then(function(Pe){return WebAssembly.instantiate(Pe,Q)}).then(function(Pe){return Pe}).then(Be,function(Pe){I("failed to asynchronously prepare wasm: "+Pe),ze(Pe)})}function it(){return!N&&typeof WebAssembly.instantiateStreaming=="function"&&!Ge($e)&&!Ke($e)&&!d&&typeof fetch=="function"?fetch($e,{credentials:"same-origin"}).then(function(Be){var Pe=WebAssembly.instantiateStreaming(Be,Q);return Pe.then(Se,function(gt){return I("wasm streaming compile failed: "+gt),I("falling back to ArrayBuffer instantiation"),de(Se)})}):de(Se)}if(s.instantiateWasm)try{var ct=s.instantiateWasm(Q,le);return ct}catch(Be){I("Module.instantiateWasm callback failed with error: "+Be),o(Be)}return it().catch(o),{}}function kt(Q){this.name="ExitStatus",this.message="Program terminated with exit("+Q+")",this.status=Q}function wn(Q){for(;Q.length>0;)Q.shift()(s)}function qt(Q,le){U.set(Q,le)}function Mn(){ze("")}function Kn(){return 2147483648}function Dn(){return Kn()}function vn(Q,le,Se){G.copyWithin(Q,le,le+Se)}function jt(Q){try{return C.grow(Q-W.byteLength+65535>>>16),H(C.buffer),1}catch{}}function Xn(Q){var le=G.length;Q=Q>>>0;var Se=Kn();if(Q>Se)return!1;let de=(gt,Zn)=>gt+(Zn-gt%Zn)%Zn;for(var it=1;it<=4;it*=2){var ct=le*(1+.2/it);ct=Math.min(ct,Q+100663296);var Be=Math.min(Se,de(Math.max(Q,ct),65536)),Pe=jt(Be);if(Pe)return!0}return!1}function ya(Q){return 52}function mu(Q,le,Se,de,it){return 70}var Xr=[null,[],[]];function gu(Q,le){var Se=Xr[Q];le===0||le===10?((Q===1?w:I)(F(Se,0)),Se.length=0):Se.push(le)}function Zr(Q,le,Se,de){for(var it=0,ct=0;ct<Se;ct++){var Be=j[le>>2],Pe=j[le+4>>2];le+=8;for(var gt=0;gt<Pe;gt++)gu(Q,G[Be+gt]);it+=Pe}return j[de>>2]=it,0}function as(Q){var le=s["_"+Q];return le}function Kt(Q,le,Se,de,it){var ct={string:kn=>{var Qr=0;if(kn!=null&&kn!==0){var bu=(kn.length<<2)+1;Qr=Yr(bu),D(kn,Qr,bu)}return Qr},array:kn=>{var Qr=Yr(kn.length);return qt(kn,Qr),Qr}};function Be(kn){return le==="string"?R(kn):le==="boolean"?Boolean(kn):kn}var Pe=as(Q),gt=[],Zn=0;if(de)for(var Jr=0;Jr<de.length;Jr++){var bh=ct[Se[Jr]];bh?(Zn===0&&(Zn=fh()),gt[Jr]=bh(de[Jr])):gt[Jr]=de[Jr]}var yu=Pe.apply(null,gt);function Ff(kn){return Zn!==0&&mh(Zn),Be(kn)}return yu=Ff(yu),yu}function dh(Q,le,Se,de){Se=Se||[];var it=Se.every(Be=>Be==="number"||Be==="boolean"),ct=le!=="string";return ct&&it&&!de?as(Q):function(){return Kt(Q,le,Se,arguments)}}var ch={abort:Mn,emscripten_get_heap_max:Dn,emscripten_memcpy_big:vn,emscripten_resize_heap:Xn,fd_close:ya,fd_seek:mu,fd_write:Zr};Fn(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._All=function(){return(s._All=s.asm.All).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.Any).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.Ceil).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.Cosh).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumprod=function(){return(s._Cumprod=s.asm.Cumprod).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.Elu).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.Floor).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._LogicalNot=function(){return(s._LogicalNot=s.asm.LogicalNot).apply(null,arguments)},s._LogicalOr=function(){return(s._LogicalOr=s.asm.LogicalOr).apply(null,arguments)},s._LogicalXor=function(){return(s._LogicalXor=s.asm.LogicalXor).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.Mean).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.Neg).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.Prod).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.RealDiv).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._ResizeNearestNeighbor=function(){return(s._ResizeNearestNeighbor=s.asm.ResizeNearestNeighbor).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.Round).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Step).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Tan).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.TopK).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Transform).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.___errno_location=function(){return(s.___errno_location=s.asm.__errno_location).apply(null,arguments)};var fh=s.stackSave=function(){return(fh=s.stackSave=s.asm.stackSave).apply(null,arguments)},mh=s.stackRestore=function(){return(mh=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},Yr=s.stackAlloc=function(){return(Yr=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)};s.dynCall_iijjiiii=function(){return(s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},s.dynCall_jiji=function(){return(s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)},s.cwrap=dh;var Qi;Ie=function Q(){Qi||gh(),Qi||(Ie=Q)};function gh(Q){if(he>0||(re(),he>0))return;function le(){Qi||(Qi=!0,s.calledRun=!0,!E&&(te(),i(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),ae()))}s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),le()},1)):le()}if(s.preInit)for(typeof s.preInit=="function"&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();gh();var ss;l&&(ss={uncaughtException:process.listeners("uncaughtException").filter(function(Q){return!l.uncaughtException.indexOf(Q)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(Q){return!l.unhandledRejection.indexOf(Q)>-1})});var is;if(typeof a<"u")is=a;else if(typeof WasmBackendModuleThreadedSimd<"u")is=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(ss){var yh=is._dispose;is._dispose=function(){yh(),ss.uncaughtException.forEach(function(Q){process.removeListener("uncaughtException",Q)}),ss.unhandledRejection.forEach(function(Q){process.removeListener("unhandledRejection",Q)})}}return a.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}),Od=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},op=class{refCount(e){return On("refCount")}incRef(e){return On("incRef")}timerAvailable(){return!0}time(e){return On("time")}read(e){return On("read")}readSync(e){return On("readSync")}readToGPU(e,t){return On("readToGPU")}numDataIds(){return On("numDataIds")}disposeData(e,t){return On("disposeData")}write(e,t,n){return On("write")}move(e,t,n,r,a){return On("move")}createTensorFromTexture(e,t,n){return On("createTensorFromTexture")}memory(){return On("memory")}floatPrecision(){return On("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return On("dispose")}};function On(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function M0(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Qh(e,t,n)}function LE(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,Qh(e,n,r),Qh(t,n,r)}function Uu(e,t,n){return Math.max(e,Math.min(t,n))}function zE(e){return e%2===0?e:e+1}function Qh(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function PE(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function BE(e,t){let n=Math.random();return t*n+(1-n)*e}function WE(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function A(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function mn(e,t,n=""){A(Va(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function Us(e){A(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Ts(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||rn(e)&&!n)for(let r=0;r<e.length;++r)Ts(e[r],t,n);else t.push(e);return t}function lt(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function VE(e){return e.length===0}function Va(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function wo(e){return e%1===0}function UE(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function GE(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function HE(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return M0(t),t}function Lu(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function qE(e,t=a=>0,n,r){return new Promise((a,s)=>{let i=0,o=()=>{if(e()){a();return}i++;let l=t(i);if(n!=null&&i>=n){s();return}r!=null?r(o,l):setTimeout(o,l)};o()})}function jE(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(e[s]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(r===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function gr(e,t){let n=t.length;return e=e==null?t.map((r,a)=>a):[].concat(e),A(e.every(r=>r>=-n&&r<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),A(e.every(r=>wo(r)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(r=>r<0?n+r:r)}function D0(e,t){let n=[],r=[],a=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||a?null:gr(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(s!=null){if(s[i]===o&&e[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(s[i]==null||s[i]>o)&&e[o]===1&&(n.push(e[o]),r.push(o)),s[i]<=o&&i++}e[o]!==1&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function O0(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function L0(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function z0(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function P0(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function KE(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function rn(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function am(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function B0(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function Sa(e){return typeof e=="string"||e instanceof String}function W0(e){return typeof e=="boolean"}function V0(e){return typeof e=="number"}function Ld(e){return Array.isArray(e)?Ld(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":V0(e)?"float32":Sa(e)?"string":W0(e)?"bool":"float32"}function Aa(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ed(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function Bo(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function U0(e,t,n,r=!1){let a=new Array;if(t.length===1){let s=t[0]*(r?2:1);for(let i=0;i<s;i++)a[i]=n[e+i]}else{let s=t[0],i=t.slice(1),o=i.reduce((l,p)=>l*p)*(r?2:1);for(let l=0;l<s;l++)a[l]=U0(e+l*o,i,n,r)}return a}function fo(e,t,n=!1){if(e.length===0)return t[0];let r=e.reduce((a,s)=>a*s)*(n?2:1);if(r===0)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return U0(0,e,t,n)}function dg(e,t){let n=zd(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function zd(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function XE(e,t){let n=e.reduce((r,a)=>r*a,1);if(t==null||t==="float32")return fo(e,new Float32Array(n));if(t==="int32")return fo(e,new Int32Array(n));if(t==="bool")return fo(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function cg(e){e.forEach(t=>{A(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function ZE(e,t,n){if(t===0)return 0;if(t===1)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function YE(e,t,n){if(t===0)return[];if(t===1)return[e];let r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function fg(e){return e&&e.then&&typeof e.then=="function"}var Gw="tfjsflags",G0=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=JE,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(q().getBool("IS_TEST")||q().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let r=this.urlFlags[e];q().getBool("IS_TEST")||q().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(fg(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);Gw in e&&e[Gw].split(",").forEach(t=>{let[n,r]=t.split(":");this.urlFlags[n]=e$(n,r)})}};function JE(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...r)=>(QE(t,r[0],r[1]),r.join("="))),t}function QE(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function e$(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function q(){return mg}var mg=null;function t$(e){mg=e}var Pf;function H0(){if(Pf==null){let e;if(typeof window<"u")e=window;else if(typeof global<"u")e=global;else if(typeof process<"u")e=process;else if(typeof self<"u")e=self;else throw new Error("Could not find a global object");Pf=e}return Pf}function n$(){let e=H0();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function gg(e,t){let n=n$();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var Wo="Abs",Vo="Acos",Uo="Acosh",Ua="Add",Gs="AddN",Go="All",Ho="Any",Hs="ArgMax",lp="ArgMin",qo="Asin",jo="Asinh",Ko="Atan",Xo="Atanh",Zo="Atan2",qs="AvgPool",Pd="AvgPoolGrad",up="AvgPool3D",Bd="AvgPool3DGrad",js="BatchMatMul",Yo="BatchToSpaceND",Wd="Bincount",q0="BroadcastTo",Vd="BroadcastArgs",Ks="Cast",Xs="Ceil",Ga="ClipByValue",Ud="Complex",pp="ComplexAbs",Jo="Concat",Zs="Conv2D",Gd="Conv2DBackpropFilter",Ys="Conv2DBackpropInput",hp="Conv3D",Hd="Conv3DBackpropFilterV2",qd="Conv3DBackpropInputV2",Js="Cos",Qs="Cosh",Qo="Cumprod",ei="Cumsum",el="CropAndResize",jd="DenseBincount",tl="DepthToSpace",ti="DepthwiseConv2dNative",Kd="DepthwiseConv2dNativeBackpropFilter",Xd="DepthwiseConv2dNativeBackpropInput",Zd="Diag",dp="Dilation2D",td="Dilation2DBackpropInput",nd="Dilation2DBackpropFilter",ni="RealDiv",Yd="Einsum",ri="Elu",Jd="EluGrad",nl="Erf",rl="Equal",ai="Exp",al="ExpandDims",sl="Expm1",Qd="FFT",cp="Fill",il="FlipLeftRight",si="Floor",ii="FloorDiv",oi="FusedBatchNorm",ol="GatherV2",ll="GatherNd",ul="Greater",li="GreaterEqual",ui="Identity",ec="IFFT",tc="Imag",pl="IsFinite",hl="IsInf",dl="IsNan",pi="LeakyRelu",cl="Less",fl="LessEqual",nc="LinSpace",hi="Log",ml="Log1p",gl="LogicalAnd",yl="LogicalNot",bl="LogicalOr",j0="LogicalXor",K0="LogSoftmax",r$="LowerBound",fp="LRN",rc="LRNGrad",di="Max",ci="Maximum",fi="MaxPool",ac="MaxPoolGrad",mp="MaxPool3D",sc="MaxPool3DGrad",ic="MaxPoolWithArgmax",mi="Mean",gi="Min",yi="Minimum",bi="MirrorPad",xl="Mod",oc="Multinomial",xi="Multiply",wl="Neg",vl="NotEqual",kl="NonMaxSuppressionV3",Il="NonMaxSuppressionV4",Sl="NonMaxSuppressionV5",Nl="OnesLike",wi="OneHot",Tl="Pack",vi="PadV2",a$="Pool",ki="Pow",Ii="Prelu",Si="Prod",lc="RaggedGather",uc="RaggedRange",pc="RaggedTensorToTensor",gp="Range",hc="Real",_l="Reciprocal",Ni="Relu",Cl="Reshape",Ti="ResizeNearestNeighbor",dc="ResizeNearestNeighborGrad",_i="ResizeBilinear",cc="ResizeBilinearGrad",Ci="Relu6",Ei="Reverse",$i="Round",Ai="Rsqrt",El="ScatterNd",fc="SearchSorted",$l="Select",Al="Selu",Rl="Slice",Ri="Sin",Fl="Sinh",Ml="Sign",Fi="Sigmoid",Dl="Softplus",Mi="Sqrt",Di="Sum",Ol="SpaceToBatchND",Ll="SplitV",Oi="Softmax",yp="SparseFillEmptyRows",zl="SparseReshape",bp="SparseSegmentMean",xp="SparseSegmentSum",mc="SparseToDense",Li="SquaredDifference",wp="Square",Pl="StridedSlice",vp="StringNGrams",kp="StringSplit",Ip="StringToHashBucketFast",zi="Sub",Pi="Tan",Bi="Tanh",Ha="Tile",Bl="TopK",Wl="Transform",oa="Transpose",gc="Unique",Vl="Unpack",Sp="UnsortedSegmentSum",s$="UpperBound",Ul="ZerosLike",qa="Step",rd="FromPixels",Gl="RotateWithOffset",_s="_FusedMatMul",Cs="FusedConv2D",Es="FusedDepthwiseConv2D";function Ia(...e){q().getBool("IS_TEST")||q().getBool("PROD")||console.warn(...e)}function i$(...e){q().getBool("IS_TEST")||q().getBool("PROD")||console.log(...e)}var vo=gg("kernelRegistry",()=>new Map),Gu=gg("gradRegistry",()=>new Map);function ad(e,t){let n=yg(e,t);return vo.get(n)}function sm(e){return Gu.get(e)}function sd(e){let t=vo.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function Np(e){let{kernelName:t,backendName:n}=e,r=yg(t,n);vo.has(r)&&Ia(`The kernel '${t}' for backend '${n}' is already registered`),vo.set(r,e)}function X0(e){let{kernelName:t}=e;Gu.has(t)&&q().getBool("DEBUG")&&Ia(`Overriding the gradient for '${t}'`),Gu.set(t,e)}function o$(e,t){let n=yg(e,t);if(!vo.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);vo.delete(n)}function l$(e){if(!Gu.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Gu.delete(e)}function u$(e,t){sd(e).forEach(n=>{let r=Object.assign({},n,{backendName:t});Np(r)})}function yg(e,t){return`${t}_${e}`}var v={};Ee(v,{arraysEqual:()=>Va,assert:()=>A,assertNonNegativeIntegerDimensions:()=>cg,assertNonNull:()=>Us,assertShapesMatch:()=>mn,bytesFromStringArray:()=>B0,bytesPerElement:()=>am,checkConversionForErrors:()=>z0,clamp:()=>Uu,computeStrides:()=>Bo,createScalarValue:()=>m$,createShuffledIndices:()=>HE,decodeString:()=>id,distSquared:()=>WE,encodeString:()=>_p,fetch:()=>y$,fingerPrint64:()=>f$,flatten:()=>Ts,getArrayFromDType:()=>L0,getTypedArrayFromDType:()=>O0,hasEncodingLoss:()=>KE,hexToLong:()=>Tp,indexToLoc:()=>YE,inferDtype:()=>Ld,inferFromImplicitShape:()=>jE,isBoolean:()=>W0,isFunction:()=>Aa,isInt:()=>wo,isNumber:()=>V0,isPromise:()=>fg,isScalarShape:()=>VE,isString:()=>Sa,isTypedArray:()=>rn,isValidDtype:()=>P0,locToIndex:()=>ZE,makeOnesTypedArray:()=>dg,makeZerosNestedTypedArray:()=>XE,makeZerosTypedArray:()=>zd,nearestDivisor:()=>ed,nearestLargerEven:()=>zE,now:()=>Hu,parseAxisParam:()=>gr,randUniform:()=>BE,repeatedTry:()=>qE,rightPad:()=>Lu,shuffle:()=>M0,shuffleCombo:()=>LE,sizeFromShape:()=>lt,sizeToSquarishShape:()=>GE,squeezeShape:()=>D0,sum:()=>PE,swap:()=>Qh,tanh:()=>UE,toNestedArray:()=>fo,toTypedArray:()=>yc});var Hw=Wa(wE()),fs=Hw.default||Hw;function Tp(e){return fs.fromString(e,!0,16)}var Z0=Tp("c3a5c85c97cb3127"),hs=Tp("b492b66fbe98f273"),on=Tp("9ae16a3b2f90404f");function im(e){return e.xor(e.shru(47))}function Y0(e,t,n){let r=e.slice(t,t+n);return fs.fromBytes(Array.from(r),!0,!0)}function ot(e,t){return Y0(e,t,8)}function qw(e,t){return Y0(e,t,4)}function Pt(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function _a(e,t,n=Tp("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function p$(e,t,n,r,a,s){a=a.add(e),s=Pt(s.add(a).add(r),21);let i=a;return a=a.add(t),a=a.add(n),s=s.add(Pt(a,44)),[a.add(r),s.add(i)]}function Th(e,t,n,r){return p$(ot(e,t),ot(e,t+8),ot(e,t+16),ot(e,t+24),n,r)}function h$(e,t=e.length){if(t>=8){let n=on.add(t*2),r=ot(e,0).add(on),a=ot(e,t-8),s=Pt(a,37).mul(n).add(r),i=Pt(r,25).add(a).mul(n);return _a(s,i,n)}if(t>=4){let n=on.add(t*2),r=qw(e,0);return _a(r.shl(3).add(t),qw(e,t-4),n)}if(t>0){let n=e[0],r=e[t>>1],a=e[t-1],s=n+(r<<8),i=t+(a<<2);return im(on.mul(s).xor(Z0.mul(i))).mul(on)}return on}function d$(e,t=e.length){let n=on.add(t*2),r=ot(e,0).mul(hs),a=ot(e,8),s=ot(e,t-8).mul(n),i=ot(e,t-16).mul(on);return _a(Pt(r.add(a),43).add(Pt(s,30)).add(i),r.add(Pt(a.add(on),18)).add(s),n)}function c$(e,t=e.length){let n=on.add(t*2),r=ot(e,0).mul(on),a=ot(e,8),s=ot(e,t-8).mul(n),i=ot(e,t-16).mul(on),o=Pt(r.add(a),43).add(Pt(s,30)).add(i),l=_a(o,r.add(Pt(a.add(on),18)).add(s),n),p=ot(e,16).mul(n),u=ot(e,24),h=o.add(ot(e,t-32)).mul(n),d=l.add(ot(e,t-24)).mul(n);return _a(Pt(p.add(u),43).add(Pt(h,30)).add(d),p.add(Pt(u.add(r),18)).add(h),n)}function f$(e,t=e.length){let n=fs.fromNumber(81,!0);if(t<=32)return t<=16?h$(e,t):d$(e,t);if(t<=64)return c$(e,t);let r=n,a=n.mul(hs).add(113),s=im(a.mul(on).add(113)).mul(on),i=[fs.UZERO,fs.UZERO],o=[fs.UZERO,fs.UZERO];r=r.mul(on).add(ot(e,0));let l=0,p=(t-1>>6)*64,u=p+(t-1&63)-63;do r=Pt(r.add(a).add(i[0]).add(ot(e,l+8)),37).mul(hs),a=Pt(a.add(i[1]).add(ot(e,l+48)),42).mul(hs),r=r.xor(o[1]),a=a.add(i[0]).add(ot(e,l+40)),s=Pt(s.add(o[0]),33).mul(hs),i=Th(e,l,i[1].mul(hs),r.add(o[0])),o=Th(e,l+32,s.add(o[1]),a.add(ot(e,l+16))),[s,r]=[r,s],l+=64;while(l!==p);let h=hs.add(s.and(255).shl(1));return l=u,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Pt(r.add(a).add(i[0]).add(ot(e,l+8)),37).mul(h),a=Pt(a.add(i[1]).add(ot(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(ot(e,l+40))),s=Pt(s.add(o[0]),33).mul(h),i=Th(e,l,i[1].mul(h),r.add(o[0])),o=Th(e,l+32,s.add(o[1]),a.add(ot(e,l+16))),[s,r]=[r,s],_a(_a(i[0],o[0],h).add(im(a).mul(Z0)).add(s),_a(i[1],o[1],h).add(r),h)}function m$(e,t){return t==="string"?_p(e):yc([e],t)}function g$(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function yc(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Ts(e)),q().getBool("DEBUG")&&z0(e,t),g$(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let r=0;r<n.length;++r)Math.round(e[r])!==0&&(n[r]=1);return n}else throw new Error(`Unknown data type ${t}`)}function Hu(){return q().platform.now()}function y$(e,t){return q().platform.fetch(e,t)}function _p(e,t="utf-8"){return t=t||"utf-8",q().platform.encode(e,t)}function id(e,t="utf-8"){return t=t||"utf-8",q().platform.decode(e,t)}var b$=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new w$)}profileKernel(e,t,n){let r,a=()=>{r=n()},s,i=Hu();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(let o of r)o.dataSync();s=Promise.resolve({kernelMs:Hu()-i})}if(q().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){let l=r[o];l.data().then(p=>{x$(p,l.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then(o=>o.kernelMs),extraInfo:s.then(o=>o.getExtraProfileInfo!=null?o.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(i=>{Promise.all([i.data(),r,s]).then(o=>{this.logger.logKernelProfile(t,i,o[0],o[1],a,o[2])})})}};function x$(e,t,n){if(t!=="float32")return!1;for(let r=0;r<e.length;r++){let a=e[r];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${n}'`),!0}return!1}var w$=class{logKernelProfile(e,t,n,r,a,s){let i=typeof r=="number"?Lu(`${r}ms`,9):r.error,o=Lu(e,25),l=t.rank,p=t.size,u=Lu(t.shape.toString(),14),h="";for(let d in a){let c=a[d];if(c!=null){let f=c.shape||t.shape,m=f.length;h+=`${d}: ${m}D ${m>0?f:""} `}}console.log(`%c${o}	%c${i}	%c${l}D ${u}	%c${p}	%c${h}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function v$(e,t,n){let r={},a={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){let p=e[l],u=p.inputs;for(let h in u){let d=u[h],c=!1;for(let f=0;f<t.length;f++)if(r[d.id]){p.outputs.forEach(m=>r[m.id]=!0),c=!0,a[p.id]=!0;break}if(c)break}}let s={};s[n.id]=!0;let i={};for(let l=e.length-1;l>=0;l--){let p=e[l],u=p.inputs;for(let h=0;h<p.outputs.length;h++)if(s[p.outputs[h].id]){for(let d in u)s[u[d].id]=!0,i[p.id]=!0;break}}let o=[];for(let l=0;l<e.length;l++){let p=e[l];if(a[p.id]&&i[p.id]){let u={};for(let d in p.inputs){let c=p.inputs[d];r[c.id]&&(u[d]=c)}let h=Object.assign({},p);h.inputs=u,h.outputs=p.outputs,o.push(h)}}return o}function k$(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach(l=>{let p=e[l.id];p!=null?i.push(p):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let l in s.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);let p=n(()=>o[l]());if(p.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${p.dtype}'`);let u=s.inputs[l];if(!Va(p.shape,u.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${p.shape}', which does not match the shape of the input '${u.shape}'`);if(e[u.id]==null)e[u.id]=p;else{let h=e[u.id];e[u.id]=r(h,p),h.dispose()}}}}var jw=20,ku=3,Bf=7;function I$(e,t,n,r){let a=Bo(t),s=S$(e,t,n,a),i=t.length,o=Uh(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(p=>"    "+p).join(`
`)),l.join(`
`)}function S$(e,t,n,r){let a=lt(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l=n==="complex64"?_u(e):e;if(o>1)for(let p=0;p<a/s;p++){let u=p*s;for(let h=0;h<s;h++)i[h]=Math.max(i[h],Tu(l[u+h],0,n).length)}return i}function Tu(e,t,n){let r;return Array.isArray(e)?r=`${parseFloat(e[0].toFixed(Bf))} + ${parseFloat(e[1].toFixed(Bf))}j`:Sa(e)?r=`'${e}'`:n==="bool"?r=J0(e):r=parseFloat(e.toFixed(Bf)).toString(),Lu(r,t)}function J0(e){return e===0?"false":"true"}function Uh(e,t,n,r,a,s=!0){let i=n==="complex64"?2:1,o=t[0],l=t.length;if(l===0){if(n==="complex64"){let m=_u(e);return[Tu(m[0],0,n)]}return n==="bool"?[J0(e[0])]:[e[0].toString()]}if(l===1){if(o>jw){let g=ku*i,y=Array.from(e.slice(0,g)),b=Array.from(e.slice((o-ku)*i,o*i));return n==="complex64"&&(y=_u(y),b=_u(b)),["["+y.map((x,w)=>Tu(x,a[w],n)).join(", ")+", ..., "+b.map((x,w)=>Tu(x,a[o-ku+w],n)).join(", ")+"]"]}return["["+(n==="complex64"?_u(e):Array.from(e)).map((g,y)=>Tu(g,a[y],n)).join(", ")+"]"]}let p=t.slice(1),u=r.slice(1),h=r[0]*i,d=[];if(o>jw){for(let m=0;m<ku;m++){let g=m*h,y=g+h;d.push(...Uh(e.slice(g,y),p,n,u,a,!1))}d.push("...");for(let m=o-ku;m<o;m++){let g=m*h,y=g+h;d.push(...Uh(e.slice(g,y),p,n,u,a,m===o-1))}}else for(let m=0;m<o;m++){let g=m*h,y=g+h;d.push(...Uh(e.slice(g,y),p,n,u,a,m===o-1))}let c=l===2?",":"";d[0]="["+d[0]+c;for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+c;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function _u(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Ft=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=lt(e),n!=null){let r=n.length;A(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||L0(t,this.size),this.strides=Bo(e)}set(e,...t){t.length===0&&(t=[0]),A(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let r of e){if(r<0||r>=this.shape[t]){let a=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(a)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return xr().makeTensor(this.values,this.shape,this.dtype)}},xr=null,oo=null;function N$(e){xr=e}function T$(e){oo=e}var Re=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=lt(e),this.strides=Bo(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return oo.buffer(this.shape,this.dtype,e)}bufferSync(){return oo.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return fo(this.shape,e,this.dtype==="complex64")}arraySync(){return fo(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=xr().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>id(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),xr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=xr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>id(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await xr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(xr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return oo.print(this,e)}clone(){return this.throwIfDisposed(),oo.clone(this)}toString(e=!1){let t=this.dataSync();return I$(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),oo.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),xr().makeVariable(this,e,t,n)}};Object.defineProperty(Re,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function J(){return gg("Tensor",()=>Re)}J();var $s=class extends Re{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Va(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);xr().disposeTensor(this),this.dataId=e.dataId,xr().incRef(this,null)}dispose(){xr().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty($s,Symbol.hasInstance,{value:e=>e instanceof Re&&e.assign!=null&&e.assign instanceof Function});var Ir={};Ee(Ir,{assertTypesMatch:()=>Q0,getTensorsInContainer:()=>bg,isTensorInList:()=>C$,makeTypesMatch:()=>wt});var om;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(om||(om={}));var lm;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(lm||(lm={}));var um;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(um||(um={}));var pm;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(pm||(pm={}));var hm;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(hm||(hm={}));var _$={float32:pm,int32:lm,bool:um,complex64:hm};function rr(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return _$[e][t]}function bc(e){return rr(e,"int32")}function wt(e,t){if(e.dtype===t.dtype)return[e,t];let n=rr(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Q0(e,t){A(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function C$(e,t){return t.some(n=>n.id===e.id)}function bg(e){let t=[];return e1(e,t,new Set),t}function e1(e,t,n){if(e==null)return;if(e instanceof Re){t.push(e);return}if(!E$(e))return;let r=e;for(let a in r){let s=r[a];n.has(s)||(n.add(s),e1(s,t,n))}}function E$(e){return Array.isArray(e)||typeof e=="object"}function Wf(e){return e.kernelName!=null}var Kw=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},qu=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Kw}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Ia(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new b$(this.backendInstance),!0}setupRegisteredKernels(){sd(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){sd(e).forEach(t=>{t.disposeFunc!=null&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof op)&&typeof n.then=="function"){let r=++this.pendingBackendInitId,a=n.then(s=>r<this.pendingBackendInitId?!1:(this.registry[e]=s,this.pendingBackendInit=null,!0)).catch(s=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,Ia(`Initialization of backend ${e} failed`),Ia(s.stack||s.message)),!1));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return Ia(`Initialization of backend ${e} failed`),Ia(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let r;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,n){e();try{let r=n();return t(),r}catch(r){throw t(),r}}nextTensorId(){return qu.nextTensorId++}nextVariableId(){return qu.nextVariableId++}clone(e){let t=O.runKernel(ui,{x:e}),n={x:e},r=s=>({x:()=>{let i="float32",o={x:s},l={dtype:i};return O.runKernel(Ks,o,l)}}),a=[];return this.addTapeNode(this.state.activeScope.name,n,[t],r,a,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,ad(e,this.backendName)==null)throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),a=0;n.forEach(o=>{a+=o.dtype==="complex64"?3:1});let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let o,l=Wf(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Wf(e)){let{kernelName:c,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=ad(c,this.backendName);A(g!=null,()=>`Cannot find registered kernel '${c}' for backend '${this.backendName}'`),i=()=>{let y=this.backend.numDataIds();o=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let b=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,y,b);let x=b.map(w=>w.rank!=null?w:this.makeTensorFromTensorInfo(w));if(r){let w=this.getTensorsForGradient(c,f,x);n=this.saveTensorsForBackwardMode(w)}return x}}else{let{forwardFunc:c}=e,f=m=>{!r||(n=m.map(g=>this.keep(this.clone(g))))};i=()=>{let m=this.backend.numDataIds();o=this.tidy(()=>c(this.backend,f));let g=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,m,g),g}}let{inputs:p,attrs:u}=e,h=Wf(e)?null:e.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(d=this.profiler.profileKernel(l,p,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs)}),r&&this.addTapeNode(l,p,t,h,n,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(c=>p[c]!=null?p[c].shape:null),outputShapes:t.map(c=>c.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(e,t,n){let r=sm(e);if(r!=null){let a=r.inputsToSave||[],s=r.outputsToSave||[],i;r.saveAllInputs?(A(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(l=>t[l])):i=a.map(l=>t[l]);let o=n.filter((l,p)=>s[p]);return i.concat(o)}return[]}makeTensor(e,t,n,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;n==="string"&&Sa(e[0])&&(a=e.map(o=>_p(o)));let s=r.write(a,t,n),i=new Re(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),n==="string"){let o=this.state.tensorInfo.get(s),l=B0(a);this.state.numBytes+=l-o.bytes,o.bytes=l}return i}makeTensorFromDataId(e,t,n,r){n=n||"float32";let a={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:r,dtype:a}=e,s=new Re(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));let a=new $s(e,t,n,this.nextTensorId());if(this.state.registeredVariables[a.name]!=null)throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*am(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof $s||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*am(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,r,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=sm(e);o!=null&&(r=o.gradFunc),r!=null&&(i.gradient=l=>(l=l.map((p,u)=>{if(p==null){let h=n[u],d=zd(h.size,h.dtype);return this.makeTensor(d,h.shape,h.dtype)}return p}),r(l.length>1?l:l[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=bg(e),n=new Set(t.map(a=>a.id));for(let a=0;a<this.state.activeScope.track.length;a++){let s=this.state.activeScope.track[a];!s.kept&&!n.has(s.id)&&s.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(a=>{!a.kept&&a.scopeId===r.id&&this.track(a)})}gradients(e,t,n,r=!1){if(A(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));A(a instanceof Re,()=>"The result y returned by f() must be a tensor.");let s=v$(this.state.activeTape,t,a);if(!r&&s.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[a.id]=n==null?$$(a.shape):n,k$(i,s,l=>this.tidy(l),A$);let o=t.map(l=>i[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let p of l.saved)p.dispose()}),this.state.activeTape=null),{value:a,grads:o}})}customGrad(e){return A(Aa(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{A(t.every(i=>i instanceof Re),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,r={};t.forEach((i,o)=>{r[o]=i});let a=(i,o)=>(n=e(...t,o),A(n.value instanceof Re,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),A(Aa(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),s=(i,o)=>{let l=n.gradFunc(i,o),p=Array.isArray(l)?l:[l];A(p.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),A(p.every(h=>h instanceof Re),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let u={};return p.forEach((h,d)=>{u[d]=()=>h}),u};return this.runKernelFunc({forwardFunc:a,backwardsFunc:s,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Hu(),n=await this.backend.time(e);return n.wallMs=Hu()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Kw;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};qu.nextTensorId=0;qu.nextVariableId=0;function $$(e){let t=dg(lt(e),"float32");return O.makeTensor(t,e,"float32")}function t1(){let e=H0();if(e._tfengine==null){let t=new G0(e);e._tfengine=new qu(t)}return t$(e._tfengine.ENV),N$(()=>e._tfengine),e._tfengine}var O=t1();function A$(e,t){let n={a:e,b:t};return O.runKernel(Ua,n)}var Cp={};Ee(Cp,{isBrowser:()=>n1,isMobile:()=>M$,mockIsMobile:()=>F$});function R$(){return typeof navigator<"u"&&navigator!=null}var dm;function F$(e){dm=e}function M$(e){if(dm!==void 0)return dm;if(e||R$()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window<"u"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function n1(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Un=q();Un.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Un.registerFlag("IS_BROWSER",()=>n1());Un.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Un.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Un.registerFlag("PROD",()=>!1);Un.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Un.getBool("DEBUG"));Un.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Un.registerFlag("IS_TEST",()=>!1);Un.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Un.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Un.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);Un.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Un.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function Vr(e,t){let n=e;if(rn(e))return t==="string"?[]:[e.length];if(typeof e=="object"&&"texture"in e){let a=e.channels||"RGBA";return[e.height,e.width*a.length]}if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||rn(n)&&t!=="string";)r.push(n.length),n=n[0];return Array.isArray(e)&&q().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&r1(e,r,[]),r}function r1(e,t,n){if(n=n||[],!Array.isArray(e)&&!rn(e)){A(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}A(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),A(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let r=t.slice(1);for(let a=0;a<e.length;++a)r1(e[a],r,n.concat(a))}function Xw(e,t,n,r){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function _(e,t,n,r="numeric"){if(e instanceof Re)return Xw(r,e.dtype,t,n),e;let a=Ld(e);if(a!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Xw(r,a,t,n),e==null||!rn(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let o=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${o}'`)}let s=Vr(e,a);!rn(e)&&!Array.isArray(e)&&(e=[e]);let i=a!=="string"?yc(e,a):Ts(e,[],!0);return O.makeTensor(i,s,a)}function ju(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,s)=>_(a,`${t}[${s}]`,n,r))}var xg="__op";function L(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+xg;let a=(...s)=>{O.startScope(n);try{let i=r(...s);return fg(i)&&console.error("Cannot return a Promise inside of tidy."),O.endScope(i),i}catch(i){throw O.endScope(null),i}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}function D$(e,t){let n=_(e,"real","complex"),r=_(t,"imag","complex");mn(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let a={real:n,imag:r};return O.runKernel(Ud,a)}var pa=L({complex_:D$});function ja(e,t,n,r){if(r==null&&(r=Ld(e)),r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(typeof e=="object"&&"texture"in e){if(r!=="float32"&&r!=="int32")throw new Error(`Creating tensor from texture only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return e.channels=e.channels||"RGBA",O.backend.createTensorFromTexture(e,t||n,r)}if(!rn(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){cg(t);let a=lt(t),s=lt(n);A(a===s,()=>`Based on the provided shape, [${t}], the tensor should have ${a} values but has ${s}`);for(let i=0;i<n.length;++i){let o=n[i],l=i===n.length-1?o!==lt(t.slice(i)):!0;A(n[i]===t[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!rn(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=r!=="string"?yc(e,r):Ts(e,[],!0),O.makeTensor(e,t,r)}function Tn(e,t,n){let r=Vr(e,n);return ja(e,t,r,n)}var cm={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},od=4;async function O$(e,t){let n=[],r=[],a=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);for(let i=0;i<a.length;++i){let o=a[i],l=Array.isArray(e)?e[i].tensor:e[o];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);let p={name:o,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let u=new Promise(async h=>{let d=await l.bytes(),c=d.reduce((g,y)=>g+y.length,0)+od*d.length,f=new Uint8Array(c),m=0;for(let g=0;g<d.length;g++){let y=d[g],b=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(b,m),m+=od,f.set(y,m),m+=y.length}h(f)});r.push(u)}else r.push(l.data());t!=null&&(p.group=t),n.push(p)}let s=await Promise.all(r);return{data:L$(s),specs:n}}function a1(e,t){let n={},r,a=0;for(let s of t){let i=s.name,o=s.dtype,l=s.shape,p=lt(l),u;if("quantization"in s){let h=s.quantization;if(h.dtype==="uint8"||h.dtype==="uint16"){if(!("min"in h&&"scale"in h))throw new Error(`Weight ${s.name} with quantization ${h.dtype} doesn't have corresponding metadata min and scale.`)}else if(h.dtype==="float16"){if(o!=="float32")throw new Error(`Weight ${s.name} is quantized with ${h.dtype} which only supports weights of type float32 not ${o}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${h.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let d=cm[h.dtype],c=e.slice(a,a+p*d),f=h.dtype==="uint8"?new Uint8Array(c):new Uint16Array(c);if(o==="float32")if(h.dtype==="uint8"||h.dtype==="uint16"){u=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=g*h.scale+h.min}}else if(h.dtype==="float16")r===void 0&&(r=U$()),u=r(f);else throw new Error(`Unsupported quantization type ${h.dtype} for weight type float32.`);else if(o==="int32"){if(h.dtype!=="uint8"&&h.dtype!=="uint16")throw new Error(`Unsupported quantization type ${h.dtype} for weight type int32.`);u=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=Math.round(g*h.scale+h.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);a+=p*d}else if(o==="string"){let h=lt(s.shape);u=[];for(let d=0;d<h;d++){let c=new Uint32Array(e.slice(a,a+od))[0];a+=od;let f=new Uint8Array(e.slice(a,a+c));u.push(f),a+=c}}else{let h=cm[o],d=e.slice(a,a+p*h);if(o==="float32")u=new Float32Array(d);else if(o==="int32")u=new Int32Array(d);else if(o==="bool")u=new Uint8Array(d);else if(o==="complex64"){u=new Float32Array(d);let c=new Float32Array(u.length/2),f=new Float32Array(u.length/2);for(let y=0;y<c.length;y++)c[y]=u[y*2],f[y]=u[y*2+1];let m=Tn(c,l,"float32"),g=Tn(f,l,"float32");n[i]=pa(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);a+=p*h}o!=="complex64"&&(n[i]=Tn(u,l,o))}return n}function L$(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(s=>{if(t+=s.byteLength,n.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let r=new Uint8Array(t),a=0;return n.forEach(s=>{r.set(new Uint8Array(s.buffer),a),a+=s.byteLength}),r.buffer}var wg=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Zw(e){return wg?Buffer.byteLength(e):new Blob([e]).size}function z$(e){if(wg)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function P$(e){if(wg){let r=Buffer.from(e,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function vg(e){if(e.length===1)return e[0];let t=0;e.forEach(a=>{t+=a.byteLength});let n=new Uint8Array(t),r=0;return e.forEach(a=>{n.set(new Uint8Array(a),r),r+=a.byteLength}),n.buffer}function Yw(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function s1(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(n.initializerSignature=e.initializerSignature),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}function i1(e,t,n){let r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(r.trainingConfig=e.trainingConfig),e.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return e.signature!=null&&(r.signature=e.signature),e.userDefinedMetadata!=null&&(r.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(r.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(r.initializerSignature=e.initializerSignature),r}async function kg(e,t){let n,r;return e.weightsManifest!=null&&([n,r]=await t(e.weightsManifest)),i1(e,n,r)}function Ep(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:Zw(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:Zw(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function o1(e){let t=[];for(let n of e)t.push(...n.weights);return t}function B$(){let e=n=>{let r=n<<13,a=0;for(;(r&8388608)===0;)a-=8388608,r<<=1;return r&=-8388609,a+=947912704,r|a},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function W$(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function V$(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function U$(){let e=B$(),t=W$(),n=V$();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let i=0;i<r.length;i++){let o=r[i],l=e[n[o>>10]+(o&1023)]+t[o>>10];s[i]=l}return new Float32Array(a)}}var It=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return It.instance==null&&(It.instance=new It),It.instance}static registerSaveRouter(e){It.getInstance().saveRouters.push(e)}static registerLoadRouter(e){It.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return It.getHandlers(e,"save")}static getLoadHandlers(e,t){return It.getHandlers(e,"load",t)}static getHandlers(e,t,n){let r=[];return(t==="load"?It.getInstance().loadRouters:It.getInstance().saveRouters).forEach(a=>{let s=a(e,n);s!==null&&r.push(s)}),r}},G$=e=>It.registerSaveRouter(e),H$=e=>It.registerLoadRouter(e),q$=e=>It.getSaveHandlers(e),j$=(e,t)=>It.getLoadHandlers(e,t),fm="tensorflowjs",mm=1,bs="models_store",Na="model_info_store";function l1(){if(!q().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window>"u"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function gm(e){let t=e.result;t.createObjectStore(bs,{keyPath:"modelPath"}),t.createObjectStore(Na,{keyPath:"modelPath"})}var As=class{constructor(e){if(this.indexedDB=l1(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,r)=>{let a=this.indexedDB.open(fm,mm);a.onupgradeneeded=()=>gm(a),a.onsuccess=()=>{let s=a.result;if(t==null){let i=s.transaction(bs,"readonly"),o=i.objectStore(bs).get(this.modelPath);o.onsuccess=()=>{if(o.result==null)return s.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(o.result.modelArtifacts)},o.onerror=l=>(s.close(),r(o.error)),i.oncomplete=()=>s.close()}else{let i=Ep(t),o=s.transaction(Na,"readwrite"),l=o.objectStore(Na),p=l.put({modelPath:this.modelPath,modelArtifactsInfo:i}),u;p.onsuccess=()=>{u=s.transaction(bs,"readwrite");let h=u.objectStore(bs).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});h.onsuccess=()=>n({modelArtifactsInfo:i}),h.onerror=d=>{l=o.objectStore(Na);let c=l.delete(this.modelPath);c.onsuccess=()=>(s.close(),r(h.error)),c.onerror=f=>(s.close(),r(h.error))}},p.onerror=h=>(s.close(),r(p.error)),o.oncomplete=()=>{u==null?s.close():u.oncomplete=()=>s.close()}}},a.onerror=s=>r(a.error)})}};As.URL_SCHEME="indexeddb://";var u1=e=>q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(As.URL_SCHEME)?K$(e.slice(As.URL_SCHEME.length)):null;It.registerSaveRouter(u1);It.registerLoadRouter(u1);function K$(e){return new As(e)}function X$(e){return e.startsWith(As.URL_SCHEME)?e.slice(As.URL_SCHEME.length):e}var Z$=class{constructor(){this.indexedDB=l1()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(fm,mm);n.onupgradeneeded=()=>gm(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(Na,"readonly"),s=a.objectStore(Na).getAll();s.onsuccess=()=>{let i={};for(let o of s.result)i[o.modelPath]=o.modelArtifactsInfo;e(i)},s.onerror=i=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=r=>t(n.error)})}async removeModel(e){return e=X$(e),new Promise((t,n)=>{let r=this.indexedDB.open(fm,mm);r.onupgradeneeded=()=>gm(r),r.onsuccess=()=>{let a=r.result,s=a.transaction(Na,"readwrite"),i=s.objectStore(Na),o=i.get(e),l;o.onsuccess=()=>{if(o.result==null)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let p=i.delete(e),u=()=>{l=a.transaction(bs,"readwrite");let h=l.objectStore(bs).delete(e);h.onsuccess=()=>t(o.result.modelArtifactsInfo),h.onerror=d=>n(o.error)};p.onsuccess=u,p.onerror=h=>(u(),a.close(),n(o.error))}},o.onerror=p=>(a.close(),n(o.error)),s.oncomplete=()=>{l==null?a.close():l.oncomplete=()=>a.close()}},r.onerror=a=>n(r.error)})}},sa="/",lo="tensorflowjs_models",p1="info",Y$="model_topology",J$="weight_specs",Q$="weight_data",eA="model_metadata";function h1(e){return{info:[lo,e,p1].join(sa),topology:[lo,e,Y$].join(sa),weightSpecs:[lo,e,J$].join(sa),weightData:[lo,e,Q$].join(sa),modelMetadata:[lo,e,eA].join(sa)}}function d1(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function tA(e){let t=e.split(sa);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(sa)}function nA(e){return e.startsWith(Rs.URL_SCHEME)?e.slice(Rs.URL_SCHEME.length):e}var Rs=class{constructor(e){if(!q().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=h1(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Ep(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,z$(e.weightData));let a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch{throw d1(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let a=this.LS.getItem(this.keys.modelMetadata);if(a!=null){let i=JSON.parse(a);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(t.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(s==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=P$(s),t}};Rs.URL_SCHEME="localstorage://";var c1=e=>q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Rs.URL_SCHEME)?rA(e.slice(Rs.URL_SCHEME.length)):null;It.registerSaveRouter(c1);It.registerLoadRouter(c1);function rA(e){return new Rs(e)}var aA=class{constructor(){A(q().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),A(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=lo+sa,n=sa+p1;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){let s=tA(a);e[s]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){e=nA(e);let t=h1(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return d1(t),n}},mo="://",In=class{constructor(){this.managers={}}static getInstance(){return In.instance==null&&(In.instance=new In),In.instance}static registerManager(e,t){A(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(mo)&&(e=e.slice(0,e.indexOf(mo))),A(e.length>0,()=>"scheme must not be an empty string.");let n=In.getInstance();A(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=In.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(In.getInstance().managers)}};function Gh(e){if(e.indexOf(mo)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${In.getSchemes().join(",")}`);return{scheme:e.split(mo)[0],path:e.split(mo)[1]}}async function f1(e,t,n=!1){A(e!==t,()=>`Old path and new path are the same: '${e}'`);let r=It.getLoadHandlers(e);A(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),A(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);let a=r[0],s=It.getSaveHandlers(t);A(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),A(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);let i=s[0],o=Gh(e).scheme,l=Gh(e).path,p=o===Gh(e).scheme,u=await a.load();n&&p&&await In.getManager(o).removeModel(l);let h=await i.save(u);return n&&!p&&await In.getManager(o).removeModel(l),h.modelArtifactsInfo}async function sA(){let e=In.getSchemes(),t={};for(let n of e){let r=await In.getManager(n).listModels();for(let a in r){let s=n+mo+a;t[s]=r[a]}}return t}async function iA(e){let t=Gh(e);return In.getManager(t.scheme).removeModel(t.path)}async function oA(e,t){return f1(e,t,!1)}async function lA(e,t){return f1(e,t,!0)}var uA=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!q().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",n=>{if(n.source===window&&n.data.name===this.messageName){n.stopPropagation();let r=this.functionRefs[n.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}};if(q().get("IS_BROWSER")){q().setPlatform("browser",new uA);try{In.registerManager(Rs.URL_SCHEME,new aA)}catch{}try{In.registerManager(As.URL_SCHEME,new Z$)}catch{}}var pA={importFetch:()=>vE()},Vf,hA=class{constructor(){this.util=kE(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return q().global.fetch!=null?q().global.fetch(e,t):(Vf==null&&(Vf=pA.importFetch()),Vf(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};q().get("IS_NODE")&&!q().get("IS_BROWSER")&&q().setPlatform("node",new hA);function Le(e,t="float32",n){return t=t||"float32",cg(e),new Ft(e,t,n)}function dA(e,t){let n=_(e,"x","cast");if(!P0(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let r={x:n},a={dtype:t};return O.runKernel(Ks,r,a)}var ie=L({cast_:dA});function cA(e){let t={x:_(e,"x","clone","string_or_numeric")};return O.runKernel(ui,t)}var Pr=L({clone_:cA});function Ig(e,t=!1){console.log(e.toString(t))}t1();var fA={buffer:Le,cast:ie,clone:Pr,print:Ig};T$(fA);var Yt={};Ee(Yt,{browserFiles:()=>vA,browserHTTPRequest:()=>TA,concatenateArrayBuffers:()=>vg,copyModel:()=>oA,decodeWeights:()=>a1,encodeWeights:()=>O$,fromMemory:()=>CA,fromMemorySync:()=>x1,getLoadHandlers:()=>j$,getModelArtifactsForJSON:()=>kg,getModelArtifactsForJSONSync:()=>i1,getModelArtifactsInfoForJSON:()=>Ep,getSaveHandlers:()=>q$,getWeightSpecs:()=>o1,http:()=>Ng,isHTTPScheme:()=>ym,listModels:()=>sA,loadWeights:()=>kA,moveModel:()=>lA,registerLoadRouter:()=>H$,registerSaveRouter:()=>G$,removeModel:()=>iA,weightsLoaderFactory:()=>g1,withSaveHandler:()=>EA,withSaveHandlerSync:()=>$A});var mA="model",gA=".json",yA=".weights.bin";function Jw(e){return new Promise(t=>setTimeout(t)).then(e)}var ko=class{constructor(e){if(!q().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ko.URL_SCHEME)&&(e=e.slice(ko.URL_SCHEME.length)),(e==null||e.length===0)&&(e=mA),this.modelJsonFileName=e+gA,this.weightDataFileName=e+yA}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=s1(e,n),a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=a,await Jw(()=>s.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await Jw(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ep(e)}}}};ko.URL_SCHEME="downloads://";var bA=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=r=>{let a=JSON.parse(r.target.result),s=a.modelTopology;if(s==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(a.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:s});return}let i=kg(a,o=>this.loadWeights(o));e(i)},n.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let s of e)t.push(...s.weights),n.push(...s.paths);let r=this.checkManifestAndWeightFiles(e),a=n.map(s=>this.loadWeightsFile(s,r[s]));return Promise.all(a).then(s=>[t,vg(s)])}loadWeightsFile(e,t){return new Promise((n,r)=>{let a=new FileReader;a.onload=s=>{let i=s.target.result;n(i)},a.onerror=s=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(a=>Yw(a.name)),r={};for(let a of e)a.paths.forEach(s=>{let i=Yw(s);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);r[s]=this.weightsFiles[n.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}},xA=e=>q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ko.URL_SCHEME)?wA(e.slice(ko.URL_SCHEME.length)):null;It.registerSaveRouter(xA);function wA(e="model"){return new ko(e)}function vA(e){return new bA(e)}function Qw(e,t,n,r){i(e),n=n==null?0:n,r=r==null?1:r,o(n,r);let a=0,s=l=>(l.then(p=>{let u=n+ ++a/e.length*(r-n);return t(u),p}),l);function i(l){A(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function o(l,p){A(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),A(p>=0&&p<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${p}`),A(p>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${p}`)}return Promise.all(e.map(s))}async function m1(e,t){t==null&&(t={});let n=t.fetchFunc==null?q().platform.fetch:t.fetchFunc,r=e.map(p=>n(p,t.requestInit,{isBinary:!0})),a=0,s=.5,i=(t.onProgress==null?await Promise.all(r):await Qw(r,t.onProgress,a,s)).map(p=>p.arrayBuffer()),o=.5,l=1;return t.onProgress==null?await Promise.all(i):await Qw(i,t.onProgress,o,l)}async function kA(e,t="",n,r){return g1(a=>m1(a,{requestInit:r}))(e,t,n)}function g1(e){return async(t,n="",r)=>{let a=t.map(()=>!1),s={},i=r!=null?r.map(()=>!1):[],o=[];if(t.forEach((c,f)=>{let m=0;c.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,b=cm[y]*lt(g.shape),x=()=>{a[f]=!0,s[f]==null&&(s[f]=[]),s[f].push({manifestEntry:g,groupOffset:m,sizeBytes:b})};r!=null?r.forEach((w,I)=>{w===g.name&&(x(),i[I]=!0)}):x(),o.push(g.name),m+=b})}),!i.every(c=>c)){let c=r.filter((f,m)=>!i[m]);throw new Error(`Could not find weights in manifest with names: ${c.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce((c,f,m)=>(f&&c.push(m),c),[]),p=[];l.forEach(c=>{t[c].paths.forEach(f=>{let m=n+(n.endsWith("/")?"":"/")+f;p.push(m)})});let u=await e(p),h={},d=0;return l.forEach(c=>{let f=t[c].paths.length,m=0;for(let x=0;x<f;x++)m+=u[d+x].byteLength;let g=new ArrayBuffer(m),y=new Uint8Array(g),b=0;for(let x=0;x<f;x++){let w=new Uint8Array(u[d+x]);y.set(w,b),b+=w.byteLength}s[c].forEach(x=>{let w=g.slice(x.groupOffset,x.groupOffset+x.sizeBytes),I=a1(w,[x.manifestEntry]);for(let N in I)h[N]=I[N]}),d+=f}),h}}var IA="application/octet-stream",SA="application/json",Sg=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(A(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=q().platform.fetch,A(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&A(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=s1(e,n);t.body.append("model.json",new Blob([JSON.stringify(r)],{type:SA}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:IA}),"model.weights.bin");let a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Ep(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let s=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?s+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":s+=" Please make sure the server is serving valid JSON for this request.",new Error(s)}let n=t.modelTopology,r=t.weightsManifest;if(n==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return kg(t,a=>this.loadWeights(a))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=NA(t),a=this.weightPathPrefix||n,s=o1(e),i=[],o=[];for(let p of e)for(let u of p.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(u)):i.push(a+u+r);this.weightUrlConverter&&i.push(...await Promise.all(o));let l=await m1(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,vg(l)]}};Sg.URL_SCHEME_REGEX=/^https?:\/\//;function NA(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}function ym(e){return e.match(Sg.URL_SCHEME_REGEX)!=null}var y1=(e,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(r=>ym(r)):n=ym(e),n)return Ng(e,t)}return null};It.registerSaveRouter(y1);It.registerLoadRouter(y1);function Ng(e,t){return new Sg(e,t)}function TA(e,t){return Ng(e,t)}var Uf=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},b1=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},_A=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function CA(e,t,n,r){let a=arguments;return new _A(x1(...a))}function x1(e,t,n,r){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new Uf(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Uf({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Uf({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function EA(e){return new b1(e)}function $A(e){return new b1(e)}var w1={};Ee(w1,{confusionMatrix:()=>YA});function AA(e,t,n=!1,r=!1){let a=_(e,"a","matMul"),s=_(t,"b","matMul");[a,s]=wt(a,s);let i={a,b:s},o={transposeA:n,transposeB:r};return O.runKernel(js,i,o)}var Oe=L({matMul_:AA});function RA(e,t,n=1,r=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s={indices:_(e,"indices","oneHot","int32")},i={dtype:a,depth:t,onValue:n,offValue:r};return O.runKernel(wi,s,i)}var Io=L({oneHot_:RA});function FA(){q().set("PROD",!0)}function MA(){q().set("DEBUG",!0)}function DA(){q().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function v1(e){q().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function OA(){O.disposeVariables()}function hr(){return O}function ld(){return O.memory()}function LA(e){return O.profile(e)}function B(e,t){return O.tidy(e,t)}function Ce(e){bg(e).forEach(t=>t.dispose())}function Bt(e){return O.keep(e)}function zA(e){return O.time(e)}function PA(e){return O.setBackend(e)}function BA(){return O.ready()}function WA(){return O.backendName}function VA(e){O.removeBackend(e)}function UA(e){return O.findBackend(e)}function GA(e){return O.findBackendFactory(e)}function xc(e,t,n=1){return O.registerBackend(e,t,n)}function k1(){return O.backend}function HA(e,t){q().setPlatform(e,t)}function qA(e){let t={input:_(e,"input","imag")};return O.runKernel(tc,t)}var $p=L({imag_:qA});function jA(e){let t={x:_(e,"x","neg")};return O.runKernel(wl,t)}var dt=L({neg_:jA});function KA(e){let t={input:_(e,"input","real")};return O.runKernel(hc,t)}var So=L({real_:KA});function XA(e,t,n){let r=_(e,"x","transpose");if(t==null&&(t=r.shape.map((i,o)=>o).reverse()),A(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`),t.forEach(i=>{A(i>=0&&i<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${t}`)}),r.rank<=1)return r.clone();let a={x:r},s={perm:t};return r.dtype==="complex64"?B(()=>{let i=So(r),o=$p(r);return i=O.runKernel(oa,{x:i},s),o=O.runKernel(oa,{x:o},s),n&&(o=dt(o)),pa(i,o)}):O.runKernel(oa,a,s)}var Fe=L({transpose_:XA});function ZA(e,t,n){let r=_(e,"labels","confusionMatrix"),a=_(t,"predictions","confusionMatrix");A(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),A(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),A(a.rank===1,()=>`Expected the rank of predictions to be 1, but got ${a.rank}`),A(r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),A(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let s=Io(ie(r,"int32"),n),i=Io(ie(a,"int32"),n),o=Fe(s),l=Oe(o,i);return ie(l,"int32")}var YA=L({confusionMatrix_:ZA}),Hl={};Ee(Hl,{assertAndGetBroadcastShape:()=>rt,getBroadcastDims:()=>I1,getReductionAxes:()=>Et});function I1(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&i===1&&r.unshift(s)}return r}function Et(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(a==null||a===1&&i>1)&&n.unshift(s)}return n}function rt(e,t){let n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let s=e[e.length-a-1];s==null&&(s=1);let i=t[t.length-a-1];if(i==null&&(i=1),s===1)n.unshift(i);else if(i===1)n.unshift(s);else if(s!==i){let o=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(o)}else n.unshift(s)}return n}var Ap={};Ee(Ap,{fromPixels:()=>aR,fromPixelsAsync:()=>nR,toPixels:()=>rR});function wc(e,t,n){if(Us(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let r=Vr(e,n);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ja(e,t,r,n)}var os;function S1(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData<"u"&&e instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement)a=!0;else if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement)s=!0;else if(e.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&e instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(ad(rd,O.backendName)!=null){let d={pixels:e},c={numChannels:t};return O.runKernel(rd,d,c)}let[l,p]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height],u;if(i)u=e.getContext("2d").getImageData(0,0,l,p).data;else if(r||n)u=e.data;else if(s||a||o){if(os==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")os=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else os=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});os.canvas.width=l,os.canvas.height=p,os.drawImage(e,0,0,l,p),u=os.getImageData(0,0,l,p).data}let h;if(t===4)h=new Int32Array(u);else{let d=l*p;h=new Int32Array(d*t);for(let c=0;c<d;c++)for(let f=0;f<t;++f)h[c*t+f]=u[c*4+f]}return wc(h,[p,l,t],"int32")}function JA(e){return e!=null&&e.data instanceof Uint8Array}function QA(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function eR(e){return e!=null&&e.width!==0&&e.height!==0}function tR(e){return QA()&&!(e instanceof ImageBitmap)&&eR(e)&&!JA(e)}async function nR(e,t=3){let n=null;if(q().getBool("WRAP_TO_IMAGEBITMAP")&&tR(e)){let r;try{r=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch{r=null}r!=null&&r.width===e.width&&r.height===e.height?n=r:n=e}else n=e;return S1(n,t)}async function rR(e,t){let n=_(e,"img","toPixels");if(!(e instanceof Re)){let p=n;n=ie(p,"int32"),p.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[r,a]=n.shape.slice(0,2),s=n.rank===2?1:n.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let i=await n.data(),o=n.dtype==="float32"?255:1,l=new Uint8ClampedArray(a*r*4);for(let p=0;p<r*a;++p){let u=[0,0,0,255];for(let d=0;d<s;d++){let c=i[p*s+d];if(n.dtype==="float32"){if(c<0||c>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${c}.`)}else if(n.dtype==="int32"&&(c<0||c>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${c}.`);s===1?(u[0]=c*o,u[1]=c*o,u[2]=c*o):u[d]=c*o}let h=p*4;l[h+0]=Math.round(u[0]),l[h+1]=Math.round(u[1]),l[h+2]=Math.round(u[2]),l[h+3]=Math.round(u[3])}if(t!=null){t.width=a,t.height=r;let p=t.getContext("2d"),u=new ImageData(l,a,r);p.putImageData(u,0,0)}return n!==e&&n.dispose(),l}var aR=L({fromPixels_:S1}),Tg={};Ee(Tg,{prepareAndValidate:()=>N1});function N1(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(lt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let h=0;h<a.length-1;++h)i*=a[h];let o=e.shape,l=a.slice();l.pop();let p=1;for(let h=s;h<n;++h)p*=o[h],l.push(o[h]);let u=[...Bo(e.shape).map(h=>h/p),1].slice(0,s);return[l,i,p,u]}var _g={};Ee(_g,{calculateShapes:()=>T1,validateInput:()=>Eg,validateUpdateShape:()=>Cg});function Cg(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+` update.rank != ${a+e.length-r}`);for(let i=0;i<a;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==e[i+r])throw new Error(s+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${e[i+a]})`)}function Eg(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Cg(n,t,e)}function T1(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let h=a;h<s;++h)i*=n[h];let o=a<1?1:a,l=lt(t.shape)/o,p=[...Bo(n.slice(0,a)),1],u=lt(n);return{sliceRank:a,numUpdates:l,sliceSize:i,strides:p,outputSize:u}}var Mt={};Ee(Mt,{assertParamsValid:()=>iR,computeFlatOffset:()=>hR,computeOutShape:()=>lR,getNormalizedAxes:()=>uR,isSliceContinous:()=>pR,maskToAxes:()=>oR,parseSliceParams:()=>D1,sliceInfo:()=>dR,startForAxis:()=>F1,startIndicesWithElidedDims:()=>$1,stopForAxis:()=>M1,stopIndicesWithElidedDims:()=>A1,stridesForAxis:()=>R1,stridesWithElidedDims:()=>_1});var bm=-2,sR=-1;function iR(e,t,n){let r=e.shape.length;A(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),A(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let a=0;a<r;++a)A(t[a]+n[a]<=e.shape[a],()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function oR(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function lR(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function _1(e,t,n,r){let a=[...e];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)s===0?a[t]=1:(a.splice(t,0,1),a.pop());return a}function C1(e,t,n){return n<=e?n:n-(t-1)}function E1(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function uR(e,t,n,r,a,s,i,o,l){let p=e.length,u=new Array(p),h=new Array(p),d=new Array(p);if(t.length&&n>0){let c=t[0],f=n+1;u=$1(i,c,f,r,e),h=A1(o,c,f,a,e),d=_1(s,c,f,e)}else for(let c=0;c<p;c++)u[c]=F1(i,r,s,e,c,l),h[c]=M1(o,a,s,e,c,l),d[c]=R1(s,c,l);return{begin:u,end:h,strides:d}}function $1(e,t,n,r,a){let s=[...a],i=E1(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{let l=C1(t,n,o),p=r[l];e&1<<l&&(p=0),s[o]=p}return s}function A1(e,t,n,r,a){let s=[...a],i=E1(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{let l=C1(t,n,o),p=r[l];e&1<<l&&(p=Number.MAX_SAFE_INTEGER),s[o]=p}for(let o=0;o<s.length;o++){let l=a[o];s[o]<0&&(s[o]+=l),s[o]=Uu(0,s[o],a[o])}return s}function R1(e,t,n){let r=e[t];return(n&1<<t||r==null)&&(r=1),r}function F1(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=Uu(0,i,l-1),i}function M1(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),o>0?i=Uu(0,i,l):i=Uu(-1,i,l-1),i}function pR(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function hR(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function D1(e,t,n){let r,a=e.shape.length;typeof t=="number"?r=[t,...new Array(a-1).fill(0)]:t.length<a?r=t.concat(new Array(a-t.length).fill(0)):r=t.slice(),r.forEach(i=>{A(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return n==null?s=new Array(a).fill(-1):typeof n=="number"?s=[n,...new Array(a-1).fill(-1)]:n.length<a?s=n.concat(new Array(a-n.length).fill(-1)):s=n,s=s.map((i,o)=>i>=0?i:(A(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),e.shape[o]-r[o])),[r,s]}function dR(e,t,n,r,a,s,i,o,l){let p;if(r==null?(p=new Array(t.length),p.fill(1)):p=r,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1,h={dims:p.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:p.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let b=0;b<h.dims;b++)u&&(1<<b&o)!==0&&h.numAddAxisAfterEllipsis++,1<<b&i&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);let d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};cR(h,d);let c=!0,f=!0,m=!0,g=[],y=[];for(let b=0;b<e.length;++b){if(d.strides[b]===0)throw Error(`strides[${b}] must be non-zero`);let x=!!(d.shrinkAxisMask&1<<b),w=e[b];if(w===-1){g.push(x?1:-1);continue}let I=[d.beginMask&1<<b,d.endMask&1<<b],N=[d.strides[b]>0?0:-1,d.strides[b]>0?w:w-1];if(x&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[b]===1;let C=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(x){let R=d.begin[b]<0?w+d.begin[b]:d.begin[b];if(d.begin[b]=R,d.end[b]=d.begin[b]+1,R<0||R>=w)throw Error(`slice index ${d.begin[b]} of dimension ${b} out of bounds.`)}else d.begin[b]=ev(d.begin[b],0,d.strides[b],w,I,N),d.end[b]=ev(d.end[b],1,d.strides[b],w,I,N);let F=d.strides[b]===1&&d.begin[b]===0&&d.end[b]===w;c=c&&F,f=f&&(b===0&&d.strides[b]===1||F)}else c=c&&d.strides[b]===1&&C,f=f&&(b===0&&d.strides[b]===1||C);let E,$=!1;if(d.beginValid&&d.endValid?(E=d.end[b]-d.begin[b],$=!0):x?(E=1,$=!0):C&&w>=0&&(d.strides[b]<0?E=-w:E=w,$=!0),$){let F;E===0||E<0!=d.strides[b]<0?F=0:F=Math.trunc(E/d.strides[b])+(E%d.strides[b]!==0?1:0),g.push(F)}else g.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){let x=d.finalShapeGatherIndices[b];x>=0?y.push(g[x]):x===bm&&y.push(1)}return{finalShapeSparse:y.filter((b,x)=>d.finalShapeGatherIndices[x]!==bm),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function cR(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(bm),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[r]),e.end!=null&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(sR),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}function ev(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{let i=e<0?r+e:e;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var ne={};Ee(ne,{Serializable:()=>O1,SerializationMap:()=>ms,registerClass:()=>Ka});var O1=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},ms=class{constructor(){this.classNameMap={}}static getMap(){return ms.instance==null&&(ms.instance=new ms),ms.instance}static register(e){ms.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Ka(e){A(e.className!=null,()=>"Class being registered does not have the static className property defined."),A(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),A(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),ms.register(e)}var L1={};Ee(L1,{TEST_EPSILON_FLOAT16:()=>z1,createVideoElement:()=>vR,encodeStrings:()=>P1,expectArrayBuffersEqual:()=>wR,expectArraysClose:()=>mR,expectArraysEqual:()=>yR,expectNumbersClose:()=>bR,expectPromiseToFail:()=>gR,expectValuesInRange:()=>xR,play:()=>kR,testEpsilon:()=>$g});var fR=.001,z1=.1;function mR(e,t,n){return n==null&&(n=$g()),xm(e,t,(r,a)=>Ag(r,a,n))}function $g(){return O.backend.floatPrecision()===32?fR:z1}function xm(e,t,n){let r=!0;if((rn(e)||rn(t))&&(r=!1),rn(e)&&rn(t)&&(r=!0),r){let i=e.constructor.name,o=t.constructor.name;if(i!==o)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${o}`)}if(Array.isArray(e)&&Array.isArray(t)){let i=Vr(e),o=Vr(t);if(!Va(i,o))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${o}]`)}let a=rn(e)?e:Ts(e),s=rn(t)?t:Ts(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.
Actual:   ${a}.
Expected: ${s}.`);for(let i=0;i<s.length;++i){let o=a[i],l=s[i];if(!n(o,l))throw new Error(`Arrays differ: actual[${i}] = ${o}, expected[${i}] = ${l}.
Actual:   ${a}.
Expected: ${s}.`)}typeof expect<"u"&&expect().nothing()}function gR(e,t){e().then(()=>t.fail(),()=>t()),typeof expect<"u"&&expect().nothing()}function yR(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Sa(e)||Sa(e[0])||Sa(t)||Sa(t[0])?xm(e,n,(r,a)=>r==a):xm(e,t,(r,a)=>Ag(r,a,0))}function bR(e,t,n){if(n==null&&(n=$g()),!Ag(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);typeof expect<"u"&&expect().nothing()}function Ag(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function xR(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function wR(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let a=0;a<r.length;a++)if(n[a]!==r[a])throw new Error(`Expected ArrayBuffer value at ${a} to be ${r[a]} but got ${n[a]} instead`)}function P1(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?P1(n):e[t]=_p(n)}return e}function vR(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(n=>{t.addEventListener("loadeddata",r=>n(t)),t.load()})}async function kR(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise(t=>{e.requestVideoFrameCallback(t)})}var IR="4.0.0";function SR(e,t){let n=_(e,"a","add"),r=_(t,"b","add");[n,r]=wt(n,r);let a={a:n,b:r};return O.runKernel(Ua,a)}var Y=L({add_:SR});function NR(e,t){let n=_(e,"a","floorDiv"),r=_(t,"b","floorDiv");[n,r]=wt(n,r);let a={a:n,b:r};return O.runKernel(ii,a)}var vc=L({floorDiv_:NR});function TR(e,t){let n=_(e,"a","div"),r=_(t,"b","div");if([n,r]=wt(n,r),n.dtype==="int32"&&r.dtype==="int32")return vc(n,r);let a={a:n,b:r},s={};return O.runKernel(ni,a,s)}var me=L({div_:TR});function _R(e,t){let n=_(e,"a","mul"),r=_(t,"b","mul");[n,r]=wt(n,r);let a={a:n,b:r};return O.runKernel(xi,a)}var z=L({mul_:_R});function CR(e){let t=_(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return O.runKernel(pp,n)}else{let n={x:t};return O.runKernel(Wo,n)}}var _t=L({abs_:CR});function ER(e){let t={x:_(e,"x","acos")};return O.runKernel(Vo,t)}var Rg=L({acos_:ER});function $R(e){let t={x:_(e,"x","acosh")};return O.runKernel(Uo,t)}var Fg=L({acosh_:$R});function AR(e){A(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),A(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((a,s)=>_(a,`tensors${s}`,"addN")),n=t[0];t.forEach(a=>{if(a.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(a=>{if(!Va(a.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let r=t;return O.runKernel(Gs,r)}var B1=L({addN_:AR});function RR(e,t=null,n=!1){let r={x:_(e,"x","all","bool")},a={axis:t,keepDims:n};return O.runKernel(Go,r,a)}var kc=L({all_:RR});function FR(e,t=null,n=!1){let r={x:_(e,"x","any","bool")},a={axis:t,keepDims:n};return O.runKernel(Ho,r,a)}var Ku=L({any_:FR});function MR(e,t=0){let n={x:_(e,"x","argMax")},r={axis:t};return O.runKernel(Hs,n,r)}var Fs=L({argMax_:MR});function DR(e,t=0){let n={x:_(e,"x","argMin")},r={axis:t};return O.runKernel(lp,n,r)}var Mg=L({argMin_:DR});function OR(e){let t={x:_(e,"x","asin")};return O.runKernel(qo,t)}var Dg=L({asin_:OR});function LR(e){let t={x:_(e,"x","asinh")};return O.runKernel(jo,t)}var Og=L({asinh_:LR});function zR(e){let t={x:_(e,"x","atan")};return O.runKernel(Ko,t)}var Lg=L({atan_:zR});function PR(e,t){let n=_(e,"a","atan2"),r=_(t,"b","atan2");[n,r]=wt(n,r);let a={a:n,b:r};return O.runKernel(Zo,a)}var zg=L({atan2_:PR});function BR(e){let t={x:_(e,"x","atanh")};return O.runKernel(Xo,t)}var Pg=L({atanh_:BR});function WR(e,t,n,r,a="NHWC",s){let i=e[3],o=[...t,i],l=U1(a);return Rp(e,o,n,s,r,null,null,l)}function W1(e,t,n,r,a,s,i="channelsLast"){let[o,l]=ud(t),p;if(i==="channelsLast")p=[o,l,e[3],e[3]];else if(i==="channelsFirst")p=[o,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return Rp(e,p,n,r,a,s,!1,i)}function VR(e,t,n,r,a,s,i="NDHWC"){let[o,l,p]=wm(t),u,h;if(i==="NDHWC")h="channelsLast",u=[o,l,p,e[4],e[4]];else if(i==="NCDHW")h="channelsFirst",u=[o,l,p,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return V1(e,u,n,r,a,!1,h,s)}function Rp(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,p,u,h]=[-1,-1,-1,-1];if(o==="channelsLast")[l,p,u,h]=e;else if(o==="channelsFirst")[l,h,p,u]=e;else throw new Error(`Unknown dataFormat ${o}`);let[d,c,,f]=t,[m,g]=ud(n),[y,b]=ud(r),x=go(d,y),w=go(c,b),{padInfo:I,outHeight:N,outWidth:C}=HR(a,p,u,m,g,x,w,s,o),E=i?f*h:f,$;return o==="channelsFirst"?$=[l,E,N,C]:o==="channelsLast"&&($=[l,N,C,E]),{batchSize:l,dataFormat:o,inHeight:p,inWidth:u,inChannels:h,outHeight:N,outWidth:C,outChannels:E,padInfo:I,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:c,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:e,outShape:$,filterShape:t}}function V1(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,p,u,h,d]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,p,u,h,d]=e;else if(i==="channelsFirst")[l,d,p,u,h]=e;else throw new Error(`Unknown dataFormat ${i}`);let[c,f,m,,g]=t,[y,b,x]=wm(n),[w,I,N]=wm(r),C=go(c,w),E=go(f,I),$=go(m,N),{padInfo:F,outDepth:R,outHeight:S,outWidth:D}=qR(a,p,u,h,y,b,x,C,E,$,o),W=s?g*d:g,U;return i==="channelsFirst"?U=[l,W,R,S,D]:i==="channelsLast"&&(U=[l,R,S,D,W]),{batchSize:l,dataFormat:i,inDepth:p,inHeight:u,inWidth:h,inChannels:d,outDepth:R,outHeight:S,outWidth:D,outChannels:W,padInfo:F,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:c,filterHeight:f,filterWidth:m,effectiveFilterDepth:C,effectiveFilterHeight:E,effectiveFilterWidth:$,dilationDepth:w,dilationHeight:I,dilationWidth:N,inShape:e,outShape:U,filterShape:t}}function UR(e,t,n,r,a){r==null&&(r=Bg(e,t,n));let s=e[0],i=e[1],o=vs((s-t+2*r)/n+1,a),l=vs((i-t+2*r)/n+1,a);return[o,l]}function GR(e,t,n,r,a,s){a==null&&(a=Bg(e,t,r));let i=e[0],o=e[1],l=e[2],p=vs((i-t+2*a)/r+1,s),u=vs((o-t+2*a)/r+1,s),h=vs((l-t+2*a)/r+1,s);return[p,u,h,n]}function Bg(e,t,n,r=1){let a=go(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function ud(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function wm(e){return typeof e=="number"?[e,e,e]:e}function go(e,t){return t<=1?e:e+(e-1)*(t-1)}function HR(e,t,n,r,a,s,i,o,l){let p,u,h;if(typeof e=="number"){p={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let d=UR([t,n],s,r,e,o);u=d[0],h=d[1]}else if(e==="same"){u=Math.ceil(t/r),h=Math.ceil(n/a);let d=Math.max(0,(u-1)*r+s-t),c=Math.max(0,(h-1)*a+i-n),f=Math.floor(d/2),m=d-f,g=Math.floor(c/2),y=c-g;p={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(e==="valid")p={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else if(typeof e=="object"){let d=l==="channelsLast"?e[1][0]:e[2][0],c=l==="channelsLast"?e[1][1]:e[2][1],f=l==="channelsLast"?e[2][0]:e[3][0],m=l==="channelsLast"?e[2][1]:e[3][1];p={top:d,bottom:c,left:f,right:m,type:d===0&&c===0&&f===0&&m===0?"VALID":"EXPLICIT"},u=vs((t-s+d+c)/r+1,o),h=vs((n-i+f+m)/a+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outHeight:u,outWidth:h}}function qR(e,t,n,r,a,s,i,o,l,p,u){let h,d,c,f;if(typeof e=="number"){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let m=GR([t,n,r,1],o,1,a,e,u);d=m[0],c=m[1],f=m[2]}else if(e==="same"){d=Math.ceil(t/a),c=Math.ceil(n/s),f=Math.ceil(r/i);let m=(d-1)*a+o-t,g=(c-1)*s+l-n,y=(f-1)*i+p-r,b=Math.floor(m/2),x=m-b,w=Math.floor(g/2),I=g-w,N=Math.floor(y/2),C=y-N;h={top:w,bottom:I,left:N,right:C,front:b,back:x,type:"SAME"}}else if(e==="valid")h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/a),c=Math.ceil((n-l+1)/s),f=Math.ceil((r-p+1)/i);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:h,outDepth:d,outHeight:c,outWidth:f}}function vs(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ra(e){let[t,n,r]=ud(e);return t===1&&n===1&&r===1}function Hr(e,t){return Ra(e)||Ra(t)}function U1(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function gn(e,t,n){if(n!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if(typeof t=="number")A(wo(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if(typeof t=="object")t.forEach(r=>{r.forEach(a=>{A(wo(a),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${a}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function jR(e,t){let n={x:_(e,"x","reshape","string_or_numeric")},r={shape:t};return O.runKernel(Cl,n,r)}var P=L({reshape_:jR});function KR(e,t,n,r,a){let s=_(e,"x","avgPool","float32"),i=1;A(Hr(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let o=s,l=!1;s.rank===3&&(l=!0,o=P(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),gn("avgPool",r,a);let p={x:o},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},h=O.runKernel(qs,p,u);return h=ie(h,s.dtype),l?P(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var da=L({avgPool_:KR});function XR(e,t,n,r,a,s="NDHWC"){let i=_(e,"x","avgPool3d","float32"),o=i,l=!1;i.rank===4&&(l=!0,o=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),A(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),gn("avgPool3d",r,a);let p={x:o},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=O.runKernel(up,p,u);return h=ie(h,o.dtype),l?P(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var Wg=L({avgPool3d_:XR});function ZR(e,t=0){A(e.length>=1,()=>"Pass at least one tensor to concat");let n=ju(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),n.length===1)return Pr(n[0]);let r=n,a={axis:t};return O.runKernel(Jo,r,a)}var nt=L({concat_:ZR});function YR(e){let t={x:_(e,"x","sigmoid","float32")};return O.runKernel(Fi,t)}var fr=L({sigmoid_:YR});function JR(e,t,n){let r=_(e,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");let a={x:r},s={begin:t,size:n};return O.runKernel(Rl,a,s)}var We=L({slice_:JR});function QR(e){let t={x:_(e,"x","tanh","float32")};return O.runKernel(Bi,t)}var Ms=L({tanh_:QR});function eF(e,t,n,r,a,s){let i=_(e,"forgetBias","basicLSTMCell"),o=_(t,"lstmKernel","basicLSTMCell"),l=_(n,"lstmBias","basicLSTMCell"),p=_(r,"data","basicLSTMCell"),u=_(a,"c","basicLSTMCell"),h=_(s,"h","basicLSTMCell"),d=nt([p,h],1),c=Oe(d,o),f=Y(c,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=We(f,[0,0],y),x=We(f,[0,g],y),w=We(f,[0,g*2],y),I=We(f,[0,g*3],y),N=Y(z(fr(b),Ms(x)),z(u,fr(Y(i,w)))),C=z(Ms(N),fr(I));return[N,C]}var G1=L({basicLSTMCell_:eF});function tF(e,t,n){let r=_(e,"x","batchToSpaceND"),a=t.reduce((o,l)=>o*l);A(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),A(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),A(r.shape[0]%a===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`);let s={x:r},i={blockShape:t,crops:n};return O.runKernel(Yo,s,i)}var Fp=L({batchToSpaceND_:tF});function nF(e){let t;return e.rank===0||e.rank===1?t=P(e,[1,1,1,e.size]):e.rank===2?t=P(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=P(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function rF(e,t,n,r,a,s){s==null&&(s=.001);let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(n,"variance","batchNorm"),p;a!=null&&(p=_(a,"scale","batchNorm"));let u;r!=null&&(u=_(r,"offset","batchNorm")),A(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),A(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),A(p==null||o.rank===p.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let h={x:nF(i),scale:p,offset:u,mean:o,variance:l},d={varianceEpsilon:s},c=O.runKernel(oi,h,d);return P(c,i.shape)}var Wi=L({batchNorm_:rF});function aF(e,t,n,r,a,s){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(n,"variance","batchNorm"),p;a!=null&&(p=_(a,"scale","batchNorm"));let u;return r!=null&&(u=_(r,"offset","batchNorm")),A(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),A(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),A(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),p!=null&&A(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${p.rank}.`),u!=null&&A(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Wi(i,o,l,u,p,s)}var Vg=L({batchNorm2d_:aF});function sF(e,t,n,r,a,s){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(n,"variance","batchNorm"),p;a!=null&&(p=_(a,"scale","batchNorm"));let u;return r!=null&&(u=_(r,"offset","batchNorm")),A(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),A(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),A(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),p!=null&&A(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${p.rank}.`),u!=null&&A(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Wi(i,o,l,u,p,s)}var Ug=L({batchNorm3d_:sF});function iF(e,t,n,r,a,s){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(n,"variance","batchNorm"),p;a!=null&&(p=_(a,"scale","batchNorm"));let u;return r!=null&&(u=_(r,"offset","batchNorm")),A(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),A(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),A(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),p!=null&&A(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${p.rank}.`),u!=null&&A(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Wi(i,o,l,u,p,s)}var Gg=L({batchNorm4d_:iF});function oF(e,t,n){let r=_(e,"x","bincount"),a=_(t,"weights","bincount");A(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),A(n>=0,()=>`size must be non-negative, but got ${n}.`),A(a.size===r.size||a.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`);let s={x:r,weights:a},i={size:n};return O.runKernel(Wd,s,i)}var Hg=L({bincount_:oF});function lF(e,t){let n=_(e,"s0","broadcastArgs","int32"),r=_(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let a={s0:n,s1:r};return O.runKernel(Vd,a)}var H1=L({broadcastArgs_:lF});function uF(e,t){let n=_(e,"broadcastTo","x"),r=n.shape;if(t.some(l=>!(l>0)||l%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let l=n.shape.slice();for(;l.length<t.length;)l.unshift(1);n=P(n,l)}let a=n.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(a[l]===t[l])s[l]=1;else if(n.shape[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(s.map((l,p)=>l>1?p:-1).filter(l=>l>=0).length===0)return Pr(n);let i={x:n},o={reps:s};return O.runKernel(Ha,i,o)}var ks=L({broadcastTo_:uF});function pF(e){let t={x:_(e,"x","ceil","float32")};return O.runKernel(Xs,t)}var qg=L({ceil_:pF});function Vn(e,t,n){let r={shape:e,value:t,dtype:n};return O.runKernel(cp,{},r)}function hF(e,t,n){let r=_(e,"x","clipByValue");if(A(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),t===n)return Vn(r.shape,t,r.dtype);let a={x:r},s={clipValueMin:t,clipValueMax:n};return O.runKernel(Ga,a,s)}var an=L({clipByValue_:hF});function dF(e){return nt(e,0)}var jg=L({concat1d_:dF});function cF(e,t){return nt(e,t)}var Kg=L({concat2d_:cF});function fF(e,t){return nt(e,t)}var Xg=L({concat3d_:fF});function mF(e,t){return nt(e,t)}var Zg=L({concat4d_:mF});function gF(e,t,n,r,a="NHWC",s=[1,1],i){let o=_(e,"x","conv2d","float32"),l=_(t,"filter","conv2d","float32"),p=o,u=!1;o.rank===3&&(u=!0,p=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),A(p.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${p.rank}.`),A(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),gn("conv2d",r,i);let h=a==="NHWC"?p.shape[3]:p.shape[1];A(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),A(Hr(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);let d={x:p,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=O.runKernel(Zs,d,c);return u?P(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var hn=L({conv2d_:gF});function yF(e,t,n,r,a="NWC",s=1,i){let o=_(e,"x","conv1d"),l=_(t,"filter","conv1d"),p=o,u=!1;o.rank===2&&(u=!0,p=P(o,[1,o.shape[0],o.shape[1]])),A(p.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${p.rank}.`),A(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),gn("conv1d",r,i),A(p.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${p.shape[2]}) must match input depth for filter ${l.shape[1]}.`),A(Hr(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),A(a==="NWC",()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);let h=P(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=P(p,[p.shape[0],1,p.shape[1],p.shape[2]]),c=hn(d,h,[1,n],r,"NHWC",[1,s],i);return u?P(c,[c.shape[2],c.shape[3]]):P(c,[c.shape[0],c.shape[2],c.shape[3]])}var Ic=L({conv1d_:yF});function bF(e,t,n,r,a,s="NHWC",i){A(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,p=!1;t.rank===3&&(p=!0,l=P(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),A(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),A(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),A(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let u=s==="NHWC"?o[3]:o[1],h=s==="NHWC"?l.shape[3]:l.shape[1];A(u===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[2]}.`),A(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),gn("conv2dDerInput",a,i);let d={dy:l,filter:n},c={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=O.runKernel(Ys,d,c);return p?P(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Yg=L({conv2DBackpropInput_:bF});function xF(e,t,n,r,a,s){let i=_(e,"x","conv2dTranspose"),o=_(t,"filter","conv2dTranspose");return Yg(n,i,o,r,a,"NHWC",s)}var Sc=L({conv2dTranspose_:xF});function wF(e,t,n,r,a="NDHWC",s=[1,1,1]){let i=_(e,"x","conv3d"),o=_(t,"filter","conv3d"),l=i,p=!1;i.rank===4&&(p=!0,l=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),A(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),A(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),A(Hr(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),A(a==="NDHWC",()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`);let u={x:l,filter:o},h={strides:n,pad:r,dataFormat:a,dilations:s},d=O.runKernel(hp,u,h);return p?P(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var Jg=L({conv3d_:wF});function vF(e,t,n,r,a){A(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;t.rank===4&&(o=!0,i=P(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],p=i.shape[4];A(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),A(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),A(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),A(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),A(p===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[4]}.`);let u={dy:i,filter:n},h={pad:a,strides:r,inputShape:s},d=O.runKernel(qd,u,h);return o?P(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var q1=L({conv3DBackpropInput_:vF});function kF(e,t,n,r,a){let s=_(e,"x","conv3dTranspose"),i=_(t,"filter","conv3dTranspose");return q1(n,s,i,r,a)}var Qg=L({conv3dTranspose_:kF});function IF(e){let t={x:_(e,"x","cos","float32")};return O.runKernel(Js,t)}var Mp=L({cos_:IF});function SF(e){let t={x:_(e,"x","cosh","float32")};return O.runKernel(Qs,t)}var Nc=L({cosh_:SF});function NF(e,t=0,n=!1,r=!1){let a={x:_(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return O.runKernel(Qo,a,s)}var Xu=L({cumprod_:NF});function TF(e,t=0,n=!1,r=!1){let a={x:_(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return O.runKernel(ei,a,s)}var Tc=L({cumsum_:TF});function _F(e,t,n,r=!1){let a=_(e,"x","denseBincount"),s=_(t,"weights","denseBincount");A(a.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),A(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),A(n>=0,()=>`size must be non-negative, but got ${n}.`),A(s.size===a.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`);let i={x:a,weights:s},o={size:n,binaryOutput:r};return O.runKernel(jd,i,o)}var pd=L({denseBincount_:_F});function CF(e,t,n="NHWC"){let r=_(e,"x","depthToSpace","float32"),a=n==="NHWC"?r.shape[1]:r.shape[2],s=n==="NHWC"?r.shape[2]:r.shape[3],i=n==="NHWC"?r.shape[3]:r.shape[1];A(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),A(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t}  for depthToSpace with input shape
    ${r.shape}`),A(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${r.shape}`),A(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`);let o={x:r},l={blockSize:t,dataFormat:n};return O.runKernel(tl,o,l)}var ey=L({depthToSpace_:CF});function EF(e,t,n,r,a="NHWC",s=[1,1],i){let o=_(e,"x","depthwiseConv2d","float32"),l=_(t,"filter","depthwiseConv2d","float32"),p=o,u=!1;o.rank===3&&(u=!0,p=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),A(p.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),A(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let h=a==="NHWC"?p.shape[3]:p.shape[1];A(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),gn("depthwiseConv2d",r,i);let d={x:p,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=O.runKernel(ti,d,c);return u?P(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Vi=L({depthwiseConv2d_:EF});function $F(e){let t={x:_(e,"x","diag")};return O.runKernel(Zd,t)}var j1=L({diag_:$F});function AF(e,t,n,r,a=[1,1],s="NHWC"){let i=_(e,"x","dilation2d"),o=_(t,"filter","dilation2d");A(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),A(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),A(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,p=!1;i.rank===3&&(l=P(i,[1,i.shape[0],i.shape[1],i.shape[2]]),p=!0);let u={x:l,filter:o},h={strides:n,pad:r,dilations:a},d=O.runKernel(dp,u,h);return p?P(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var ty=L({dilation2d_:AF});function RF(e,t){let n=_(e,"a","equal","string_or_numeric"),r=_(t,"b","equal","string_or_numeric");[n,r]=wt(n,r),rt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(rl,a)}var Gn=L({equal_:RF});function FF(e,t,n){let r=_(t,"a","where"),a=_(n,"b","where"),s=_(e,"condition","where","bool"),i=rt(rt(s.shape,r.shape),a.shape),o=ks(s,i),l=ks(r,i),p=ks(a,i),u={condition:o,t:l,e:p};return O.runKernel($l,u)}var sn=L({where_:FF});function MF(e){let t={x:_(e,"x","zerosLike")};return O.runKernel(Ul,t)}var Ue=L({zerosLike_:MF});function DF(e,t){let n=_(e,"a","div"),r=_(t,"b","div");[n,r]=wt(n,r);let a=me(n,r),s=Ue(a),i=Gn(r,s);return sn(i,s,a)}var ny=L({divNoNan_:DF});function OF(e,t){let n=_(e,"t1","dot"),r=_(t,"t2","dot");A((n.rank===1||n.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);let a=n.rank===1?n.size:n.shape[1],s=r.rank===1?r.size:r.shape[0];if(A(a===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`),n.rank===1&&r.rank===1){let i=P(n,[1,-1]),o=P(r,[-1,1]),l=Oe(i,o);return P(l,[])}else if(n.rank===1&&r.rank===2){let i=P(n,[1,-1]),o=P(r,[r.shape[0],r.shape[1]]),l=Oe(i,o);return P(l,[l.size])}else if(n.rank===2&&r.rank===1){let i=P(r,[-1,1]),o=Oe(n,i);return P(o,[o.size])}else{let i=P(r,[r.shape[0],r.shape[1]]);return Oe(n,i)}}var ry=L({dot_:OF});function LF(e,...t){let n=t.map((a,s)=>_(a,`tensors${s}`,"einsum")),r={equation:e};return O.runKernel(Yd,n,r)}var K1=L({einsum_:LF});function zF(e){let t={x:_(e,"x","elu","float32")};return O.runKernel(ri,t)}var ql=L({elu_:zF});function PF(e){let t=_(e,"x","erf");A(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=ie(t,"float32"));let n={x:t};return O.runKernel(nl,n)}var ay=L({erf_:PF});function sy(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function X1(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)n.indexOf(o)===-1?a.push(e[s++]):a.push(t[i++]);return a}function Z1(e,t){let n=[],r=e.length;for(let s=0;s<r;s++)t.indexOf(s)===-1&&n.push(e[s]);let a=t.map(s=>e[s]);return[n,a]}function Ds(e,t){let n=t.map(r=>1);return X1(e,n,t)}function BF(e,t,n){A(sy(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function Y1(e,t){if(sy(e,t))return null;let n=[];for(let r=0;r<t;++r)e.indexOf(r)===-1&&n.push(r);return e.forEach(r=>n.push(r)),n}function iy(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function WF(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}function VF(e,t=null,n=!1){let r={x:_(e,"x","max")},a={reductionIndices:t,keepDims:n};return O.runKernel(di,r,a)}var nr=L({max_:VF});function UF(e,t=null,n=!1){let r={x:_(e,"x","min")},a={axis:t,keepDims:n};return O.runKernel(gi,r,a)}var No=L({min_:UF});function GF(e,t){let n=_(e,"base","pow"),r=_(t,"exp","pow");[n,r]=wt(n,r);let a={a:n,b:r};return O.runKernel(ki,a)}var ha=L({pow_:GF});function ve(e,t){if((rn(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&rn(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ja(e,[],[],t)}function HF(e){let t={x:_(e,"x","sqrt","float32")};return O.runKernel(Mi,t)}var Jt=L({sqrt_:HF});function qF(e){let t=_(e,"x","square"),n={};return O.runKernel("Square",{x:t},n)}var tt=L({square_:qF});function jF(e,t=null,n=!1){let r=_(e,"x","sum");r.dtype==="bool"&&(r=ie(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return O.runKernel(Di,a,s)}var ye=L({sum_:jF});function KF(e,t="euclidean",n=null,r=!1){e=_(e,"x","norm");let a=J1(e,t,n),s=a.shape;if(r){let i=gr(n,e.shape);s=Ds(a.shape,i)}return P(a,s)}function J1(e,t,n=null){if(e.rank===0)return _t(e);if(e.rank!==1&&n===null)return J1(P(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return ye(_t(e),n);if(t===1/0)return nr(_t(e),n);if(t===-1/0)return No(_t(e),n);if(t==="euclidean"||t===2)return Jt(ye(ha(_t(e),ve(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return nr(ye(_t(e),n[0]),n[1]-1);if(t===1/0)return nr(ye(_t(e),n[1]),n[0]);if(t===-1/0)return No(ye(_t(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return Jt(ye(tt(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var jl=L({norm_:KF});function XF(e,t=null,n=!1){return jl(e,"euclidean",t,n)}var oy=L({euclideanNorm_:XF});function ZF(e){let t={x:_(e,"x","exp")};return O.runKernel(ai,t)}var dn=L({exp_:ZF});function YF(e,t=0){let n=_(e,"x","expandDims","string_or_numeric");A(t<=n.rank,()=>"Axis must be <= rank of the tensor");let r={input:n},a={dim:t};return O.runKernel(al,r,a)}var Xt=L({expandDims_:YF});function JF(e){let t={x:_(e,"x","expm1")};return O.runKernel(sl,t)}var ly=L({expm1_:JF});function QF(e,t){let n=_(e,"x","tile","string_or_numeric");A(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let r={x:n},a={reps:t};return O.runKernel(Ha,r,a)}var Bn=L({tile_:QF});function eM(e,t,n,r="float32"){t==null&&(t=e);let a=Le([e,t],r),s=e<=t?e:t;for(let o=0;o<s;++o)a.set(1,o,o);let i=P(a.toTensor(),[e,t]);if(n==null)return i;if(n.length===1)return Bn(Xt(i,0),[n[0],1,1]);if(n.length===2)return Bn(Xt(Xt(i,0),0),[n[0],n[1],1,1]);if(n.length===3)return Bn(Xt(Xt(Xt(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var _c=L({eye_:eM});function tM(e){let t={x:_(e,"x","floor","float32")};return O.runKernel(si,t)}var Kl=L({floor_:tM});function nM(e,t,n=0,r=0){let a=_(e,"x","gather"),s=_(t,"indices","gather","int32"),i={x:a,indices:s},o={axis:n,batchDims:r};return O.runKernel(ol,i,o)}var Xl=L({gather_:nM});function rM(e,t){let n=_(e,"a","greater","string_or_numeric"),r=_(t,"b","greater","string_or_numeric");[n,r]=wt(n,r),rt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(ul,a)}var yn=L({greater_:rM});function aM(e,t){let n=_(e,"a","greaterEqual","string_or_numeric"),r=_(t,"b","greaterEqual","string_or_numeric");[n,r]=wt(n,r),rt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(li,a)}var ca=L({greaterEqual_:aM});function sM(e){let t={x:_(e,"x","isFinite")};return O.runKernel(pl,t)}var uy=L({isFinite_:sM});function iM(e){let t={x:_(e,"x","isInf")};return O.runKernel(hl,t)}var py=L({isInf_:iM});function oM(e){let t={x:_(e,"x","isNaN")};return O.runKernel(dl,t)}var hy=L({isNaN_:oM});function lM(e,t=.2){let n={x:_(e,"x","leakyRelu")},r={alpha:t};return O.runKernel(pi,n,r)}var Dp=L({leakyRelu_:lM});function uM(e,t){let n=_(e,"a","less","string_or_numeric"),r=_(t,"b","less","string_or_numeric");[n,r]=wt(n,r),rt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(cl,a)}var Cc=L({less_:uM});function pM(e,t){let n=_(e,"a","lessEqual","string_or_numeric"),r=_(t,"b","lessEqual","string_or_numeric");[n,r]=wt(n,r),rt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(fl,a)}var Xa=L({lessEqual_:pM});function Q1(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return O.runKernel(nc,{},r)}function hM(e,t=5,n=1,r=1,a=.5){let s=_(e,"x","localResponseNormalization");A(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),A(wo(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;s.rank===3&&(o=!0,i=P(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},p={depthRadius:t,bias:n,alpha:r,beta:a},u=O.runKernel(fp,l,p);return o?P(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var dy=L({localResponseNormalization_:hM});function dM(e){let t={x:_(e,"x","log","float32")};return O.runKernel(hi,t)}var Hn=L({log_:dM});function cM(e){let t={x:_(e,"x","log1p")};return O.runKernel(ml,t)}var Op=L({log1p_:cM});function fM(e){return A(Aa(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let r=_(t,"x","tf.grad","string_or_numeric"),a=n!=null?_(n,"dy","tf.grad"):null;return O.tidy(()=>{let{value:s,grads:i}=O.gradients(()=>e(r),[r],a);return a!=null&&mn(s.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Ec(i),i[0]})}}function mM(e){return A(Aa(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{A(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let r=ju(t,"args","tf.grads","string_or_numeric"),a=n!=null?_(n,"dy","tf.grads"):null;return O.tidy(()=>{let{value:s,grads:i}=O.gradients(()=>e(...r),r,a);return a!=null&&mn(s.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Ec(i),i})}}function gM(e){return A(Aa(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{A(t instanceof Re,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),A(n==null||n instanceof Re,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:r,value:a}=O.gradients(()=>e(t),[t],n);return Ec(r),{grad:r[0],value:a}}}function yM(e){return A(Aa(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{A(Array.isArray(t)&&t.every(a=>a instanceof Re),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),A(n==null||n instanceof Re,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let r=O.gradients(()=>e(...t),t,n);return n!=null&&mn(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Ec(r.grads),r}}function ek(e,t){A(Aa(e),()=>"The f passed in variableGrads(f) must be a function"),A(t==null||Array.isArray(t)&&t.every(p=>p instanceof $s),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let p in O.registeredVariables)t.push(O.registeredVariables[p])}let r=n?t.filter(p=>!p.trainable):null,a=t.length;t=t.filter(p=>p.trainable),A(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);let s=!0,{value:i,grads:o}=O.gradients(e,t,null,s);A(o.some(p=>p!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),A(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return t.forEach((p,u)=>{o[u]!=null&&(l[p.name]=o[u])}),r!=null&&r.forEach(p=>l[p.name]=null),{value:i,grads:l}}function Ur(e){return O.customGrad(e)}function Ec(e){if(e.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function bM(e){let t={x:_(e,"x","softplus")};return O.runKernel(Dl,t)}var Ui=L({softplus_:bM});function xM(e){let t=_(e,"x","logSigmoid");return Ur(n=>({value:dt(Ui(dt(n))),gradFunc:r=>z(r,fr(dt(n)))}))(t)}var cy=L({logSigmoid_:xM});function wM(e,t){let n=_(e,"a","sub"),r=_(t,"b","sub");[n,r]=wt(n,r);let a={a:n,b:r};return O.runKernel(zi,a)}var pe=L({sub_:wM});function vM(e,t=-1){let n=_(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Ur((r,a)=>{let s=nr(r,t,!0),i=pe(r,s),o=pe(ie(i,"float32"),Hn(ye(dn(i),t,!0)));return a([o]),{value:o,gradFunc:(l,p)=>{let[u]=p,h=!0,d=dn(u);return pe(l,z(ye(l,t,h),d))}}})(n)}var $c=L({logSoftmax_:vM});function kM(e,t=null,n=!1){let r=_(e,"x","logSumExp"),a=gr(t,r.shape),s=nr(r,a,!0),i=pe(r,s),o=dn(i),l=ye(o,a),p=Hn(l),u=Y(P(s,p.shape),p);if(n){let h=Ds(u.shape,a);return P(u,h)}return u}var Ac=L({logSumExp_:kM});function IM(e,t){let n=_(e,"a","logicalAnd","bool"),r=_(t,"b","logicalAnd","bool");rt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(gl,a)}var mr=L({logicalAnd_:IM});function SM(e){let t={x:_(e,"x","logicalNot","bool")};return O.runKernel(yl,t)}var Lp=L({logicalNot_:SM});function NM(e,t){let n=_(e,"a","logicalOr","bool"),r=_(t,"b","logicalOr","bool");rt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(bl,a)}var Rc=L({logicalOr_:NM});function TM(e,t){let n=_(e,"a","logicalXor","bool"),r=_(t,"b","logicalXor","bool");return rt(n.shape,r.shape),mr(Rc(e,t),Lp(mr(e,t)))}var fy=L({logicalXor_:TM}),_h=2147483648;function _M(e,t,n="left"){let r=_(e,"sortedSequence","searchSorted"),a=_(t,"values","searchSorted"),s=r.shape[r.shape.length-1],i=a.shape[a.shape.length-1],o=P(r,[-1,s]),l=P(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(lt(l.shape)>=_h)throw new Error(`values tensor size must less than ${_h}`);if(o.shape[1]>=_h)throw new Error(`trailing dim_size must less than ${_h} for int32 output type, was ${o.shape[1]}`);let p={sortedSequence:o,values:l},u={side:n};return O.runKernel(fc,p,u)}var Fc=L({searchSorted_:_M});function tk(e,t){return Fc(e,t,"left")}function CM(e,t,n,r,a){let s=_(e,"x","maxPool"),i=1,o=s,l=!1;s.rank===3&&(l=!0,o=P(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),A(Hr(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),gn("maxPool",r,a);let p={x:o},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},h=O.runKernel(fi,p,u);return l?P(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var zt=L({maxPool_:CM});function EM(e,t=[1,1,1],n,r,a,s="NDHWC"){let i=_(e,"x","maxPool3d"),o=i,l=!1;i.rank===4&&(l=!0,o=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),A(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),gn("maxPool3d",r,a);let p={x:o},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=O.runKernel(mp,p,u);return l?P(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var my=L({maxPool3d_:EM});function $M(e,t,n,r,a=!1){let s={x:_(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=O.runKernel(ic,s,i);return{result:o[0],indexes:o[1]}}var nk=L({maxPoolWithArgmax_:$M});function AM(e,t){let n=_(e,"a","maximum"),r=_(t,"b","maximum");[n,r]=wt(n,r),n.dtype==="bool"&&(n=ie(n,"int32"),r=ie(r,"int32")),rt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(ci,a)}var qr=L({maximum_:AM});function RM(e,t=null,n=!1){let r={x:_(e,"x","mean")},a={axis:t,keepDims:n};return O.runKernel(mi,r,a)}var yt=L({mean_:RM});function bt(e,t="float32"){if(t==="complex64"){let r=bt(e,"float32"),a=bt(e,"float32");return pa(r,a)}let n=zd(lt(e),t);return O.makeTensor(n,e,t)}function Wn(e,t="float32"){if(t==="complex64"){let r=Wn(e,"float32"),a=bt(e,"float32");return pa(r,a)}let n=dg(lt(e),t);return O.makeTensor(n,e,t)}function rk(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let r=_(e,"x","meshgrid",e instanceof Re?e.dtype:"float32");if(t===void 0)return[r];let a=_(t,"y","meshgrid",t instanceof Re?t.dtype:"float32"),s=lt(r.shape),i=lt(a.shape);return n==="xy"?(r=P(r,[1,-1]),a=P(a,[-1,1]),[Oe(Wn([i,1],r.dtype),r),Oe(a,Wn([1,s],a.dtype))]):(r=P(r,[-1,1]),a=P(a,[1,-1]),[Oe(r,Wn([1,i],r.dtype)),Oe(Wn([s,1],a.dtype),a)])}function FM(e,t){let n=_(e,"a","minimum"),r=_(t,"b","minimum");[n,r]=wt(n,r),n.dtype==="bool"&&(n=ie(n,"int32"),r=ie(r,"int32")),rt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(yi,a)}var Zl=L({minimum_:FM});function MM(e,t,n){A(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let r=_(e,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");A(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);let a=n==="reflect"?1:0;for(let o=0;o<r.rank;o++)A(t[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),A(t[o][0]>=0&&t[o][0]<=r.shape[o]-a&&t[o][1]>=0&&t[o][1]<=r.shape[o]-a,()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-a} or less than 0 for input of shape ${r.shape}`);let s={paddings:t,mode:n},i={x:r};return O.runKernel(bi,i,s)}var gy=L({mirrorPad_:MM});function DM(e,t){let n=_(e,"a","mod"),r=_(t,"b","mod");[n,r]=wt(n,r);let a={a:n,b:r};return O.runKernel(xl,a)}var yy=L({mod_:DM});function OM(e,t=null,n=!1){e=_(e,"x","moments");let r=gr(t,e.shape),a=yt(e,r,n),s=a.shape;n||(s=Ds(a.shape,r));let i=tt(pe(ie(e,"float32"),P(a,s))),o=yt(i,r,n);return{mean:a,variance:o}}var zp=L({moments_:OM});function LM(e,t,n,r){let a=_(t,"data","multiRNNCell"),s=ju(n,"c","multiRNNCell"),i=ju(r,"h","multiRNNCell"),o=a,l=[];for(let h=0;h<e.length;h++){let d=e[h](o,s[h],i[h]);l.push(d[0]),l.push(d[1]),o=d[1]}let p=[],u=[];for(let h=0;h<l.length;h+=2)p.push(l[h]),u.push(l[h+1]);return[p,u]}var ak=L({multiRNNCell_:LM});function zM(e,t,n,r=!1){let a=_(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:i===1?P(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},p=O.runKernel(oc,o,l);return i===1?P(p,[p.size]):p}var sk=L({multinomial_:zM});function PM(e,t){let n=_(e,"a","notEqual","string_or_numeric"),r=_(t,"b","notEqual","string_or_numeric");[n,r]=wt(n,r),rt(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(vl,a)}var Os=L({notEqual_:PM});function BM(e){let t={x:_(e,"x","onesLike")};return O.runKernel(Nl,t)}var qn=L({onesLike_:BM});function WM(e,t){let n=_(e,"v1","outerProduct"),r=_(t,"v2","outerProduct");A(n.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);let a=P(n,[-1,1]),s=P(r,[1,-1]);return Oe(a,s)}var ik=L({outerProduct_:WM});function VM(e,t,n=0){let r=_(e,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:n},s={x:r};return O.runKernel(vi,s,a)}var Er=L({pad_:VM});function UM(e,t,n=0){return A(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Er(e,[t],n)}var ok=L({pad1d_:UM});function GM(e,t,n=0){return A(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Er(e,t,n)}var lk=L({pad2d_:GM});function HM(e,t,n=0){return A(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Er(e,t,n)}var uk=L({pad3d_:HM});function qM(e,t,n=0){return A(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Er(e,t,n)}var pk=L({pad4d_:qM});function jM(e,t,n){let r=_(e,"x","spaceToBatchND");A(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),A(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),A(r.shape.reduce((i,o,l)=>l>0&&l<=t.length?i&&(o+n[l-1][0]+n[l-1][1])%t[l-1]===0:i,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let a={x:r},s={blockShape:t,paddings:n};return O.runKernel(Ol,a,s)}var Pp=L({spaceToBatchND_:jM});function KM(e,t,n,r,a,s,i){a==null&&(a=[1,1]),s==null&&(s=1),r===0&&(r="valid");let o=_(e,"x","maxPool"),l=o,p=!1;o.rank===3&&(p=!0,l=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),A(Hr(s,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`);let u=W1(l.shape,t,s,a,r),h=[u.dilationHeight,u.dilationWidth],d;r==="same"?d=ZM([u.filterHeight,u.filterWidth],h):d=[[0,0],[0,0]];let c=h[0]===1&&h[1]===1,[f,m]=XM([u.inHeight,u.inWidth],h,d),g=c?r:"valid",y=c?l:Pp(l,h,f),b=(n==="avg"?()=>da(y,t,s,g,i):()=>zt(y,t,s,g,i))(),x=c?b:Fp(b,h,m);return p?P(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function XM(e,t,n){let r=n.map(u=>u[0]),a=n.map(u=>u[1]),s=e.concat(r,a),i=t.map((u,h)=>(u-s[h]%u)%u),o=a.map((u,h)=>u+i[h]),l=t.map((u,h)=>[r[h],o[h]]),p=t.map((u,h)=>[0,i[h]]);return[l,p]}function ZM(e,t){let n=e.map((s,i)=>s+(s-1)*(t[i]-1)).map(s=>s-1),r=n.map(s=>Math.floor(s/2)),a=n.map((s,i)=>s-r[i]);return n.map((s,i)=>[r[i],a[i]])}var by=L({pool_:KM});function YM(e,t){let n=_(e,"x","prelu"),r=_(t,"alpha","prelu"),a={x:n,alpha:r};return O.runKernel(Ii,a)}var Bp=L({prelu_:YM});function JM(e,t=null,n=!1){let r=_(e,"x","prod");r.dtype==="bool"&&(r=ie(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return O.runKernel(Si,a,s)}var xy=L({prod_:JM});function QM(e,t,n,r){let a=e.map((u,h)=>_(u,`tensors${h}`,"raggedGather","int32")),s=_(t,"paramsDenseValues","raggedGather"),i=_(n,"indices","raggedGather","int32"),o={paramsNestedSplits:a,paramsDenseValues:s,indices:i},l={outputRaggedRank:r},p=O.runKernel(lc,o,l);return{outputNestedSplits:p.slice(0,p.length-1),outputDenseValues:p[p.length-1]}}var hk=L({raggedGather_:QM});function eD(e,t,n){let r=_(e,"starts","raggedRange"),a=_(t,"limits","raggedRange",r.dtype),s=_(n,"deltas","raggedRange",r.dtype),i={starts:r,limits:a,deltas:s},o=O.runKernel(uc,i);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}var dk=L({raggedRange_:eD});function tD(e,t,n,r,a){let s=_(e,"shape","raggedTensorToTensor","int32"),i=_(t,"values","raggedTensorToTensor"),o=_(n,"defaultValue","raggedTensorToTensor",i.dtype),l=r.map((h,d)=>_(h,`tensors${d}`,"raggedTensorToTensor","int32")),p={shape:s,values:i,defaultValue:o,rowPartitionTensors:l},u={rowPartitionTypes:a};return O.runKernel(pc,p,u)}var ck=L({raggedTensorToTensor_:tD});function nD(e,t,n){let r=lt(e),a=null;if(n==null||n==="float32")a=new Float32Array(r);else if(n==="int32")a=new Int32Array(r);else if(n==="bool")a=new Uint8Array(r);else throw new Error(`Unknown data type ${n}`);for(let s=0;s<r;s++)a[s]=t();return O.makeTensor(a,e,n)}var fk=L({rand_:nD}),wy=Wa(Dd()),vy=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let s=a||Math.random();this.random=wy.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let r=this.nextVal;return this.nextVal=NaN,r}let e,t,n=!1;for(;!n;){let r,a,s;do r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a;while(s>=1||s===0);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},rD=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=wy.alea(a.toString()),this.randn=new vy(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do r=this.randn.nextValue(),s=1+this.c*r;while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},aD=class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=wy.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function sD(e,t,n=1,r="float32",a){if(n==null&&(n=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);let s=new rD(t,n,r,a),i=Le(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var mk=L({randomGamma_:sD});function iD(e,t=0,n=1,r,a){if(r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);let s=new vy(t,n,r,!1,a),i=Le(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var Mc=L({randomNormal_:iD});function oD(e,t,n){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return Mc(e,0,1,t,n)}var gk=L({randomStandardNormal_:oD});function lD(e,t=0,n=1,r="float32",a){let s=Le(e,r),i=new aD(t,n,null,a);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}var Yl=L({randomUniform_:lD});function To(e,t,n=1,r="float32"){if(n===0)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:n,dtype:r};return O.runKernel(gp,{},a)}function uD(e){let t={x:_(e,"x","reciprocal")};return O.runKernel(_l,t)}var ky=L({reciprocal_:uD});function pD(e){let t={x:_(e,"x","relu")};return O.runKernel(Ni,t)}var Je=L({relu_:pD});function hD(e){let t={x:_(e,"x","relu6")};return O.runKernel(Ci,t)}var Dc=L({relu6_:hD});function dD(e,t){let n={x:_(e,"x","reverse")},r={dims:t};return O.runKernel(Ei,n,r)}var ar=L({reverse_:dD});function cD(e){let t=_(e,"x","reverse");return A(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),ar(t,0)}var yk=L({reverse1d_:cD});function fD(e,t){let n=_(e,"x","reverse");return A(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),ar(n,t)}var bk=L({reverse2d_:fD});function mD(e,t){let n=_(e,"x","reverse");return A(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),ar(n,t)}var xk=L({reverse3d_:mD});function gD(e,t){let n=_(e,"x","reverse");return A(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),ar(n,t)}var wk=L({reverse4d_:gD});function yD(e){let t={x:_(e,"x","round")};return O.runKernel($i,t)}var Oc=L({round_:yD});function bD(e){let t={x:_(e,"x","rsqrt","float32")};return O.runKernel(Ai,t)}var Lc=L({rsqrt_:bD});function xD(e){let t={x:_(e,"x","selu")};return O.runKernel(Al,t)}var zc=L({selu_:xD});function wD(e,t,n,r,a,s=[1,1],i="NHWC"){let o=_(e,"x","separableConv2d"),l=_(t,"depthwiseFilter","separableConv2d"),p=_(n,"pointwiseFilter","separableConv2d"),u=o,h=!1;if(o.rank===3&&(h=!0,u=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");A(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),A(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),A(p.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),A(p.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${p.shape[0]}.`),A(p.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${p.shape[1]}.`);let d=l.shape[2],c=l.shape[3];A(p.shape[2]===d*c,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*c}, but got ${p.shape[2]}.`);let f=Vi(u,l,r,a,i,s),m=hn(f,p,1,"valid",i);return h?P(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Jl=L({separableConv2d_:wD});async function vD(e,t){let n=_(e,"x","setdiff1d"),r=_(t,"y","setdiff1d");A(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),A(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),A(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);let a=await n.data(),s=await r.data(),i=new Set(s),o=0;for(let u=0;u<a.length;u++)i.has(a[u])||o++;let l=new Ft([o],n.dtype),p=new Ft([o],"int32");for(let u=0,h=0;u<a.length;u++)i.has(a[u])||(l.values[h]=a[u],p.values[h]=u,h++);return[l.toTensor(),p.toTensor()]}var vk=vD;function kD(e){let t={x:_(e,"x","sign")};return O.runKernel(Ml,t)}var Iy=L({sign_:kD});function ID(e){let t={x:_(e,"x","sin","float32")};return O.runKernel(Ri,t)}var Pc=L({sin_:ID});function SD(e){let t={x:_(e,"x","sinh")};return O.runKernel(Fl,t)}var Bc=L({sinh_:SD});function ND(e,t,n){let r=_(e,"x","slice1d");return A(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),We(r,[t],[n])}var Wp=L({slice1d_:ND});function TD(e,t,n){let r=_(e,"x","slice2d");return A(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),We(r,t,n)}var Wc=L({slice2d_:TD});function _D(e,t,n){let r=_(e,"x","slice3d");return A(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),We(r,t,n)}var Ql=L({slice3d_:_D});function CD(e,t,n){let r=_(e,"x","slice4d");return A(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),We(r,t,n)}var _o=L({slice4d_:CD});function ED(e,t=-1){let n=_(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},a={dim:t};return O.runKernel(Oi,r,a)}var Za=L({softmax_:ED});function $D(e){A(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return O.runKernel(Qd,t)}var Vp=L({fft_:$D});function AD(e){A(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return O.runKernel(ec,t)}var Co=L({ifft_:AD});function RD(e){let t=e.shape[e.shape.length-1],n=e.size/t,r;if(t<=2){let a=P(e,[n,t]);r=Co(a)}else{let a=[n,2*(t-1)],s=P(So(e),[n,t]),i=P($p(e),[n,t]),o=ar(We(s,[0,1],[n,t-2]),1),l=z(ar(We(i,[0,1],[n,t-2]),1),ve(-1)),p=nt([s,o],1),u=nt([i,l],1),h=P(pa(p,u),[a[0],a[1]]);r=Co(h)}if(r=So(r),e.rank===3&&e.shape[0]!==0){let a=r,s=e.shape[0];r=P(r,[s,r.shape[0]/s,r.shape[1]]),a.dispose()}return r}var Vc=L({irfft_:RD});function FD(e,t,n=0){let r={x:_(e,"x","split")},a={numOrSizeSplits:t,axis:n};return O.runKernel(Ll,r,a)}var _n=L({split_:FD});function MD(e,t){A(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],r=e.size/n,a;if(t!=null&&t<n){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,a=We(e,f,m),n=t}else if(t!=null&&t>n){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,a=nt([e,bt(f)],e.shape.length-1),n=t}else a=e;let s=Ue(a),i=P(pa(a,s),[r,n]),o=Vp(i),l=Math.floor(n/2)+1,p=So(o),u=$p(o),h=_n(p,[l,n-l],p.shape.length-1),d=_n(u,[l,n-l],u.shape.length-1),c=a.shape.slice();return c[a.shape.length-1]=l,P(pa(h[0],d[0]),c)}var Up=L({rfft_:MD});function DD(e,t){let n=_(e,"a","squaredDifference"),r=_(t,"b","squaredDifference");[n,r]=wt(n,r),rt(n.shape,r.shape);let a={a:n,b:r},s={};return O.runKernel(Li,a,s)}var Uc=L({squaredDifference_:DD});function OD(e,t){let n=_(e,"x","squeeze","string_or_numeric");return P(n,D0(n.shape,t).newShape)}var Ya=L({squeeze_:OD});function LD(e,t=0){let n=ju(e,"tensors","stack","string_or_numeric");A(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&A(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let r=n,a={axis:t};return O.runKernel(Tl,r,a)}var Vt=L({stack_:LD});function zD(e,t=0){let n={x:_(e,"x","step")},r={alpha:t};return O.runKernel(qa,n,r)}var Gi=L({step_:zD});function PD(e,t,n,r,a=0,s=0,i=0,o=0,l=0){let p={x:_(e,"x","stridedSlice","string_or_numeric")},u={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return O.runKernel(Pl,p,u)}var Sy=L({stridedSlice_:PD});function BD(e){let t={x:_(e,"x","tan","float32")};return O.runKernel(Pi,t)}var Ny=L({tan_:BD});function Ye(e,t){Us(e);let n=Vr(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ja(e,null,n,t)}function Br(e,t,n){if(Us(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let r=Vr(e,n);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ja(e,t,r,n)}function Fa(e,t,n){if(Us(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let r=Vr(e,n);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ja(e,t,r,n)}function kk(e,t,n){if(Us(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let r=Vr(e,n);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ja(e,t,r,n)}function Ik(e,t,n){if(Us(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let r=Vr(e,n);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,ja(e,t,r,n)}function WD(e,t=1,n=!0){let r=_(e,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:r},i={k:t,sorted:n},[o,l]=O.runKernel(Bl,s,i);return{values:o,indices:l}}var Ty=L({topk_:WD});function VD(e,t=0,n=1,r,a){if(r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new vy(t,n,r,!0,a),i=Le(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var Gc=L({truncatedNormal_:VD});function UD(e,t=0){let n=_(e,"x","unique","string_or_numeric");A(n.rank>0,()=>"The input tensor must be at least 1D");let r={x:n},a={axis:t},[s,i]=O.runKernel(gc,r,a);return{values:s,indices:i}}var _y=L({unique_:UD});function GD(e,t,n){let r=_(e,"x","unsortedSegmentSum"),a=_(t,"segmentIds","unsortedSegmentSum","int32");A(wo(n),()=>"numSegments must be of dtype int");let s={x:r,segmentIds:a},i={numSegments:n};return O.runKernel(Sp,s,i)}var Hc=L({unsortedSegmentSum_:GD});function HD(e,t=0){let n=_(e,"x","unstack","string_or_numeric");A(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let r={value:n},a={axis:t};return O.runKernel(Vl,r,a)}var St=L({unstack_:HD});function Sk(e,t){return Fc(e,t,"right")}function Cy(e,t=!0,n,r){return O.makeVariable(e,t,n,r)}function Nk(e,t){let n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);let r=Le(e,"int32"),a=Le([n.length,e.length],"int32");for(let s=0;s<n.length;s++){let i=r.indexToLoc(n[s]),o=s*e.length;a.values.set(i,o)}return a.toTensor()}async function qD(e){let t=_(e,"condition","whereAsync","bool"),n=await t.data(),r=Nk(t.shape,n);return e!==t&&t.dispose(),r}var Ey=qD;async function jD(e,t,n){let r=_(e,"tensor","boolMask"),a=_(t,"mask","boolMask","bool"),s=n==null?0:n,i=a.rank,o=r.shape;A(i>0,()=>"mask cannot be scalar"),mn(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=s;m<s+i;m++)l*=o[m];let p=o.slice(0,s).concat([l],o.slice(s+i)),u=P(r,p),h=P(a,[-1]),d=await Ey(h),c=Ya(d,[1]),f=Xl(u,c,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),c.dispose(),u.dispose(),h.dispose(),d.dispose(),f}var Tk=jD;function KD(e,t,n,r,a=!0){let s=_(e,"v","movingAverage"),i=_(t,"x","movingAverage"),o=_(n,"decay","movingAverage");Q0(s,i),A(Va(s.shape,i.shape),()=>"Shape mismatch in v and x");let l=ve(1),p=pe(l,o),u=z(pe(i,s),p);if(a){A(r!=null,()=>"When using zeroDebias: true, step is required.");let h=_(r,"step","movingAverage");u=me(u,pe(l,ha(o,h)))}return Y(s,u)}var _k=L({movingAverage_:KD});function XD(e,t,n){let r=_(e,"indices","scatterND","int32"),a=_(t,"updates","scatterND");Eg(a,r,n);let s={indices:r,updates:a},i={shape:n};return O.runKernel(El,s,i)}var Ck=L({scatterND_:XD});function ZD(e,t,n,r){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function YD(e,t,n,r=0){let a=_(e,"sparseIndices","sparseToDense","int32"),s=_(t,"sparseValues","sparseToDense","string_or_numeric"),i=_(r,"defaultValue","sparseToDense",s.dtype);ZD(a,s,n,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:n};return O.runKernel(mc,o,l)}var Ek=L({sparseToDense_:YD});function JD(e,t){let n=_(t,"indices","gatherND","int32"),r={params:_(e,"x","gatherND","string_or_numeric"),indices:n};return O.runKernel(ll,r)}var $k=L({gatherND_:JD});function QD(e,t){if(t==null)return e.shape.slice();if(Va(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)t[r]==null&&e.shape[r]!=null?n.push(e.shape[r]):n.push(t[r]);return n}return t}function eO(e,t,n,r){let a=_(e,"x","dropout");if(A(a.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),A(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof Re?a.clone():a;let s=QD(a,n),i=1-t,o=me(Kl(Y(Yl(s,0,1,"float32",r),i)),i);return z(a,o)}var $y=L({dropout_:eO});function Ay(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function qc(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Ye(a,"float32")}async function tO(e,t,n=1){let r=_(e,"predictions","inTopK"),a=_(t,"targets","inTopK");A(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),A(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),mn(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];A(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);let i=await r.data(),o=await a.data(),[l,p]=[i.length/s,s],u=O0("bool",l);for(let h=0;h<l;h++){let d=h*p,c=i.subarray(d,d+p),f=[];for(let m=0;m<c.length;m++)f.push({value:c[m],index:m});f.sort((m,g)=>g.value-m.value),u[h]=0;for(let m=0;m<n;m++)if(f[m].index===o[h]){u[h]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Tn(u,a.shape,"bool")}var Ak=tO,Eo={};Ee(Eo,{conv2d:()=>aO,depthwiseConv2d:()=>lO,matMul:()=>pO});function nO(e,t,n,r,a,s="NHWC",i){let o=e;e.rank===3&&(o=P(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=P(t,[1,t.shape[0],t.shape[1],t.shape[2]])),A(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),A(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),A(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let p=s==="NHWC"?o.shape[3]:o.shape[1],u=s==="NHWC"?l.shape[3]:l.shape[1];A(p===n[2],()=>`Error in conv2dDerFilter: depth of input ${p}) must match input depth in filter (${n[2]}.`),A(u===n[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${n[3]}).`),gn("conv2dDerFilter",a,i);let h={x:o,dy:l},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return O.runKernel(Gd,h,d)}var Ry=L({conv2DBackpropFilter_:nO});function jc(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return z(e,Gi(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Kc(e,t){let n=t,r=Et(e.shape,t.shape);return r.length>0&&(n=ye(n,r)),P(n,e.shape)}function Xc(e,t,n,r){if(t==="linear")return e;if(t==="relu")return Je(e);if(t==="elu")return ql(e);if(t==="relu6")return Dc(e);if(t==="prelu")return Bp(e,n);if(t==="leakyrelu")return Dp(e,r);if(t==="sigmoid")return fr(e);throw new Error(`Unknown fused activation ${t}.`)}var Zc=(e,t)=>!(e>0)||t==="linear";function rO({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:p,leakyreluAlpha:u}){if(l=l||"linear",Zc(O.state.gradientDepth,l)===!1){A(a==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let N=hn(e,t,n,r,a,s,i);return o!=null&&(N=Y(N,o)),Xc(N,l,p,u)}let h=_(e,"x","conv2d","float32"),d=_(t,"filter","conv2d","float32"),c=h,f=!1;h.rank===3&&(f=!0,c=P(h,[1,h.shape[0],h.shape[1],h.shape[2]])),A(c.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`),A(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),gn("fused conv2d",r,i);let m=a==="NHWC"?c.shape[3]:c.shape[1];A(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),A(Hr(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);let g=Rp(c.shape,d.shape,n,s,r,i),y;o!=null&&(y=_(o,"bias","fused conv2d"),[y]=wt(y,h),a==="NHWC"?rt(g.outShape,y.shape):(A(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),A(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let b;if(p!=null){let N=p.shape;if(A(N.length<=1||N.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${N.length}.`),N.length===1)A(N[0]===1||N[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${N}) is not compatible with the number of output channels (${g.outChannels}).`);else if(N.length===3)try{rt(N,g.outShape)}catch{let E=`Error in fused conv2d: PReLU activation weights (${N}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(E)}b=_(p,"prelu weights","fused conv2d")}let x=(N,C)=>{A(a==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);let[E,$,F,R]=C,S=jc(N,F,l);A(Ra(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let D=Yg($.shape,S,E,n,r),W=Ry($,S,E.shape,n,r),U=[D,W];if(R!=null){let G=Kc(R,S);U.push(G)}return U},w={x:c,filter:d,bias:y,preluActivationWeights:b},I={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:u};return o==null?Ur((N,C,E)=>{let $=O.runKernel(Cs,w,I);return E([C,N,$]),f&&($=P($,[$.shape[1],$.shape[2],$.shape[3]])),{value:$,gradFunc:x}})(c,d):Ur((N,C,E,$)=>{let F=O.runKernel(Cs,w,I);return $([C,N,F,E]),f&&(F=P(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:x}})(c,d,y)}var aO=L({fusedConv2d_:rO});function sO(e,t,n,r,a,s=[1,1],i){let o=e;e.rank===3&&(o=P(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=P(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p={x:o,dy:l},u={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return O.runKernel(Kd,p,u)}var Rk=L({depthwiseConv2dNativeBackpropFilter_:sO});function iO(e,t,n,r,a,s=[1,1],i){let o=t,l=!1;t.rank===3&&(l=!0,o=P(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p={dy:o,filter:n},u={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},h=O.runKernel(Xd,p,u);return l?P(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Fk=L({depthwiseConv2dNativeBackpropInput_:iO});function oO({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:p,leakyreluAlpha:u}){if(Zc(O.state.gradientDepth,l)===!1){let I=Vi(e,t,n,r,a,s,i);return o!=null&&(I=Y(I,o)),Xc(I,l,p,u)}let h=_(e,"x","depthwiseConv2d","float32"),d=_(t,"filter","depthwiseConv2d","float32"),c=h,f=!1;h.rank===3&&(f=!0,c=P(h,[1,h.shape[0],h.shape[1],h.shape[2]])),A(c.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),A(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),A(c.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),s==null&&(s=[1,1]),A(Hr(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),gn("fused depthwiseConv2d",r,i);let m=Rp(c.shape,d.shape,n,s,r,i,!0),g;o!=null&&(g=_(o,"bias","fused conv2d"),[g]=wt(g,h),rt(m.outShape,g.shape));let y;p!=null&&(y=_(p,"prelu weights","fused depthwiseConv2d"));let b=(I,N)=>{A(Ra(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[C,E,$,F]=N,R=jc(I,$,l),S=Fk(E.shape,R,C,n,r,s,i),D=Rk(E,R,C.shape,n,r,s,i);if(F!=null){let W=Kc(g,R);return[S,D,W]}return[S,D]},x={x:c,filter:d,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:u};return o==null?Ur((I,N,C)=>{let E=O.runKernel(Es,x,w);return C([N,I,E]),f&&(E=P(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:b}})(c,d):Ur((I,N,C,E)=>{let $=O.runKernel(Es,x,w);return E([N,I,$,C]),f&&($=P($,[$.shape[1],$.shape[2],$.shape[3]])),{value:$,gradFunc:b}})(c,d,g)}var lO=L({fusedDepthwiseConv2d_:oO});function uO({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(Zc(O.state.gradientDepth,s)===!1){let F=Oe(e,t,n,r);return a!=null&&(F=Y(F,a)),Xc(F,s,i,o)}let l=_(e,"a","fused matMul"),p=_(t,"b","fused matMul");[l,p]=wt(l,p);let u=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?p.shape[p.rank-1]:p.shape[p.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=r?p.shape[p.rank-2]:p.shape[p.rank-1],f=l.shape.slice(0,-2),m=p.shape.slice(0,-2),g=lt(f),y=lt(m);A(u===h,()=>`Error in fused matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${l.shape} and ${p.shape} and transposeA=${n} and transposeB=${r} must match.`);let b=rt(l.shape.slice(0,-2),p.shape.slice(0,-2)).concat([d,c]),x=n?P(l,[g,u,d]):P(l,[g,d,u]),w=r?P(p,[y,c,h]):P(p,[y,h,c]),I;a!=null&&(I=_(a,"bias","fused matMul"),[I]=wt(I,l),rt(b,I.shape));let N;i!=null&&(N=_(i,"prelu weights","fused matMul"));let C=(F,R)=>{let[S,D,W,U]=R,G=jc(P(F,W.shape),W,s),j,H;if(!n&&!r?(j=Oe(G,D,!1,!0),H=Oe(S,G,!0,!1)):!n&&r?(j=Oe(G,D,!1,!1),H=Oe(G,S,!0,!1)):n&&!r?(j=Oe(D,G,!1,!0),H=Oe(S,G,!1,!1)):(j=Oe(D,G,!0,!0),H=Oe(G,S,!0,!0)),a!=null){let X=Kc(U,G);return[j,H,X]}else return[j,H]},E={a:x,b:w,bias:I,preluActivationWeights:N},$={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return a==null?Ur((F,R,S)=>{let D=O.runKernel(_s,E,$);return S([F,R,D]),{value:P(D,b),gradFunc:C}})(x,w):Ur((F,R,S,D)=>{let W=O.runKernel(_s,E,$);return D([F,R,W,S]),{value:P(W,b),gradFunc:C}})(x,w,I)}var pO=L({fusedMatMul_:uO});function hO(e){return qc(e,.54,.46)}var dO=L({hammingWindow_:hO});function cO(e){return qc(e,.5,.5)}var Mk=L({hannWindow_:cO});function fO(e,t,n,r=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(We(e,s,t)),s+=n;if(r)for(;s<e.size;){let o=s+t-e.size,l=nt([We(e,s,t-o),Vn([o],a)]);i.push(l),s+=n}return i.length===0?Br([],[0,t]):P(nt(i),[i.length,t])}var Dk=L({frame_:fO});function mO(e,t,n,r,a=Mk){r==null&&(r=Ay(t));let s=Dk(e,t,n),i=z(s,a(t));return Up(i,r)}var gO=L({stft_:mO});function yO(e,t,n,r,a="bilinear",s=0){let i=_(e,"image","cropAndResize"),o=_(t,"boxes","cropAndResize","float32"),l=_(n,"boxInd","cropAndResize","int32"),p=o.shape[0];A(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),A(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${p},4] but had shape ${o.shape}.`),A(l.rank===1&&l.shape[0]===p,()=>`Error in cropAndResize: boxInd must be have size [${p}] but had shape ${o.shape}.`),A(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),A(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),A(a==="bilinear"||a==="nearest",()=>`method must be bilinear or nearest, but was ${a}`);let u={image:i,boxes:o,boxInd:l},h={method:a,extrapolationValue:s,cropSize:r};return O.runKernel(el,u,h)}var bO=L({cropAndResize_:yO});function xO(e){let t=_(e,"image","flipLeftRight","float32");A(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return O.runKernel(il,n,{})}var wO=L({flipLeftRight_:xO});function vO(e){let t=_(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];A(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),A(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);let a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,Bn(t,a)}var kO=L({grayscaleToRGB_:vO});function IO(e,t,n=0,r=.5){let a=_(e,"image","rotateWithOffset","float32");A(a.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);let s={image:a},i={radians:t,fillValue:n,center:r};return O.runKernel(Gl,s,i)}var SO=L({rotateWithOffset_:IO});function eu(e,t,n,r,a,s){r==null&&(r=.5),a==null&&(a=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=e.shape[0];return n=Math.min(n,i),A(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),A(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),A(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),A(t.rank===1,()=>"scores must be a 1D tensor"),A(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),A(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}function NO(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=_(e,"boxes","nonMaxSuppression","float32"),i=_(t,"scores","nonMaxSuppression","float32"),o=eu(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return O.runKernel(kl,{boxes:s,scores:i},l)}var TO=L({nonMaxSuppression_:NO});function _O(e,t,n){let r=CO(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function CO(e,t,n){return $O(e,t,n||EO)}function EO(e,t){return e>t?1:e<t?-1:0}function $O(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);let o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}function Ok(e,t,n,r,a){return Fy(e,t,n,r,a,0)}function Lk(e,t,n,r,a,s){return Fy(e,t,n,r,a,0,!1,s,!0)}function zk(e,t,n,r,a,s){return Fy(e,t,n,r,a,s,!0)}function Fy(e,t,n,r,a,s,i=!1,o=!1,l=!1){let p=[];for(let g=0;g<t.length;g++)t[g]>a&&p.push({score:t[g],boxIndex:g,suppressBeginIndex:0});p.sort(tv);let u=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&p.length>0;){let g=p.pop(),{score:y,boxIndex:b,suppressBeginIndex:x}=g;if(y<a)break;let w=!1;for(let I=h.length-1;I>=x;--I){let N=AO(e,b,h[I]);if(N>=r){w=!0;break}if(g.score=g.score*RO(r,u,N),g.score<=a)break}g.suppressBeginIndex=h.length,w||(g.score===y?(h.push(b),d.push(g.score)):g.score>a&&_O(p,g,tv))}let c=h.length,f=n-c;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=c),m}function AO(e,t,n){let r=e.subarray(t*4,t*4+4),a=e.subarray(n*4,n*4+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),p=Math.min(a[0],a[2]),u=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),c=(o-s)*(l-i),f=(h-p)*(d-u);if(c<=0||f<=0)return 0;let m=Math.max(s,p),g=Math.max(i,u),y=Math.min(o,h),b=Math.min(l,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(c+f-x)}function RO(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function tv(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function FO(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=_(e,"boxes","nonMaxSuppressionAsync"),i=_(t,"scores","nonMaxSuppressionAsync"),o=eu(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),p=l[0],u=l[1],{selectedIndices:h}=Ok(p,u,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Ye(h,"int32")}var MO=FO;function DO(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=_(e,"boxes","nonMaxSuppression"),o=_(t,"scores","nonMaxSuppression"),l=eu(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let p={boxes:i,scores:o},u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},h=O.runKernel(Sl,p,u);return{selectedIndices:h[0],selectedScores:h[1]}}var OO=L({nonMaxSuppressionWithScore_:DO});async function LO(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=_(e,"boxes","nonMaxSuppressionAsync"),o=_(t,"scores","nonMaxSuppressionAsync"),l=eu(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let p=await Promise.all([i.data(),o.data()]),u=p[0],h=p[1],{selectedIndices:d,selectedScores:c}=zk(u,h,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Ye(d,"int32"),selectedScores:Ye(c)}}var zO=LO;function PO(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=_(e,"boxes","nonMaxSuppression"),o=_(t,"scores","nonMaxSuppression"),l=eu(i,o,n,r,a,null),p=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,d={boxes:i,scores:o},c={maxOutputSize:p,iouThreshold:u,scoreThreshold:h,padToMaxOutputSize:s},f=O.runKernel(Il,d,c);return{selectedIndices:f[0],validOutputs:f[1]}}var BO=L({nonMaxSuppressionPadded_:PO});async function WO(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=_(e,"boxes","nonMaxSuppressionAsync"),o=_(t,"scores","nonMaxSuppressionAsync"),l=eu(i,o,n,r,a,null),p=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,[d,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Lk(d,c,p,u,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Ye(f,"int32"),validOutputs:ve(m,"int32")}}var VO=WO;function UO(e,t,n=!1,r=!1){let a=_(e,"images","resizeBilinear");A(a.rank===3||a.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),A(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),A(r===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;a.rank===3&&(i=!0,s=P(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},p=O.runKernel(_i,o,l);return i?P(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Pk=L({resizeBilinear_:UO});function GO(e,t,n=!1,r=!1){let a=_(e,"images","resizeNearestNeighbor");A(a.rank===3||a.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),A(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),A(a.dtype==="float32"||a.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),A(r===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;a.rank===3&&(i=!0,s=P(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},p=O.runKernel(Ti,o,l);return i?P(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Bk=L({resizeNearestNeighbor_:GO});function HO(e,t="binary",n=!1,r=.5){let a=_(e,"image","threshold"),s=.2989,i=.587,o=.114,l=a.shape[0]*a.shape[1],p=z(Ye([r]),255),u,h,d,c;if(A(a.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),A(a.shape[2]===3||a.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),A(a.dtype==="int32"||a.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),A(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),a.shape[2]===3){[u,h,d]=_n(a,[1,1,1],-1);let m=z(u,s),g=z(h,i),y=z(d,o);c=Y(Y(m,g),y)}else c=e;if(t==="otsu"){let m=Hg(ie(Oc(c),"int32"),Tn([]),256);p=qO(m,l)}let f=n?Xa(c,p):yn(c,p);return ie(z(f,255),"int32")}function qO(e,t){let n=Ye([-1]),r=Ye([0]),a=Ye([0]),s,i,o,l,p,u;for(let h=0;h<e.size-1;h++){s=We(e,0,h+1),i=We(e,h+1),p=me(ye(s),t),u=me(ye(i),t);let d=ye(z(s,To(0,s.size)));o=me(d,ye(s));let c=Vn(i.shape,s.size),f=Y(To(0,i.size),c),m=z(i,f);l=me(ye(m),ye(i));let g=pe(o,l),y=pe(o,l),b=z(p,u);a=z(z(b,g),y);let x=yn(a,r);r=sn(x,a,r),n=sn(x,Ye([h]),n)}return n}var jO=L({threshold_:HO});function KO(e,t,n="nearest",r="constant",a=0,s){let i=_(e,"image","transform","float32"),o=_(t,"transforms","transform","float32");A(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),A(o.rank===2&&(o.shape[0]===i.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),A(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let l={image:i,transforms:o},p={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return O.runKernel(Wl,l,p)}var XO=L({transform_:KO});function ZO(e,t,n){A(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),A(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let r=_(e,"a","bandPart");A(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);let a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);let o=P(To(0,s,1,"int32"),[-1,1]),l=To(0,i,1,"int32"),p=pe(o,l),u=mr(Xa(p,ve(+t,"int32")),ca(p,ve(-n,"int32"))),h=bt([s,i],r.dtype);return P(Vt(St(P(r,[-1,s,i])).map(d=>sn(u,d,h))),a)}var YO=L({bandPart_:ZO});function JO(e){let t;if(Array.isArray(e)){t=!1,A(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let a=e[0].shape[0];for(let s=1;s<e.length;++s)A(e[s].shape[0]===a,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[s].shape[0]} vs. ${a})`)}else t=!0,e=_n(e,e.shape[0],0).map(a=>Ya(a,[0]));A(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],r=e;for(let a=0;a<e.length;++a)n.push(O.tidy(()=>{let s=r[a];if(a>0)for(let i=0;i<a;++i){let o=z(ye(z(n[i],s)),n[i]);s=pe(s,o)}return me(s,jl(s,"euclidean"))}));return t?Vt(n,0):n}var QO=L({gramSchmidt_:JO});function e3(e,t=!1){if(A(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return nv(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((l,p)=>l*p),r=St(P(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach(l=>{let[p,u]=nv(l,t);a.push(p),s.push(u)});let i=P(Vt(a,0),e.shape),o=P(Vt(s,0),e.shape);return[i,o]}}function nv(e,t=!1){return O.tidy(()=>{A(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],r=e.shape[1],a=_c(n),s=Pr(e),i=Br([[1]],[1,1]),o=Pr(i),l=n>=r?r:n;for(let p=0;p<l;++p){let u=s,h=o,d=a;[o,s,a]=O.tidy(()=>{let c=We(s,[p,p],[n-p,1]),f=jl(c),m=We(s,[p,p],[1,1]),g=sn(yn(m,0),Br([[-1]]),Br([[1]])),y=pe(m,z(g,f)),b=me(c,y);b.shape[0]===1?o=Pr(i):o=nt([i,We(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let x=dt(me(Oe(g,y),f)),w=We(s,[p,0],[n-p,r]),I=z(x,o),N=Fe(o);if(p===0)s=pe(w,Oe(I,Oe(N,w)));else{let $=pe(w,Oe(I,Oe(N,w)));s=nt([We(s,[0,0],[p,r]),$],0)}let C=Fe(I),E=We(a,[0,p],[n,a.shape[1]-p]);if(p===0)a=pe(E,Oe(Oe(E,o),C));else{let $=pe(E,Oe(Oe(E,o),C));a=nt([We(a,[0,0],[n,p]),$],1)}return[o,s,a]}),Ce([u,h,d])}return!t&&n>r&&(a=We(a,[0,0],[n,r]),s=We(s,[0,0],[r,r])),[a,s]})}var t3=L({qr_:e3}),ln;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(ln||(ln={}));function n3(e,t,n=ln.SUM_BY_NONZERO_WEIGHTS){let r=_(e,"losses","computeWeightedLoss"),a=null;t!=null&&(a=_(t,"weights","computeWeightedLoss"));let s=a==null?r:z(r,a);if(n===ln.NONE)return s;if(n===ln.SUM)return ye(s);if(n===ln.MEAN){if(a==null)return yt(s);{let i=r.size/a.size,o=me(ye(s),ye(a));return i>1?me(o,ve(i)):o}}if(n===ln.SUM_BY_NONZERO_WEIGHTS){if(a==null)return me(ye(s),ve(r.size));{let i=z(a,Wn(r.shape)),o=ie(ye(Os(i,ve(0))),"float32");return me(ye(s),o)}}throw Error(`Unknown reduction: ${n}`)}var fa=L({computeWeightedLoss_:n3});function r3(e,t,n,r=ln.SUM_BY_NONZERO_WEIGHTS){let a=_(e,"labels","absoluteDifference"),s=_(t,"predictions","absoluteDifference"),i=null;n!=null&&(i=_(n,"weights","absoluteDifference")),mn(a.shape,s.shape,"Error in absoluteDifference: ");let o=_t(pe(a,s));return fa(o,i,r)}var a3=L({absoluteDifference_:r3});function s3(e,t,n,r,a=ln.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"labels","cosineDistance"),i=_(t,"predictions","cosineDistance"),o=null;r!=null&&(o=_(r,"weights","cosineDistance")),mn(s.shape,i.shape,"Error in cosineDistance: ");let l=ve(1),p=pe(l,ye(z(s,i),n,!0));return fa(p,o,a)}var i3=L({cosineDistance_:s3});function o3(e,t,n,r=ln.SUM_BY_NONZERO_WEIGHTS){let a=_(e,"labels","hingeLoss"),s=_(t,"predictions","hingeLoss"),i=null;n!=null&&(i=_(n,"weights","hingeLoss")),mn(a.shape,s.shape,"Error in hingeLoss: ");let o=ve(1);a=pe(z(ve(2),a),o);let l=Je(pe(o,z(a,s)));return fa(l,i,r)}var l3=L({hingeLoss_:o3});function u3(e,t,n,r=1,a=ln.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"labels","huberLoss"),i=_(t,"predictions","huberLoss"),o=null;n!=null&&(o=_(n,"weights","huberLoss")),mn(s.shape,i.shape,"Error in huberLoss: ");let l=ve(r),p=_t(pe(i,s)),u=Zl(p,l),h=pe(p,u),d=Y(z(ve(.5),tt(u)),z(l,h));return fa(d,o,a)}var p3=L({huberLoss_:u3});function h3(e,t,n,r=1e-7,a=ln.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"labels","logLoss"),i=_(t,"predictions","logLoss"),o=null;n!=null&&(o=_(n,"weights","logLoss")),mn(s.shape,i.shape,"Error in logLoss: ");let l=ve(1),p=ve(r),u=dt(z(s,Hn(Y(i,p)))),h=z(pe(l,s),Hn(Y(pe(l,i),p))),d=pe(u,h);return fa(d,o,a)}var d3=L({logLoss_:h3});function c3(e,t,n,r=ln.SUM_BY_NONZERO_WEIGHTS){let a=_(e,"labels","meanSquaredError"),s=_(t,"predictions","meanSquaredError"),i=null;n!=null&&(i=_(n,"weights","meanSquaredError")),mn(a.shape,s.shape,"Error in meanSquaredError: ");let o=Uc(a,s);return fa(o,i,r)}var f3=L({meanSquaredError_:c3});function m3(e,t){let n=_(e,"labels","sigmoidCrossEntropyWithLogits"),r=_(t,"logits","sigmoidCrossEntropyWithLogits");mn(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=Je(r),s=z(r,n),i=Op(dn(dt(_t(r))));return Y(pe(a,s),i)}function g3(e,t,n,r=0,a=ln.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"multiClassLabels","sigmoidCrossEntropy"),i=_(t,"logits","sigmoidCrossEntropy"),o=null;if(n!=null&&(o=_(n,"weights","sigmoidCrossEntropy")),mn(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let p=ve(r),u=ve(1),h=ve(.5);s=Y(z(s,pe(u,p)),z(h,p))}let l=m3(s,i);return fa(l,o,a)}var y3=L({sigmoidCrossEntropy_:g3});function b3(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Ur((r,a,s)=>{let i=Ac(a,[n],!0),o=pe(ie(a,"float32"),i);s([r,o]);let l=dt(z(o,r));return{value:ye(l,[n]),gradFunc:(p,u)=>{let[h,d]=u,c=Ds(p.shape,[n]);return[z(P(p,c),pe(ie(h,"float32"),dn(d))),z(P(p,c),pe(dn(d),ie(h,"float32")))]}}})(e,t)}function x3(e,t,n,r=0,a=ln.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"onehotLabels","softmaxCrossEntropy"),i=_(t,"logits","softmaxCrossEntropy"),o=null;if(n!=null&&(o=_(n,"weights","softmaxCrossEntropy")),mn(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let p=ve(r),u=ve(1),h=ve(s.shape[1]);s=Y(z(s,pe(u,p)),me(p,h))}let l=b3(s,i);return fa(l,o,a)}var w3=L({softmaxCrossEntropy_:x3});function v3(e,t,n,r){let a=_(e,"indices","sparseFillEmptyRows","int32"),s=_(t,"values","sparseFillEmptyRows"),i=_(n,"denseShape","sparseFillEmptyRows","int32"),o=_(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(a.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${a.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:a,values:s,denseShape:i,defaultValue:o},p=O.runKernel(yp,l);return{outputIndices:p[0],outputValues:p[1],emptyRowIndicator:p[2],reverseIndexMap:p[3]}}var k3=L({sparseFillEmptyRows_:v3});function I3(e,t,n){let r=_(e,"inputIndices","sparseReshape","int32"),a=_(t,"inputShape","sparseReshape","int32"),s=_(n,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:r,inputShape:a,newShape:s},o=O.runKernel(zl,i);return{outputIndices:o[0],outputShape:o[1]}}var S3=L({sparseReshape_:I3});function N3(e,t,n){let r=_(e,"data","sparseSegmentMean"),a=_(t,"indices","sparseSegmentMean","int32"),s=_(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${a.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return O.runKernel(bp,i)}var T3=L({sparseSegmentMean_:N3});function _3(e,t,n){let r=_(e,"data","sparseSegmentSum"),a=_(t,"indices","sparseSegmentSum","int32"),s=_(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${a.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return O.runKernel(xp,i)}var C3=L({sparseSegmentSum_:_3});function E3(e,t,n,r,a,s,i,o){let l=_(e,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let p=_(t,"dataSplits","stringNGrams");if(p.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let u={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:p},d=O.runKernel(vp,h,u);return{nGrams:d[0],nGramsSplits:d[1]}}var $3=L({stringNGrams_:E3});function A3(e,t,n=!0){let r=_(e,"input","stringSplit","string"),a=_(t,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(a.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);let s={skipEmpty:n},i={input:r,delimiter:a},o=O.runKernel(kp,i,s);return{indices:o[0],values:o[1],shape:o[2]}}var R3=L({stringSplit_:A3});function F3(e,t){let n=_(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let a={input:n};return O.runKernel(Ip,a,r)}var M3=L({stringToHashBucketFast_:F3}),Wk={fft:Vp,ifft:Co,rfft:Up,irfft:Vc},Vk={hammingWindow:dO,hannWindow:Mk,frame:Dk,stft:gO},zr={flipLeftRight:wO,grayscaleToRGB:kO,resizeNearestNeighbor:Bk,resizeBilinear:Pk,rotateWithOffset:SO,cropAndResize:bO,nonMaxSuppression:TO,nonMaxSuppressionAsync:MO,nonMaxSuppressionWithScore:OO,nonMaxSuppressionWithScoreAsync:zO,nonMaxSuppressionPadded:BO,nonMaxSuppressionPaddedAsync:VO,threshold:jO,transform:XO},My={bandPart:YO,gramSchmidt:QO,qr:t3},Uk={absoluteDifference:a3,computeWeightedLoss:fa,cosineDistance:i3,hingeLoss:l3,huberLoss:p3,logLoss:d3,meanSquaredError:f3,sigmoidCrossEntropy:y3,softmaxCrossEntropy:w3},Gk={sparseFillEmptyRows:k3,sparseReshape:S3,sparseSegmentMean:T3,sparseSegmentSum:C3},Hk={stringNGrams:$3,stringSplit:R3,stringToHashBucketFast:M3},ma=class extends O1{minimize(e,t=!1,n){let{value:r,grads:a}=this.computeGradients(e,n);if(n!=null){let s=n.map(i=>({name:i.name,tensor:a[i.name]}));this.applyGradients(s)}else this.applyGradients(a);return Ce(a),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return ek(e,t)}dispose(){this.iterations_!=null&&Ce(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ve(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(ma,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var Yc=class extends ma{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=O.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=O.registeredVariables[t],a=!1;this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:B(()=>Ue(r).variable(a))}),this.accumulatedUpdates[n]==null&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:B(()=>Ue(r).variable(a))});let s=Array.isArray(e)?e[n].tensor:e[t];if(s==null)return;let i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;B(()=>{let l=Y(z(i,this.rho),z(tt(s),1-this.rho)),p=z(me(Jt(Y(o,this.epsilon)),Jt(Y(i,this.epsilon))),s),u=Y(z(o,this.rho),z(tt(p),1-this.rho));i.assign(l),o.assign(u);let h=Y(z(p,-this.learningRate),r);r.assign(h)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ce(this.accumulatedGrads.map(e=>e.variable)),Ce(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Yc.className="Adadelta";Ka(Yc);var Jc=class extends ma{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=O.registeredVariables[t];this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:B(()=>Vn(r.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[n].tensor:e[t];if(a==null)return;let s=this.accumulatedGrads[n].variable;B(()=>{let i=Y(s,tt(a));s.assign(i);let o=Y(z(me(a,Jt(Y(i,O.backend.epsilon()))),-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ce(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};Jc.className="Adagrad";Ka(Jc);var Qc=class extends ma{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],B(()=>{this.accBeta1=ve(t).variable(),this.accBeta2=ve(n).variable()}),r==null&&(this.epsilon=O.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);B(()=>{let n=pe(1,this.accBeta1),r=pe(1,this.accBeta2);t.forEach((a,s)=>{let i=O.registeredVariables[a],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${a}/m`,variable:B(()=>Ue(i).variable(o))}),this.accumulatedSecondMoment[s]==null&&(this.accumulatedSecondMoment[s]={originalName:`${a}/v`,variable:B(()=>Ue(i).variable(o))});let l=Array.isArray(e)?e[s].tensor:e[a];if(l==null)return;let p=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,h=Y(z(p,this.beta1),z(l,1-this.beta1)),d=Y(z(u,this.beta2),z(tt(l),1-this.beta2)),c=me(h,n),f=me(d,r);p.assign(h),u.assign(d);let m=Y(z(me(c,Y(Jt(f),this.epsilon)),-this.learningRate),i);i.assign(m)}),this.accBeta1.assign(z(this.accBeta1,this.beta1)),this.accBeta2.assign(z(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ce(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Ce(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),B(()=>{this.accBeta1.assign(ha(this.beta1,this.iterations_+1)),this.accBeta2.assign(ha(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};Qc.className="Adam";Ka(Qc);var ef=class extends ma{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],B(()=>{this.iteration=ve(0).variable(),this.accBeta1=ve(t).variable()}),r==null&&(this.epsilon=O.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);B(()=>{let n=pe(1,this.accBeta1),r=me(-this.learningRate,Y(z(this.iteration,this.decay),1));t.forEach((a,s)=>{let i=O.registeredVariables[a],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${a}/m`,variable:Ue(i).variable(o)}),this.accumulatedWeightedInfNorm[s]==null&&(this.accumulatedWeightedInfNorm[s]={originalName:`${a}/v`,variable:Ue(i).variable(o)});let l=Array.isArray(e)?e[s].tensor:e[a];if(l==null)return;let p=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,h=Y(z(p,this.beta1),z(l,1-this.beta1)),d=z(u,this.beta2),c=_t(l),f=qr(d,c);p.assign(h),u.assign(f);let m=Y(z(me(r,n),me(h,Y(f,this.epsilon))),i);i.assign(m)}),this.iteration.assign(Y(this.iteration,1)),this.accBeta1.assign(z(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ce(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Ce(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};ef.className="Adamax";Ka(ef);var Gp=class extends ma{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(r==null)return;let a=O.registeredVariables[t];B(()=>{let s=Y(z(this.c,r),a);a.assign(s)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Bt(ve(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Gp.className="SGD";Ka(Gp);var tf=class extends Gp{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=ve(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=O.registeredVariables[t];this.accumulations[n]==null&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:B(()=>Ue(r).variable(!1))});let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];s!=null&&B(()=>{let i,o=Y(z(this.m,a),s);this.useNesterov?i=Y(z(this.c,Y(s,z(o,this.m))),r):i=Y(z(this.c,o),r),a.assign(o),r.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ce(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};tf.className="Momentum";Ka(tf);var nf=class extends ma{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,r==null&&(this.epsilon=O.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=O.registeredVariables[t],a=!1;this.accumulatedMeanSquares[n]==null&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:B(()=>Ue(r).variable(a))}),this.accumulatedMoments[n]==null&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:B(()=>Ue(r).variable(a))}),this.accumulatedMeanGrads[n]==null&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:B(()=>Ue(r).variable(a))});let s=Array.isArray(e)?e[n].tensor:e[t];if(s==null)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;B(()=>{let l=Y(z(i,this.decay),z(tt(s),1-this.decay));if(this.centered){let p=this.accumulatedMeanGrads[n].variable,u=Y(z(p,this.decay),z(s,1-this.decay)),h=me(z(s,this.learningRate),Jt(pe(l,Y(tt(u),this.epsilon)))),d=Y(z(o,this.momentum),h);i.assign(l),p.assign(u),o.assign(d);let c=pe(r,d);r.assign(c)}else{let p=Y(z(i,this.decay),z(tt(s),1-this.decay)),u=Y(z(o,this.momentum),me(z(s,this.learningRate),Jt(Y(p,this.epsilon))));i.assign(p),o.assign(u);let h=pe(r,u);r.assign(h)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ce(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ce(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Ce(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};nf.className="RMSProp";Ka(nf);var wa=class{static sgd(e){return new Gp(e)}static momentum(e,t,n=!1){return new tf(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new nf(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Qc(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Yc(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new ef(e,t,n,r,a)}static adagrad(e,t=.1){return new Jc(e,t)}},ds={sgd:wa.sgd,momentum:wa.momentum,adadelta:wa.adadelta,adagrad:wa.adagrad,rmsprop:wa.rmsprop,adamax:wa.adamax,adam:wa.adam},D3=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:e=>e())();function Dy(){return new Promise(e=>D3(()=>e()))}var T={};Ee(T,{ERF_A1:()=>Z3,ERF_A2:()=>Y3,ERF_A3:()=>J3,ERF_A4:()=>Q3,ERF_A5:()=>eL,ERF_P:()=>X3,PARALLELIZE_THRESHOLD:()=>Oy,RowPartitionType:()=>Mr,SELU_SCALE:()=>jk,SELU_SCALEALPHA:()=>qk,applyActivation:()=>Xc,assertAndGetBroadcastShape:()=>rt,assertAxesAreInnerMostDims:()=>BF,assertParamsConsistent:()=>O3,assignToTypedArray:()=>iL,axesAreInnerMostDims:()=>sy,calculateShapes:()=>T1,checkEinsumDimSizes:()=>dL,checkPadOnDimRoundingMode:()=>gn,combineLocations:()=>X1,combineRaggedTensorToTensorShapes:()=>z3,complexWithEvenIndex:()=>rL,complexWithOddIndex:()=>aL,computeConv2DInfo:()=>Rp,computeConv3DInfo:()=>V1,computeDefaultPad:()=>Bg,computeDilation2DInfo:()=>WR,computeOptimalWindowSize:()=>V3,computeOutAndReduceShapes:()=>Z1,computeOutShape:()=>L3,computePool2DInfo:()=>W1,computePool3DInfo:()=>VR,convertConv2DDataFormat:()=>U1,decodeEinsumEquation:()=>pL,eitherStridesOrDilationsAreOne:()=>Hr,expandShapeToKeepDim:()=>Ds,exponent:()=>lL,exponents:()=>oL,fromStringArrayToUint8:()=>FL,fromUint8ToStringArray:()=>RL,getAxesPermutation:()=>Y1,getBroadcastDims:()=>I1,getComplexWithIndex:()=>sL,getEinsumComputePath:()=>cL,getEinsumPermutation:()=>hL,getFusedBiasGradient:()=>Kc,getFusedDyActivation:()=>jc,getImageCenter:()=>U3,getInnerMostAxes:()=>WF,getPermuted:()=>H3,getRaggedRank:()=>B3,getReductionAxes:()=>Et,getReshaped:()=>G3,getReshapedPermuted:()=>q3,getRowPartitionTypesHelper:()=>P3,getSliceBeginCoords:()=>j3,getSliceSize:()=>K3,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>yL,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>bL,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>xL,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>kL,getSparseReshapeInputOutputMismatchErrorMessage:()=>SL,getSparseReshapeInputOutputMultipleErrorMessage:()=>IL,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>wL,getSparseReshapeNegativeOutputDimErrorMessage:()=>vL,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>CL,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>NL,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>TL,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>_L,getUndoAxesPermutation:()=>iy,isIdentityPermutation:()=>fL,log:()=>i$,mergeRealAndImagArrays:()=>tL,prepareAndValidate:()=>N1,prepareSplitSize:()=>gL,segment_util:()=>Kk,shouldFuse:()=>Zc,slice_util:()=>Mt,splitRealAndImagArrays:()=>nL,tupleValuesAreOne:()=>Ra,upcastType:()=>rr,validateDefaultValueShape:()=>W3,validateInput:()=>Eg,validateUpdateShape:()=>Cg,warn:()=>Ia});function O3(e,t){let n=e[0].length;e.forEach((a,s)=>{A(a.length===n,()=>`Error in concat${n}D: rank of tensors[${s}] must be the same as the rank of the rest (${n})`)}),A(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let r=e[0];e.forEach((a,s)=>{for(let i=0;i<n;i++)A(i===t||a[i]===r[i],()=>`Error in concat${n}D: Shape of tensors[${s}] (${a}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function L3(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Mr;(function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"})(Mr||(Mr={}));function z3(e,t,n){let r=new Array;if(n==null&&t==null)return r;if(t==null)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(n==null)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){let s=n[a],i=r[r.length-n.length+a],o=r[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${o}`)}else r[i]=s}return r}function P3(e){let t={FIRST_DIM_SIZE:Mr.FIRST_DIM_SIZE,VALUE_ROWIDS:Mr.VALUE_ROWIDS,ROW_LENGTHS:Mr.ROW_LENGTHS,ROW_SPLITS:Mr.ROW_SPLITS,ROW_LIMITS:Mr.ROW_LIMITS,ROW_STARTS:Mr.ROW_STARTS},n=[];for(let r of e)if(r in t)n.push(t[r]);else break;return n}function B3(e){return e.length===0?0:e[0]===Mr.FIRST_DIM_SIZE?e.length-1:e.length}function W3(e,t){if(e==null||t==null)return;let n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){let s=e[a],i=t[a+1];if(s>=0&&i>=0&&s!==1&&s!==i)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${s} but ragged tensor input.flatValues.shape[${a-e.length}] = ${i}`)}}var Oy=30;function V3(e){return e<=Oy?e:ed(e,Math.floor(Math.sqrt(e)))}function U3(e,t,n){let r=n*(typeof e=="number"?e:e[0]),a=t*(typeof e=="number"?e:e[1]);return[r,a]}function G3(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let s=t.length;for(let i=0;i<s;++i)a=a.concat([e[i+1]/t[i],t[i]]);a=a.concat(e.slice(s+1))}return a}function H3(e,t,n=!0){let r=[];if(n){r.push(t);for(let a=t+1;a<e;++a)a<=2*t?(r.push(a),r.push(a-(t+1))):r.push(a)}else{let a=[],s=[];for(let i=1;i<e;++i)i>=t*2+1||i%2===1?s.push(i):a.push(i);r.push(...a),r.push(0),r.push(...s)}return r}function q3(e,t,n,r=!0){let a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?r?a.push(t[s-1]*e[s]):a.push(e[s]/t[s-1]):a.push(e[s]);return a}function j3(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function K3(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var qk=1.7580993408473768,jk=1.0507009873554805,X3=.3275911,Z3=.254829592,Y3=-.284496736,J3=1.421413741,Q3=-1.453152027,eL=1.061405429;function tL(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function nL(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function rL(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function aL(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function sL(e,t){let n=e[t*2],r=e[t*2+1];return{real:n,imag:r}}function iL(e,t,n,r){e[r*2]=t,e[r*2+1]=n}function oL(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function lL(e,t,n){let r=(n?2:-2)*Math.PI*(e/t),a=Math.cos(r),s=Math.sin(r);return{real:a,imag:s}}var Gf="->",uL=/->/g,rv=",",av="...";function pL(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(uL,"").length)/Gf.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Gf}").`);let[r,a]=e.split(Gf);A(r.indexOf(av)===-1,()=>`The ellipsis notation ("${av}") is not supported yet.`);let s=r.split(rv),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let d=0;d<a.length;++d){let c=a[d];if(!s.some(f=>f.indexOf(c)!==-1))throw new Error(`Output subscripts contain the label ${c} not present in the input subscripts.`);o.indexOf(c)===-1&&o.push(c)}for(let d=0;d<r.length;++d){let c=r[d];o.indexOf(c)===-1&&c!==rv&&o.push(c)}let l=new Array(s.length);for(let d=0;d<i;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error(`Found duplicate axes in input component ${s[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let c=0;c<s[d].length;++c)l[d].push(o.indexOf(s[d][c]))}let p=o.length,u=a.length,h=[];for(let d=u;d<p;++d)h.push(d);return{allDims:o,summedDims:h,idDims:l}}function hL(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;let r=[];for(let a=0;a<e;++a)n[a]===-1&&r.push(a);return n=n.filter(a=>a!==-1),{permutationIndices:n,expandDims:r}}function dL(e,t,n){let r=new Array(e);for(let a=0;a<n.length;++a){let s=n[a].shape;for(let i=0;i<t[a].length;++i)r[t[a][i]]===void 0?r[t[a][i]]=s[i]:A(r[t[a][i]]===s[i],()=>`Expected dimension ${r[t[a][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function cL(e,t){let n=e,r=[],a=0;e.length===0&&n.push(-1),a=e.length+1;for(let i=0;i<a;++i)r.push([]);let s=[];for(let i=0;i<n.length;++i){let o=n[i],l=mL(t,o);for(let p of l)s.indexOf(p)===-1&&(r[i].push(p),s.push(p))}return{path:n,steps:r}}function fL(e){return e.every((t,n)=>t===n)}function mL(e,t){let n=[];for(let r=0;r<e.length;++r)(e[r].length===0||e[r].indexOf(t)!==-1||t===-1)&&n.push(r);return n}function gL(e,t,n=0){let r=[];if(typeof t=="number")A(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{let a=t.reduce((i,o)=>(o===-1&&(i+=1),i),0);A(a<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let i=t.reduce((o,l)=>l>0?o+l:o);t[s]=e.shape[n]-i}A(e.shape[n]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function yL(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function bL(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function xL(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function wL(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function vL(e,t){return`size ${e} must be non-negative, not ${t}`}function kL(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function IL(e,t){let n=lt(e),r=lt(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${e} outputShape= ${t}`}function SL(e,t){let n=lt(e),r=lt(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${r}. inputShape=${e} outputShape=${t}`}function NL(){return"segment ids must be >= 0"}function TL(){return"segment ids are not increasing"}function _L(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function CL(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var Kk={};Ee(Kk,{collectGatherOpShapeInfo:()=>AL,computeOutShape:()=>$L,segOpComputeOptimalWindowSize:()=>EL});function EL(e,t){let n=!1,r;for(e<=Oy?(r=e,n=!0):r=ed(e,Math.floor(Math.sqrt(e)));!n;)r>t||r===e?n=!0:r=ed(e,r+1);return r}function $L(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function AL(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(r!==0&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);let i=e.shape[n],o=[],l=1,p=1,u=1;for(let h=0;h<r;++h)o.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<n;h++)o.push(e.shape[h]),p*=e.shape[h];for(let h=r;h<a;h++)o.push(t.shape[h]);for(let h=n+1;h<s;h++)o.push(e.shape[h]),u*=e.shape[h];return{batchSize:l,sliceSize:u,outerSize:p,dimSize:i,outputShape:o}}function RL(e){try{return e.map(t=>id(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function FL(e){return e.map(t=>_p(t))}var jr={};Ee(jr,{nonMaxSuppressionV3Impl:()=>Ok,nonMaxSuppressionV4Impl:()=>Lk,nonMaxSuppressionV5Impl:()=>zk,whereImpl:()=>Nk});var Xk={kernelName:Wo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,Gi(ie(n,"float32"),-1))}}},ML={kernelName:Vo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=tt(ie(n,"float32")),a=Jt(pe(ve(1),r));return dt(me(e,a))}}}},DL={kernelName:Uo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=Jt(pe(tt(ie(n,"float32")),1));return me(e,r)}}}},OL={kernelName:Ua,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=rt(n.shape,r.shape);return{a:()=>{let s=e,i=Et(n.shape,a);return i.length>0&&(s=ye(s,i)),P(s,n.shape)},b:()=>{let s=e,i=Et(r.shape,a);return i.length>0&&(s=ye(s,i)),P(s,r.shape)}}}},LL={kernelName:Gs,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((r,a)=>{n[a]=()=>e.clone()}),n}},zL={kernelName:Hs,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ue(n)}}},PL={kernelName:lp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ue(n)}}},BL={kernelName:qo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,Jt(pe(ve(1),tt(ie(n,"float32")))))}}},WL={kernelName:jo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=Jt(Y(ve(1),tt(ie(n,"float32"))));return me(e,r)}}}},VL={kernelName:Zo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=rt(n.shape,r.shape);return{a:()=>{let s=Y(tt(n),tt(r)),i=z(e,me(r,s)),o=Et(n.shape,a);return o.length>0&&(i=ye(i,o)),P(i,n.shape)},b:()=>{let s=Y(tt(n),tt(r)),i=dt(z(e,me(n,s))),o=Et(r.shape,a);return o.length>0&&(i=ye(i,o)),P(i,r.shape)}}}},UL={kernelName:Ko,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,Y(tt(ie(n,"float32")),1))}}},GL={kernelName:Xo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,pe(ve(1),tt(ie(n,"float32"))))}}};function HL(e,t,n,r,a,s){let i=_(e,"dy","avgPool3dGrad"),o=_(t,"input","avgPool3dGrad"),l=i,p=o,u=!1;o.rank===4&&(u=!0,l=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),p=P(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),A(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),A(p.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),gn("avgPool3dGrad",a,s);let h={dy:l,input:p},d={filterSize:n,strides:r,pad:a,dimRoundingMode:s},c=O.runKernel(Bd,h,d);return u?P(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var qL=L({avgPool3dGrad_:HL}),jL={kernelName:up,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>qL(e,r,a,s,i,o)}}};function KL(e,t,n,r,a){let s=_(e,"dy","avgPoolGrad"),i=_(t,"input","avgPoolGrad");A(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,l=s,p=!1;i.rank===3&&(p=!0,o=P(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=P(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),A(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let u={dy:l,input:o},h={filterSize:n,strides:r,pad:a},d=O.runKernel(Pd,u,h);return p?P(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var XL=L({avgPoolGrad_:KL}),ZL={kernelName:qs,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>XL(e,r,a,s,i)}}},YL={kernelName:js,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return!s&&!i?{a:()=>Oe(e,a,!1,!0),b:()=>Oe(r,e,!0,!1)}:!s&&i?{a:()=>Oe(e,a,!1,!1),b:()=>Oe(e,r,!0,!1)}:s&&!i?{a:()=>Oe(a,e,!1,!0),b:()=>Oe(r,e,!1,!1)}:{a:()=>Oe(a,e,!0,!0),b:()=>Oe(e,r,!0,!0)}}},JL={kernelName:Yo,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>Pp(e,r,a)}}},QL={kernelName:q0,gradFunc:(e,t,n)=>{let r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let l=a.length-1;l>=0;l--)if(a[l]===s[l])i[l]=1;else if(a[l]!==1)throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>ye(e,o,!0)}}},ez={kernelName:Ks,gradFunc:e=>({x:()=>e.clone()})},tz={kernelName:Xs,gradFunc:e=>({x:()=>Ue(e)})},nz={kernelName:Ga,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>sn(mr(ca(r,a),Xa(r,s)),e,Ue(e))}}},rz={kernelName:pp,inputsToSave:["x"],gradFunc:Xk.gradFunc},az={kernelName:Jo,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map(o=>o.shape),{axis:a}=n,s=gr(a,t[0].shape)[0],i=r.map(o=>o[s]);return _n(e,i,s).map(o=>()=>o)}},sz={kernelName:Zs,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return A(Ra(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Yg(r.shape,e,a,i,o,l),filter:()=>Ry(r,e,a.shape,i,o,l)}}},iz={kernelName:Ys,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>hn(e,a,s,i,o,1,l),filter:()=>Ry(e,r,a.shape,s,i,o,l)}}};function oz(e,t,n,r,a){let s=e;e.rank===4&&(s=P(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;i.rank===4&&(i=P(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),A(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),A(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),A(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),A(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),A(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);let o={x:s,dy:i},l={strides:r,pad:a,filterShape:n};return O.runKernel(Hd,o,l)}var lz=L({conv3DBackpropFilter_:oz}),uz={kernelName:hp,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;A(Ra(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);let[i,o]=t;return{x:()=>q1(i.shape,e,o,a,s),filter:()=>lz(i,e,o.shape,a,s)}}},pz={kernelName:Js,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(dt(Pc(ie(n,"float32"))),e)}}},hz={kernelName:Qs,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(Bc(ie(n,"float32")),e)}}},dz={kernelName:ei,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let o=Y1([a],r.rank),l=Tc(e,a,s,!i);return o!=null&&(l=Fe(l,o)),l}}}},cz={kernelName:ti,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=r==null?[1,1]:r;A(Ra(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[l,p]=t;return A(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),A(p.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${p.rank}.`),A(l.shape[3]===p.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),A(Hr(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),gn("depthwiseConv2d",s,i),{x:()=>Fk(l.shape,e,p,a,s,o,i),filter:()=>Rk(l,e,p.shape,a,s,o,i)}}},fz={kernelName:dp,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>O.runKernel(td,s,n),filter:()=>O.runKernel(nd,i,n)}}},mz={kernelName:ri,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>O.runKernel(Jd,r)}}},gz={kernelName:nl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=z(dn(dt(tt(n))),2/Math.sqrt(Math.PI));return{x:()=>z(e,r)}}},yz={kernelName:ai,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,n)}}},bz={kernelName:al,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>P(e,n.shape)}}},xz={kernelName:sl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,dn(n))}}},wz={kernelName:si,gradFunc:e=>({x:()=>Ue(e)})},vz={kernelName:ii,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=rt(n.shape,r.shape);return{a:()=>{let s=me(e,ie(r,"float32")),i=Et(n.shape,a);return i.length>0?P(ye(s,i),n.shape):s},b:()=>{let s=z(e,ie(n,"float32")),i=Et(r.shape,a);i.length>0&&(s=P(ye(s,i),r.shape));let o=tt(r);return dt(me(s,ie(o,"float32")))}}}},kz={kernelName:oi,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=o==null?ve(1):o,p=Et(s.shape,a.shape),u=[];if(s.rank===1){for(let m=0;m<a.shape.length-1;++m)u.push(a.shape[m]);u.push(1)}let h=pe(a,s),d=z(e,l),c=Lc(Y(i,ve(r))),f=z(z(z(c,c),c),ve(-.5));return{x:()=>s.rank===1?P(z(z(e,Bn(P(c,[1,1,1,s.shape[0]]),u)),l),a.shape):P(z(z(e,c),l),a.shape),mean:()=>{let m=z(z(c,ve(-1)),d);return s.rank===1&&(m=ye(m,p)),P(m,s.shape)},variance:()=>{let m=z(z(f,h),d);return s.rank===1&&(m=ye(m,p)),P(m,s.shape)},scale:()=>{let m=z(h,c),g=z(e,m);return s.rank===1&&(g=ye(g,p)),P(g,s.shape)},offset:()=>{let m=e;return s.rank===1&&(m=ye(m,p)),P(m,s.shape)}}}},Iz={kernelName:ol,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s}=n,i=gr(s,r.shape)[0];return{x:()=>{let o=r.shape,l=a.size,p=o.slice(0,i),u=p.length,h=o.slice(s,o.length).slice(1),d=h.length,c=sv(0,u),f=sv(u+1,u+1+d),m=iv([p,[l],h]),g=P(e,m),y=P(a,[l]),b=iv([[u],c,f]),x=Fe(g,b),w=Hc(x,y,r.shape[i]),I=iy(b);return w=Fe(w,I),w},indices:()=>a}}};function sv(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function iv(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var Sz={kernelName:li,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Ue(n),b:()=>Ue(r)}}},Nz={kernelName:ui,gradFunc:e=>({x:()=>ie(e,"float32")})},Tz={kernelName:pl,gradFunc:e=>({x:()=>Ue(e)})},_z={kernelName:hl,gradFunc:e=>({x:()=>Ue(e)})},Cz={kernelName:dl,gradFunc:e=>({x:()=>Ue(e)})},Ez={kernelName:pi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=yn(r,0);return{x:()=>sn(s,e,z(e,a))}}},$z={kernelName:ml,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,Y(n,1))}}},Az={kernelName:hi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,ie(n,"float32"))}}},Rz={kernelName:K0,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let s=dn(r);return pe(e,z(ye(e,a,!0),s))}}}};function Fz(e,t,n,r=5,a=1,s=1,i=.5){let o={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:s,beta:i};return O.runKernel(rc,o,l)}var Mz=L({localResponseNormalizationBackprop_:Fz}),Dz={kernelName:fp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>Mz(r,a,e,s,i,o,l)}}};function Zk(e,t,n,r){return t.rank<n.rank&&(t=P(t,Ds(t.shape,r))),e.rank<n.rank&&(e=P(e,Ds(e.shape,r))),{x:()=>z(e,ie(Gn(n,t),e.dtype))}}var ov={kernelName:di,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:a}=r,s=t[0],i=t[1],o=gr(a,s.shape),l=Zk(e,i,s,o);return{x:()=>l.x()}}},Oz={kernelName:ci,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>z(e,ie(ca(n,r),"float32")),b:()=>z(e,ie(Cc(n,r),"float32"))}}};function Lz(e,t,n,r,a,s,i){let o=_(e,"dy","maxPool3dGrad"),l=_(t,"input","maxPool3dGrad"),p=_(n,"output","maxPool3dGrad"),u=o,h=l,d=p,c=!1;l.rank===4&&(c=!0,u=P(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=P(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=P(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),A(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),A(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),A(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),gn("maxPool3dGrad",s,i);let f={dy:u,input:h,output:d},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=O.runKernel(sc,f,m);return c?P(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var zz=L({maxPool3dGrad_:Lz}),Pz={kernelName:mp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>zz(e,r,a,s,i,o,l)}}};function Bz(e,t,n,r,a,s,i){let o=_(e,"dy","maxPoolGrad"),l=_(t,"input","maxPoolGrad"),p=_(n,"output","maxPoolGrad");A(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),A(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),A(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),gn("maxPoolGrad",s,i);let u={dy:o,input:l,output:p},h={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return O.runKernel(ac,u,h)}var Wz=L({maxPoolGrad_:Bz}),Vz={kernelName:fi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>Wz(e,r,a,s,i,o)}}},Uz={kernelName:mi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=gr(a,r.shape),i=Z1(r.shape,s)[1],o=lt(i);return{x:()=>{let l=r.shape.slice();s.forEach(u=>{l[u]=1});let p=P(e,l);return me(z(p,Wn(r.shape,"float32")),o)}}}},Gz={kernelName:gi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:a}=r,[s,i]=t,o=gr(a,s.shape),l=Zk(e,i,s,o);return{x:()=>l.x()}}},Hz={kernelName:yi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>z(e,ie(Xa(n,r),"float32")),b:()=>z(e,ie(yn(n,r),"float32"))}}},qz={kernelName:bi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(i=>i[0]);return{x:()=>We(e,s,r.shape)}}},jz={kernelName:xl,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=rt(n.shape,r.shape);return{a:()=>{let s=Et(n.shape,a);return s.length>0?P(ye(e,s),n.shape):e},b:()=>{let s=z(e,dt(Kl(me(n,r)))),i=Et(r.shape,a);return i.length>0?P(ye(s,i),r.shape):s}}}},Kz={kernelName:xi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=rt(n.shape,r.shape);return{a:()=>{let s=z(e,ie(r,"float32")),i=Et(n.shape,a);return i.length>0?P(ye(s,i),n.shape):s},b:()=>{let s=z(e,ie(n,"float32")),i=Et(r.shape,a);return i.length>0?P(ye(s,i),r.shape):s}}}},Xz={kernelName:wl,gradFunc:e=>({x:()=>dt(e)})},Zz={kernelName:wi,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>bt(n.shape,"float32")}}},Yz={kernelName:Nl,gradFunc:e=>({x:()=>Ue(e)})},Jz={kernelName:Tl,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return St(e,r).map(a=>()=>a)}},lv={kernelName:vi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(i=>i[0]);return{x:()=>We(e,s,r.shape)}}},Qz={kernelName:ki,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=n,i=r,o=rt(s.shape,i.shape);return{a:()=>{let l=ie(i,"float32"),p=z(e,z(l,ha(s,pe(l,ve(1))))),u=Et(s.shape,o);return u.length>0&&(p=ye(p,u)),P(p,s.shape)},b:()=>{let l=yn(s,0),p=sn(l,Hn(s),Ue(s)),u=z(e,z(a,p)),h=Et(i.shape,o);return h.length>0&&(u=ye(u,h)),P(u,i.shape)}}}},eP={kernelName:Ii,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=yn(n,0);return{x:()=>sn(a,e,z(e,r)),alpha:()=>{let s=sn(a,Ue(e),z(e,n)),i=Et(r.shape,e.shape);return i.length>0&&(s=ye(s,i)),P(s,r.shape)}}}};function tP(e,t,n){let r=e.shape.slice();r[n]=1;let a=P(t,r),s=Xu(e,n,!0,!1),i=Xu(e,n,!0,!0),o=z(s,i);return z(a,o)}function nP(e,t,n){let r=e.shape.length,a=r-n.length,s=T.getAxesPermutation(n,r),i=e;s!=null&&(i=Fe(e,s));let o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce((h,d)=>h*d,1);o.push(l);let p=i.reshape(o),u=tP(p,t,a);if(u=u.reshape(i.shape),s!=null){let h=T.getUndoAxesPermutation(s);u=Fe(u,h)}return u}var rP={kernelName:Si,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=[];return a==null?s=r.shape.map((i,o)=>o):typeof a=="number"?s=[a]:s=a,{x:()=>nP(r,e,s)}}},aP={kernelName:ni,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=rt(n.shape,r.shape);return{a:()=>{let s=me(e,ie(r,"float32")),i=Et(n.shape,a);return i.length>0?P(ye(s,i),n.shape):s},b:()=>{let s=z(e,ie(n,"float32")),i=Et(r.shape,a);i.length>0&&(s=P(ye(s,i),r.shape));let o=tt(r);return dt(me(s,ie(o,"float32")))}}}},sP={kernelName:_l,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,dt(tt(n)))}}},iP={kernelName:Ci,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=z(Xa(n,6),Gi(n));return{x:()=>z(e,ie(r,"float32"))}}},oP={kernelName:Ni,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,ie(Gi(n),"float32"))}}},lP={kernelName:Cl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(e,n.shape)}}},uP={kernelName:_i,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>O.runKernel(cc,a,n)}}},pP={kernelName:Ti,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>O.runKernel(dc,a,n)}}},hP={kernelName:Ei,gradFunc:(e,t,n)=>{let{dims:r}=n,a=gr(r,e.shape);return{x:()=>ar(e,a)}}},dP={kernelName:$i,gradFunc:e=>({x:()=>Ue(e)})},cP={kernelName:Ai,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>dt(me(e,z(ha(n,1.5),2)))}}},fP={kernelName:$l,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>ie(Ue(n),"float32"),t:()=>z(e,ie(n,e.dtype)),e:()=>z(e,ie(Lp(n),e.dtype))}}},mP={kernelName:Al,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=yn(n,ve(0)),a=ve(qk),s=ve(jk),i=z(e,s),o=z(z(e,a),dn(ie(n,"float32")));return sn(r,i,o)}}}},gP={kernelName:Fi,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,z(n,pe(ve(1),n)))}}},yP={kernelName:Ml,gradFunc:e=>({x:()=>Ue(e)})},bP={kernelName:Ri,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(Mp(ie(n,"float32")),e)}}},xP={kernelName:Fl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(Nc(ie(n,"float32")),e)}}},wP={kernelName:Rl,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=D1(r,a,s),p=[];for(let u=0;u<e.rank;u++)p.push([o[u],i[u]-o[u]-l[u]]);return{x:()=>Er(e,p)}}},vP={kernelName:Oi,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=!0,i=z(e,r);return{logits:()=>pe(i,z(ye(i,[a],s),r))}}},kP={kernelName:Dl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,fr(n))}}},uv={kernelName:Ol,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>Fp(e,r,a)}}},pv={kernelName:Ll,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>nt(e,r)}}},IP={kernelName:Mi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,z(Jt(ie(n,"float32")),2))}}},SP={kernelName:wp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,z(ie(n,"float32"),2))}}},NP={kernelName:Li,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=ve(2);return{a:()=>z(e,z(a,pe(n,r))),b:()=>z(e,z(a,pe(r,n)))}}},TP={kernelName:qa,gradFunc:e=>({x:()=>Ue(e)})},_P={kernelName:zi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=rt(n.shape,r.shape);return{a:()=>{let s=e,i=Et(n.shape,a);return i.length>0&&(s=ye(s,i)),P(s,n.shape)},b:()=>{let s=e,i=Et(r.shape,a);return i.length>0&&(s=ye(s,i)),P(dt(s),r.shape)}}}},CP={kernelName:Di,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;gr(s,r.shape).forEach(l=>{a[l]=1});let i=P(e,a),o=z(i,Wn(r.shape,"float32"));return{x:()=>o}}},EP={kernelName:Pi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>me(e,tt(Mp(n)))}}},$P={kernelName:Bi,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(pe(ve(1),tt(n)),e)}}},AP={kernelName:Ha,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let s=Ue(r);if(r.rank===1)for(let i=0;i<a[0];++i)s=Y(s,We(e,[i*r.shape[0]],[r.shape[0]]));else if(r.rank===2)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)s=Y(s,We(e,[i*r.shape[0],o*r.shape[1]],[r.shape[0],r.shape[1]]));else if(r.rank===3)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)for(let l=0;l<a[2];++l)s=Y(s,We(e,[i*r.shape[0],o*r.shape[1],l*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else if(r.rank===4)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)for(let l=0;l<a[2];++l)for(let p=0;p<a[3];++p)s=Y(s,We(e,[i*r.shape[0],o*r.shape[1],l*r.shape[2],p*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);return s}}}},RP={kernelName:oa,gradFunc:(e,t,n)=>{let r=n,{perm:a}=r,s=iy(a);return{x:()=>Fe(e,s)}}},FP={kernelName:Vl,gradFunc:(e,t,n)=>{let r=n,{axis:a}=r;return{value:()=>Vt(e,a)}}},MP={kernelName:Sp,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>DP(e,n)}}};function DP(e,t){let n=qr(t,Ue(t)),r=Xl(e,n),a=ca(t,ve(0,"int32")),s=r.rank-a.rank;for(let o=0;o<s;++o)a=Xt(a,o+1);a=mr(a,Wn(r.shape,"bool"));let i=Ue(r);return sn(a,r,i)}var OP={kernelName:Ul,gradFunc:e=>({x:()=>Ue(e)})},LP=[Xk,ML,DL,OL,LL,zL,PL,BL,WL,VL,UL,GL,jL,ZL,YL,JL,QL,ez,tz,nz,rz,az,iz,sz,uz,pz,hz,dz,cz,fz,aP,mz,gz,yz,bz,xz,vz,wz,kz,Iz,Sz,Nz,Tz,_z,Cz,Ez,$z,Az,Rz,Dz,ov,ov,Oz,Pz,Vz,Uz,Gz,Hz,qz,jz,Kz,Xz,Zz,Yz,Jz,lv,lv,Qz,eP,rP,sP,iP,oP,lP,uP,pP,hP,dP,cP,fP,mP,gP,yP,bP,xP,wP,vP,kP,uv,uv,pv,pv,IP,NP,SP,TP,_P,CP,EP,$P,AP,RP,FP,MP,OP];for(let e of LP)X0(e);J().prototype.abs=function(){return this.throwIfDisposed(),_t(this)};J().prototype.acos=function(){return this.throwIfDisposed(),Rg(this)};J().prototype.acosh=function(){return this.throwIfDisposed(),Fg(this)};J().prototype.add=function(e){return this.throwIfDisposed(),Y(this,e)};J().prototype.all=function(e,t){return this.throwIfDisposed(),kc(this,e,t)};J().prototype.any=function(e,t){return this.throwIfDisposed(),Ku(this,e,t)};J().prototype.argMax=function(e){return this.throwIfDisposed(),Fs(this,e)};J().prototype.argMin=function(e){return this.throwIfDisposed(),Mg(this,e)};J().prototype.asScalar=function(){return this.throwIfDisposed(),A(this.size===1,()=>"The array must have only 1 element."),P(this,[])};J().prototype.asType=function(e){return this.throwIfDisposed(),ie(this,e)};J().prototype.as1D=function(){return this.throwIfDisposed(),P(this,[this.size])};J().prototype.as2D=function(e,t){return this.throwIfDisposed(),P(this,[e,t])};J().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),P(this,[e,t,n])};J().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),P(this,[e,t,n,r])};J().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),P(this,[e,t,n,r,a])};J().prototype.asin=function(){return this.throwIfDisposed(),Dg(this)};J().prototype.asinh=function(){return this.throwIfDisposed(),Og(this)};J().prototype.atan=function(){return this.throwIfDisposed(),Lg(this)};J().prototype.atan2=function(e){return this.throwIfDisposed(),zg(this,e)};J().prototype.atanh=function(){return this.throwIfDisposed(),Pg(this)};J().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),da(this,e,t,n,r)};J().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Fp(this,e,t)};J().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),Wi(this,e,t,n,r,a)};J().prototype.broadcastTo=function(e){return this.throwIfDisposed(),ks(this,e)};J().prototype.cast=function(e){return this.throwIfDisposed(),ie(this,e)};J().prototype.ceil=function(){return this.throwIfDisposed(),qg(this)};J().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),an(this,e,t)};J().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Re&&(e=[e]),nt([this,...e],t)};J().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Ic(this,e,t,n,r,a,s)};J().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Sc(this,e,t,n,r,a)};J().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),hn(this,e,t,n,r,a,s)};J().prototype.cos=function(){return this.throwIfDisposed(),Mp(this)};J().prototype.cosh=function(){return this.throwIfDisposed(),Nc(this)};J().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Xu(this,e,t,n)};J().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Tc(this,e,t,n)};J().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),ey(this,e,t)};J().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Vi(this,e,t,n,r,a,s)};J().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),ty(this,e,t,n,r,a)};J().prototype.divNoNan=function(e){return this.throwIfDisposed(),ny(this,e)};J().prototype.div=function(e){return this.throwIfDisposed(),me(this,e)};J().prototype.dot=function(e){return this.throwIfDisposed(),ry(this,e)};J().prototype.elu=function(){return this.throwIfDisposed(),ql(this)};J().prototype.equal=function(e){return this.throwIfDisposed(),Gn(this,e)};J().prototype.erf=function(){return this.throwIfDisposed(),ay(this)};J().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),oy(this,e,t)};J().prototype.exp=function(){return this.throwIfDisposed(),dn(this)};J().prototype.expandDims=function(e){return this.throwIfDisposed(),Xt(this,e)};J().prototype.expm1=function(){return this.throwIfDisposed(),ly(this)};J().prototype.fft=function(){return this.throwIfDisposed(),Vp(this)};J().prototype.flatten=function(){return this.throwIfDisposed(),P(this,[this.size])};J().prototype.floor=function(){return this.throwIfDisposed(),Kl(this)};J().prototype.floorDiv=function(e){return this.throwIfDisposed(),vc(this,e)};J().prototype.gather=function(e,t){return this.throwIfDisposed(),Xl(this,e,t)};J().prototype.greaterEqual=function(e){return this.throwIfDisposed(),ca(this,e)};J().prototype.greater=function(e){return this.throwIfDisposed(),yn(this,e)};J().prototype.ifft=function(){return this.throwIfDisposed(),Co(this)};J().prototype.irfft=function(){return this.throwIfDisposed(),Vc(this)};J().prototype.isFinite=function(){return this.throwIfDisposed(),uy(this)};J().prototype.isInf=function(){return this.throwIfDisposed(),py(this)};J().prototype.isNaN=function(){return this.throwIfDisposed(),hy(this)};J().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Dp(this,e)};J().prototype.lessEqual=function(e){return this.throwIfDisposed(),Xa(this,e)};J().prototype.less=function(e){return this.throwIfDisposed(),Cc(this,e)};J().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),dy(this,e,t,n,r)};J().prototype.logSigmoid=function(){return this.throwIfDisposed(),cy(this)};J().prototype.logSoftmax=function(e){return this.throwIfDisposed(),$c(this,e)};J().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Ac(this,e,t)};J().prototype.log=function(){return this.throwIfDisposed(),Hn(this)};J().prototype.log1p=function(){return this.throwIfDisposed(),Op(this)};J().prototype.logicalAnd=function(e){return this.throwIfDisposed(),mr(this,e)};J().prototype.logicalNot=function(){return this.throwIfDisposed(),Lp(this)};J().prototype.logicalOr=function(e){return this.throwIfDisposed(),Rc(this,e)};J().prototype.logicalXor=function(e){return this.throwIfDisposed(),fy(this,e)};J().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Oe(this,e,t,n)};J().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),zt(this,e,t,n,r)};J().prototype.max=function(e,t){return this.throwIfDisposed(),nr(this,e,t)};J().prototype.maximum=function(e){return this.throwIfDisposed(),qr(this,e)};J().prototype.mean=function(e,t){return this.throwIfDisposed(),yt(this,e,t)};J().prototype.min=function(e,t){return this.throwIfDisposed(),No(this,e,t)};J().prototype.minimum=function(e){return this.throwIfDisposed(),Zl(this,e)};J().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),gy(this,e,t)};J().prototype.mod=function(e){return this.throwIfDisposed(),yy(this,e)};J().prototype.mul=function(e){return this.throwIfDisposed(),z(this,e)};J().prototype.neg=function(){return this.throwIfDisposed(),dt(this)};J().prototype.norm=function(e,t,n){return this.throwIfDisposed(),jl(this,e,t,n)};J().prototype.notEqual=function(e){return this.throwIfDisposed(),Os(this,e)};J().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Io(this,e,t,n)};J().prototype.onesLike=function(){return this.throwIfDisposed(),qn(this)};J().prototype.pad=function(e,t){return this.throwIfDisposed(),Er(this,e,t)};J().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),by(this,e,t,n,r,a,s)};J().prototype.pow=function(e){return this.throwIfDisposed(),ha(this,e)};J().prototype.prelu=function(e){return this.throwIfDisposed(),Bp(this,e)};J().prototype.prod=function(e,t){return this.throwIfDisposed(),xy(this,e,t)};J().prototype.reciprocal=function(){return this.throwIfDisposed(),ky(this)};J().prototype.relu=function(){return this.throwIfDisposed(),Je(this)};J().prototype.relu6=function(){return this.throwIfDisposed(),Dc(this)};J().prototype.reshapeAs=function(e){return this.throwIfDisposed(),P(this,e.shape)};J().prototype.reshape=function(e){return this.throwIfDisposed(),P(this,e)};J().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Pk(this,e,t,n)};J().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Bk(this,e,t,n)};J().prototype.reverse=function(e){return this.throwIfDisposed(),ar(this,e)};J().prototype.rfft=function(){return this.throwIfDisposed(),Up(this)};J().prototype.round=function(){return this.throwIfDisposed(),Oc(this)};J().prototype.rsqrt=function(){return this.throwIfDisposed(),Lc(this)};J().prototype.selu=function(){return this.throwIfDisposed(),zc(this)};J().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Jl(this,e,t,n,r,a,s)};J().prototype.sigmoid=function(){return this.throwIfDisposed(),fr(this)};J().prototype.sign=function(){return this.throwIfDisposed(),Iy(this)};J().prototype.sin=function(){return this.throwIfDisposed(),Pc(this)};J().prototype.sinh=function(){return this.throwIfDisposed(),Bc(this)};J().prototype.slice=function(e,t){return this.throwIfDisposed(),We(this,e,t)};J().prototype.softmax=function(e){return this.throwIfDisposed(),Za(this,e)};J().prototype.softplus=function(){return this.throwIfDisposed(),Ui(this)};J().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Pp(this,e,t)};J().prototype.split=function(e,t){return this.throwIfDisposed(),_n(this,e,t)};J().prototype.sqrt=function(){return this.throwIfDisposed(),Jt(this)};J().prototype.square=function(){return this.throwIfDisposed(),tt(this)};J().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Uc(this,e)};J().prototype.squeeze=function(e){return this.throwIfDisposed(),Ya(this,e)};J().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof Re?[this,e]:[this,...e];return Vt(n,t)};J().prototype.step=function(e){return this.throwIfDisposed(),Gi(this,e)};J().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),Sy(this,e,t,n,r,a,s,i,o)};J().prototype.sub=function(e){return this.throwIfDisposed(),pe(this,e)};J().prototype.sum=function(e,t){return this.throwIfDisposed(),ye(this,e,t)};J().prototype.tan=function(){return this.throwIfDisposed(),Ny(this)};J().prototype.tanh=function(){return this.throwIfDisposed(),Ms(this)};J().prototype.tile=function(e){return this.throwIfDisposed(),Bn(this,e)};J().prototype.toBool=function(){return this.throwIfDisposed(),ie(this,"bool")};J().prototype.toFloat=function(){return this.throwIfDisposed(),ie(this,"float32")};J().prototype.toInt=function(){return this.throwIfDisposed(),ie(this,"int32")};J().prototype.topk=function(e,t){return this.throwIfDisposed(),Ty(this,e,t)};J().prototype.transpose=function(e){return this.throwIfDisposed(),Fe(this,e)};J().prototype.unique=function(e){return this.throwIfDisposed(),_y(this,e)};J().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Hc(this,e,t)};J().prototype.unstack=function(e){return this.throwIfDisposed(),St(this,e)};J().prototype.where=function(e,t){return this.throwIfDisposed(),sn(e,this,t)};J().prototype.zerosLike=function(){return this.throwIfDisposed(),Ue(this)};var na=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,na.prototype)}},vr=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,vr.prototype)}},V=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,V.prototype)}},Me=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Me.prototype)}},Yk=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Yk.prototype)}},Jk=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=e}};function Ls(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function Dr(e,t){if(!e)throw new Yk(t)}function hv(e,t){let n=0;for(let r of e)r===t&&n++;return n}function Sn(e){return e.length===1?e[0]:e}function ht(e){return Array.isArray(e)?e:[e]}function ra(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function gs(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var or={};function Ly(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function vm(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>vm(t));else{let t=Object.keys(e);for(let n of t){let r=e[n];r!=null&&typeof r=="object"&&(!Array.isArray(r)&&r.type==="ndarray"&&typeof r.value=="number"?e[n]=r.value:vm(r))}}}function Hp(e,t={},n={},r="object",a=!1){if(typeof e=="string"){let s=e,i;if(s in n)i=n[s];else if(s in or)i=or[s];else if(i=t[s],i==null)throw new V(`Unknown ${r}: ${e}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=e;if(s.className==null||s.config==null)throw new V(`${r}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,o,l;if(i in n?[o,l]=n[i]:i in or?[o,l]=or.className:i in t&&([o,l]=t[i]),o==null)throw new V(`Unknown ${r}: ${i}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let p={};for(let c of Object.keys(or))p[c]=or[c];for(let c of Object.keys(n))p[c]=n[c];let u=s.config;u.customObjects=p;let h=Object.assign({},or);for(let c of Object.keys(n))or[c]=n[c];vm(s.config);let d=l(o,s.config,n,a);return or=Object.assign({},h),d}else{let p=Object.assign({},or);for(let h of Object.keys(n))or[h]=n[h];let u=new o(s.config);return or=Object.assign({},p),u}}}function zP(e,t){return e<t?-1:e>t?1:0}function Ch(e,t){return-1*zP(e,t)}function Ca(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function PP(e){if(e==null)throw new V(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function Hi(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new V(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function zy(e,t,n=0,r=1/0){return Dr(n>=0),Dr(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(a=>typeof a===t)}function Wt(e,t){Array.isArray(e)?(v.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,r)=>Wt(n,`element ${r+1} of ${t}`))):v.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${Qk(e)}.`)}function Qk(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>Qk(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function BP(e,t,n){let r=n!=null?n():v.now(),a;return(...s)=>{let i=n!=null?n():v.now();return i-r<t||(r=i,a=e(...s)),a}}function eI(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}var WP=0;function tI(){return WP++}var Eh={};function rf(e=""){return e in Eh||(Eh[e]=0),Eh[e]+=1,e+Eh[e].toString()}var VP=["channelsFirst","channelsLast"],UP=["nearest","bilinear"],GP=["valid","same","causal"],HP=["max","avg"],qP=["sum","mul","concat","ave"],no=new Map;function Nt(e){Hi(VP,"DataFormat",e)}function jP(e){Hi(UP,"InterpolationFormat",e)}function ir(e){Hi(GP,"PaddingMode",e)}function nI(e){Hi(HP,"PoolMode",e)}var zu=[],dv="/";function Is(e,t){zu.push(e);try{let n=t();return zu.pop(),n}catch(n){throw zu.pop(),n}}function KP(){return zu.length===0?"":zu.join(dv)+dv}function rI(e){if(!sI(e))throw new Error("Not a valid tensor name: '"+e+"'");return KP()+e}function aI(e){if(!sI(e))throw new Error("Not a valid tensor name: '"+e+"'");no.has(e)||no.set(e,0);let t=no.get(e);if(no.set(e,no.get(e)+1),t>0){let n=`${e}_${t}`;return no.set(n,1),n}else return e}var XP=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function sI(e){return!!e.match(XP)}function ZP(e){return e===parseInt(e.toString(),10)}function Ea(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function $o(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function Ma(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function Tr(e,t){if(t<e)throw new V(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}var Hf;function Rt(){return Hf==null&&(Hf=k1().epsilon()),Hf}function _r(){return"channelsLast"}function qi(e,t){return ie(e,t)}function qp(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),P(e,n)}function YP(e,t){return B(()=>{if(e.shape.length!==2)throw new V(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=qp(e,1);return km(n,[1,t,1])})}function JP(e){let t=[Ea(e.shape)];return P(e,t)}function QP(e){if(e.rank<=1)throw new V(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],Ea(e.shape,1)];return P(e,t)}function Ss(e,t,n){return B(()=>{switch(e.rank){case 1:return Wp(e,t,n);case 2:return Wc(e,[t,0],[n,e.shape[1]]);case 3:return Ql(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return _o(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return We(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return We(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new V(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function qf(e,t,n){return B(()=>{switch(e.rank){case 1:return Wp(e,t,n);case 2:return Wc(e,[0,t],[e.shape[0],n]);case 3:return Ql(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return _o(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new V(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function $h(e,t,n,r){return B(()=>{switch(e.rank){case 1:return Wp(e,t,n);case 2:switch(r){case 1:return Ss(e,t,n);case 2:return qf(e,t,n);default:throw new V(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Ss(e,t,n);case 2:return Ql(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return qf(e,t,n);default:throw new V(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Ss(e,t,n);case 2:return _o(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return _o(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return qf(e,t,n);default:throw new V(`The axis is not within the rank of the tensor ${r}`)}default:throw new V(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Py(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),nt(e,t)}function cv(e,t){switch(e.rank){case 1:return jg([e,t]);case 2:return Kg([e,t],0);case 3:return Xg([e,t],0);case 4:return Zg([e,t],0);default:throw new V(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function km(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new V(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Bn(e,t)}function af(e,t=0,n=1,r,a){return Mc(e,t,n,r,a)}function Wr(e,t,n,r){if(e.rank<2||t.rank<2)throw new Me(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let a=e.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(a!==s)throw new Me(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2)return Eo.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Im(e.rank,r,_r()):null,activation:n});{let a=e.shape.slice(),s=a.pop();e=P(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),p=[...i,o],u=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=P(Fe(t,u),[l,-1]);let h=[...a,...p],d=!1,c=!1;return P(Eo.matMul({a:e,b:t,transposeA:d,transposeB:c,bias:r?Im(e.rank,r,_r()):null,activation:n}),h)}}function iI(e,t,n){return B(()=>(Array.isArray(t)?t=Ye(t,"int32"):t=ie(t,"int32"),Xl(e,t,n)))}function jp(e){return z(e,e)}function Im(e,t,n){let r=t.shape;if(t.rank!==1&&t.rank!==e)throw new V(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return r.length===1?P(t,[1,r[0],1,1,1]):P(t,[1,r[3],r[0],r[1],r[2]]);if(n==="channelsLast")return r.length===1?P(t,[1,1,1,1,r[0]]):P(t,[1].concat(r))}else if(e===4){if(n==="channelsFirst")return r.length===1?P(t,[1,r[0],1,1]):P(t,[1,r[2],r[0],r[1]]);if(n==="channelsLast")return r.length===1?P(t,[1,1,1,r[0]]):P(t,[1].concat(r))}else if(e===3){if(n==="channelsFirst")return r.length===1?P(t,[1,r[0],1]):P(t,[1,r[1],r[0]]);if(n==="channelsLast")return r.length===1?P(t,[1,1,r[0]]):P(t,[1].concat(r))}else if(e<3)return t;throw new V(`Unsupported input rank by biasAdd: ${t.rank}`)}function $r(e,t,n){return B(()=>(n==null&&(n=_r()),Nt(n),Y(e,Im(e.rank,t,n))))}function eB(e,t=1){if(t!==1)throw new Me(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return ql(e)}function tB(e){return B(()=>me(e,Y(_t(e),1)))}function oI(e,t,n,r){return B(()=>$y(e,t,n,r))}function nB(e){return B(()=>{let t=Y(.5,z(.2,e));return an(t,0,1)})}function Kp(e,t,n=!1){return n?e():t()}var rB=["fanIn","fanOut","fanAvg"],aB=["normal","uniform","truncatedNormal"];function sB(e){Hi(rB,"FanMode",e)}function iB(e){Hi(aB,"Distribution",e)}var yr=class extends ne.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},By=class extends yr{apply(e,t){return bt(e,t)}};By.className="Zeros";ne.registerClass(By);var sf=class extends yr{apply(e,t){return Wn(e,t)}};sf.className="Ones";ne.registerClass(sf);var Wy=class extends yr{constructor(e){if(super(),typeof e!="object")throw new V(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new V(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return B(()=>z(ve(this.value),Wn(e,t)))}getConfig(){return{value:this.value}}};Wy.className="Constant";ne.registerClass(Wy);var Vy=class extends yr{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Yl(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Vy.className="RandomUniform";ne.registerClass(Vy);var Uy=class extends yr{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Me(`randomNormal does not support dType ${t}.`);return af(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Uy.className="RandomNormal";ne.registerClass(Uy);var Gy=class extends yr{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Me(`truncatedNormal does not support dType ${t}.`);return Gc(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Gy.className="TruncatedNormal";ne.registerClass(Gy);var Hy=class extends yr{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return B(()=>{if(e.length!==2||e[0]!==e[1])throw new V("Identity matrix initializer can only be used for 2D square matrices.");return z(this.gain,_c(e[0]))})}getConfig(){return{gain:this.gain}}};Hy.className="Identity";ne.registerClass(Hy);function oB(e,t="channelsLast"){let n,r;if(Nt(t),e.length===2)n=e[0],r=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let a=Ea(e,2);n=e[1]*a,r=e[0]*a}else if(t==="channelsLast"){let a=Ea(e,0,e.length-2);n=e[e.length-2]*a,r=e[e.length-1]*a}}else{let a=Ea(e);n=Math.sqrt(a),r=Math.sqrt(a)}return[n,r]}var En=class extends yr{constructor(e){if(super(),e.scale<0)throw new V(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,sB(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,iB(this.distribution),this.seed=e.seed}apply(e,t){let n=oB(e),r=n[0],a=n[1],s=this.scale;if(this.mode==="fanIn"?s/=Math.max(1,r):this.mode==="fanOut"?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),this.distribution==="normal"){let i=Math.sqrt(s);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Me(`${this.getClassName()} does not support dType ${t}.`);return Gc(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*s);return Yl(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};En.className="VarianceScaling";ne.registerClass(En);var of=class extends En{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return En.className}};of.className="GlorotUniform";ne.registerClass(of);var lf=class extends En{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return En.className}};lf.className="GlorotNormal";ne.registerClass(lf);var uf=class extends En{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return En.className}};uf.className="HeNormal";ne.registerClass(uf);var pf=class extends En{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return En.className}};pf.className="HeUniform";ne.registerClass(pf);var hf=class extends En{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return En.className}};hf.className="LeCunNormal";ne.registerClass(hf);var df=class extends En{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return En.className}};df.className="LeCunNormal";ne.registerClass(df);var qy=class extends yr{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Me("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return B(()=>{if(e.length<2)throw new Me("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,r=af(n,0,1,"float32"),a=My.gramSchmidt(r);return e[0]>e[1]&&(a=Fe(a)),z(this.gain,a)})}getConfig(){return{gain:this.gain,seed:this.seed}}};qy.className="Orthogonal";ne.registerClass(qy);var fv={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function mv(e,t={}){return Hp(e,ne.SerializationMap.getMap().classNameMap,t,"initializer")}function xt(e){return Ly(e)}function ft(e){if(typeof e=="string"){let t=e in fv?fv[e]:e;if(t==="GlorotNormal")return new lf;if(t==="GlorotUniform")return new of;if(t==="HeNormal")return new uf;if(t==="HeUniform")return new pf;if(t==="LeCunNormal")return new hf;if(t==="LeCunUniform")return new df;{let n={};return n.className=t,n.config={},mv(n)}}else return e instanceof yr?e:mv(e)}function Sm(e){return Array.isArray(e)&&Array.isArray(e[0])}function hd(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Te(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new V(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Ze(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new V(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function dd(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((r,a)=>r*a);return t}var gv="Variable",lI=class{constructor(e,t="float32",n=gv,r=!0,a=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=tI(),n=n==null?gv:n,this.originalName=rI(n),this.name=aI(this.originalName),this.trainable_=r,this.constraint=a,this.val=Cy(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),lB(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function lB(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function Nm(e){return e.map(t=>t.read())}function jy(e){e.forEach(t=>{t[0].write(t[1])})}var Ct=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},kr=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=tI(),s!=null&&(this.originalName=rI(s),this.name=aI(this.originalName)),this.rank=t.length}},uB=0,cf=class{constructor(e,t){this.callArgs=t,this.id=uB++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},pB=0,Ve=class extends ne.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=pB++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=ra(n)+"_"+rf(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let a=null;e.batchSize!=null&&(a=e.batchSize),n=[a].concat(e.inputShape)}this.batchInputShape=n;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new vr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new V(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Sn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Sn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new na(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new na(`Layer ${this.name} is not connected, no input to return.`);return Sn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new na(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new na(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Sn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=ht(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=ht(this.inputSpec);if(e.length!==t.length)throw new V(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let r=e[n],a=t[n];if(a==null)continue;let s=r.rank;if(a.ndim!=null&&s!==a.ndim)throw new V(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(a.maxNDim!=null&&s>a.maxNDim)throw new V(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(a.minNDim!=null&&s<a.minNDim)throw new V(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(a.dtype!=null&&r.dtype!==a.dtype)throw new V(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){let i=r.shape;for(let o in a.axes){let l=Number(o),p=a.axes[o],u=l>=0?i[l]:i[i.length+l];if(p!=null&&[p,null].indexOf(u)===-1)throw new V(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${p} but got shape ${i}.`)}}if(a.shape!=null)for(let i=0;i<a.shape.length;++i){let o=a.shape[i],l=r.shape[i];if(o!=null&&l!=null&&o!==l)throw new V(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=ht(e),r=!0;for(let s of n)if(!(s instanceof kr)){r=!1;break}let a=!0;for(let s of n)if(s instanceof kr){a=!1;break}if(r===a)throw new V("Arguments to apply() must be all SymbolicTensors or all Tensors");return Is(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let s=[];for(let i of ht(e))s.push(i.shape);this.build(Sn(s)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let s=this.call(e,t),i=ht(s),o=[];for(let l of i)n.indexOf(l)!==-1&&(l=l.clone()),o.push(l);if(s=Sn(o),this.activityRegularizer!=null)throw new Me("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}else{let s=hB(e),i=this.computeOutputShape(s),o,l=dB(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?s[0]:s),i!=null&&i.length>0&&Array.isArray(i[0])?o=i.map((p,u)=>new kr(l,p,this,ht(e),t,this.name,u)):o=new kr(l,i,this,ht(e),t,this.name),this.addInboundNode(e,o,null,null,s,i,t),this._refCount++,this.activityRegularizer!=null)throw new Me("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{n!=null&&e[r]!=null&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new na(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new na(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new vr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return dd(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Nm(e?this.trainableWeights:this.weights)}setWeights(e){B(()=>{let t=this.weights;if(t.length!==e.length)throw new V(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],r=Nm(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!v.arraysEqual(s.shape,o.shape))throw new V(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}jy(n)})}addWeight(e,t,n,r,a,s,i,o){if(this._addedWeightNames.indexOf(e)!==-1)throw new V(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(r=o!=null?o():ft("zeros"));let l=r.apply(t,n),p=new lI(l,n,e,s,i);return l.dispose(),a!=null&&this.addLoss(()=>a.apply(p.read())),s==null&&(s=!0),s?this._trainableWeights.push(p):this._nonTrainableWeights.push(p),p}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=ht(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,r,a,s,i=null){let o=ht(e);t=ht(t),n=ht(n),r=ht(r),a=hd(a),s=hd(s);let l=[],p=[],u=[];for(let h of o)l.push(h.sourceLayer),p.push(h.nodeIndex),u.push(h.tensorIndex);new cf({outboundLayer:this,inboundLayers:l,nodeIndices:p,tensorIndices:u,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function hB(e){e=ht(e);let t=[];for(let n of e)t.push(n.shape);return Sn(t)}function dB(e){return"float32"}function uI(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let r=t.inboundNodes[n];if(r.inboundLayers.length===0)return r.inputTensors;{let a=[];for(let s=0;s<r.inboundLayers.length;s++){let i=r.inputTensors[s],o=r.inboundLayers[s],l=r.nodeIndices[s],p=uI(i,o,l);for(let u of p)a.indexOf(u)===-1&&a.push(u)}return a}}}var tu=class extends Ve{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:rf("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new V("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new V("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new V("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new kr(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new cf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new V(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};tu.className="InputLayer";ne.registerClass(tu);function pI(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new V("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new tu({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}function cB(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return ie(t,e.dtype)}catch{throw new V(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var xs=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof xs)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=cB(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new V(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof kr){if(this.id2Value[e.id]==null)throw new V(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new V(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof kr){if(this.id2Value[e.id]==null)throw new V(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new V(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Ce(this.id2Mask)}},cd=new Jk,fd=new Jk;function fB(e){cd!=null&&cd.setMaxEntries(e),fd!=null&&fd.setMaxEntries(e)}function Cu(e,t,n,r){let a=n==null?!1:n.training,s=Array.isArray(e),i=s?e:[e],o=i.map(f=>f.name),l=[],p=t.names();for(let f of o)p.indexOf(f)!==-1?l.push(t.getValue(f)):l.push(null);r!=null&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let u=o.join(",")+"|"+t.names().sort().join(","),h=cd.get(u),d;if(h==null){let f=mB(i,t);h=f.sorted,d=f.recipientCounts,cd.put(u,h),fd.put(u,d)}d={},a||Object.assign(d,fd.get(u));let c=new xs(t);for(let f=0;f<h.length;++f){if(r!=null){let $=ld().numTensors;$>r.maxNumTensors&&(r.maxNumTensors=$),$<r.minNumTensors&&(r.minNumTensors=$)}let m=h[f],g=m.sourceLayer;if(g instanceof tu)continue;let y=[],b=[],x=[],w=!1;for(let $ of m.inputs){let F=c.getValue($),R=c.getMask($);y.push(F),b.push(R),R!=null&&(w=!0),a||(d[$.name]--,d[$.name]===0&&!t.hasKey($)&&o.indexOf($.name)===-1&&!F.isDisposed&&$.sourceLayer.stateful!==!0&&x.push(F))}w&&(n=n||{},n.mask=b[0]);let I=ht(g.apply(y,n)),N=null;g.supportsMasking&&(N=g.computeMask(y,b));let C=yB(m),E=Array.isArray(C)?C:[C];for(let $=0;$<E.length;++$){c.hasKey(E[$])||c.add(E[$],I[$],Array.isArray(N)?N[0]:N);let F=o.indexOf(E[$].name);F!==-1&&(l[F]=I[$])}a||Ce(x)}return c.disposeMasks(),s?l:l[0]}function mB(e,t){v.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(e.length===1){let a=yv(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:i,recipientMap:o}=yv(s,t);for(let l of i)a.has(l.name)||(n.push(l),a.add(l.name));for(let l in o)r[l]==null&&(r[l]=new Set),o[l].forEach(p=>r[l].add(p))}}return{sorted:n,recipientCounts:gB(r)}}function gB(e){let t={};for(let n in e)t[n]=e[n].size;return t}function yv(e,t){let n=new Set,r=[],a={};for(let o of t.names())n.add(o);let s=[],i=[];for(s.push(e);s.length>0;){let o=s[s.length-1];if(n.has(o.name)){s.pop();continue}let l=i[i.length-1]===s.length-1;if(o.inputs.length===0||l)s.pop(),r.push(o),n.add(o.name),l&&i.pop();else{i.push(s.length-1);for(let p of o.inputs)a[p.name]==null&&(a[p.name]=new Set),a[p.name].add(o.name),!n.has(p.name)&&s.push(p)}}return{sorted:r,recipientMap:a}}function yB(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let r=0;r<e.sourceLayer.inboundNodes.length;++r)for(let a of e.sourceLayer.inboundNodes[r].outputTensors)if(a.id===e.id){n=r;break}t=e.sourceLayer.getOutputAt(n)}return t}var bB=q();bB.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,fB);var hI={};Ee(hI,{maxNorm:()=>xB,minMaxNorm:()=>kB,nonNeg:()=>vB,unitNorm:()=>wB});function Ky(e,t){return B(()=>Jt(ye(z(e,e),t,!0)))}var Xp=class extends ne.Serializable{getConfig(){return{}}},Xy=class extends Xp{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return B(()=>{let t=Ky(e,this.axis),n=an(t,0,this.maxValue);return z(e,me(n,Y(Rt(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Xy.className="MaxNorm";ne.registerClass(Xy);var Zy=class extends Xp{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return B(()=>me(e,Y(Rt(),Ky(e,this.axis))))}getConfig(){return{axis:this.axis}}};Zy.className="UnitNorm";ne.registerClass(Zy);var Yy=class extends Xp{apply(e){return Je(e)}};Yy.className="NonNeg";ne.registerClass(Yy);var Jy=class extends Xp{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return B(()=>{let t=Ky(e,this.axis),n=Y(z(this.rate,an(t,this.minValue,this.maxValue)),z(1-this.rate,t));return z(e,me(n,Y(Rt(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Jy.className="MinMaxNorm";ne.registerClass(Jy);var bv={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Dt(e){return Ly(e)}function xv(e,t={}){return Hp(e,ne.SerializationMap.getMap().classNameMap,t,"constraint")}function Ot(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in bv?bv[e]:e,config:{}};return xv(t)}else return e instanceof Xp?e:xv(e)}function xB(e){return new Xy(e)}function wB(e){return new Zy(e)}function vB(){return new Yy}function kB(e){return new Jy(e)}var dI={};Ee(dI,{constant:()=>NB,glorotNormal:()=>RB,glorotUniform:()=>AB,heNormal:()=>FB,heUniform:()=>MB,identity:()=>EB,leCunNormal:()=>DB,leCunUniform:()=>OB,ones:()=>SB,orthogonal:()=>LB,randomNormal:()=>_B,randomUniform:()=>TB,truncatedNormal:()=>CB,varianceScaling:()=>$B,zeros:()=>IB});function IB(){return new By}function SB(){return new sf}function NB(e){return new Wy(e)}function TB(e){return new Vy(e)}function _B(e){return new Uy(e)}function CB(e){return new Gy(e)}function EB(e){return new Hy(e)}function $B(e){return new En(e)}function AB(e){return new of(e)}function RB(e){return new lf(e)}function FB(e){return new uf(e)}function MB(e){return new pf(e)}function DB(e){return new hf(e)}function OB(e){return new df(e)}function LB(e){return new qy(e)}var cI={};Ee(cI,{Layer:()=>Ve,RNN:()=>Kr,RNNCell:()=>eh,activation:()=>p4,add:()=>x4,alphaDropout:()=>nV,average:()=>w4,averagePooling1d:()=>lx,averagePooling2d:()=>ux,averagePooling3d:()=>px,avgPool1d:()=>E4,avgPool2d:()=>A4,avgPool3d:()=>F4,avgPooling1d:()=>$4,avgPooling2d:()=>R4,avgPooling3d:()=>M4,batchNormalization:()=>T4,bidirectional:()=>K4,categoryEncoding:()=>iV,concatenate:()=>v4,conv1d:()=>t4,conv2d:()=>n4,conv2dTranspose:()=>r4,conv3d:()=>a4,conv3dTranspose:()=>s4,convLstm2d:()=>G4,convLstm2dCell:()=>H4,cropping2D:()=>o4,dense:()=>h4,depthwiseConv2d:()=>u4,dot:()=>N4,dropout:()=>d4,elu:()=>XW,embedding:()=>b4,flatten:()=>f4,gaussianDropout:()=>tV,gaussianNoise:()=>eV,globalAveragePooling1d:()=>D4,globalAveragePooling2d:()=>O4,globalMaxPool1d:()=>Z4,globalMaxPool2d:()=>Y4,globalMaxPooling1d:()=>aS,globalMaxPooling2d:()=>sS,gru:()=>z4,gruCell:()=>P4,input:()=>AI,inputLayer:()=>KW,layerNormalization:()=>_4,leakyReLU:()=>YW,lstm:()=>B4,lstmCell:()=>W4,masking:()=>rV,maxPool1d:()=>J4,maxPool2d:()=>Q4,maxPooling1d:()=>iS,maxPooling2d:()=>oS,maxPooling3d:()=>L4,maximum:()=>k4,minimum:()=>I4,multiply:()=>S4,permute:()=>y4,prelu:()=>JW,reLU:()=>ZW,repeatVector:()=>m4,rescaling:()=>aV,reshape:()=>g4,resizing:()=>sV,rnn:()=>q4,separableConv2d:()=>i4,simpleRNN:()=>V4,simpleRNNCell:()=>U4,softmax:()=>QW,spatialDropout1d:()=>c4,stackedRNNCells:()=>j4,thresholdedReLU:()=>e4,timeDistributed:()=>X4,upSampling2d:()=>l4,zeroPadding2d:()=>C4});async function va(e){if(e==null)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];if(typeof s!="number"){let i=s;t.push(i.data()),n.push(a),r.push(i)}}if(t.length>0){let a=await Promise.all(t);for(let s=0;s<a.length;++s)e[n[s]]=a[s][0];Ce(r)}}function fI(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var wv;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(wv||(wv={}));var zB=125,Ao=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},mI=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},PB=class extends Ao{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let r in t){let a=t[r];if(typeof a=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+a*n;else{let s;r in this.totals?s=this.totals[r]:this.totals[r]=0;let i=B(()=>Y(this.totals[r],z(a,n)));this.totals[r]=i,s!=null&&s.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:B(()=>{let r=z(me(1,this.seen),this.totals[n]);t[n]=r,this.totals[n].dispose(),Bt(t[n])}))}},gI=class extends Ao{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let a in this.history){let s=this.history[a];for(let i=0;i<s.length;++i)if(typeof s[i]!="number"){let o=s[i];e.push(o.data()),t.push(a),n.push(i)}}let r=await Promise.all(e);for(let a=0;a<r.length;++a)this.history[t[a]][n[a]].dispose(),this.history[t[a]][n[a]]=r[a][0]}},yI=class extends Ao{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Dy,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=zB),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");v.isNumber(this.yieldEvery)&&(this.maybeWait=BP(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];this.yield!=null&&(await va(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await va(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await va(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await va(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await va(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):v.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await va(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await va(e),await this.trainEnd(e))}};function bI(e,t){return e==null&&(e={}),e instanceof Ao?[e]:Array.isArray(e)&&e[0]instanceof Ao?e:ht(e).map(n=>new yI(n,t))}var pr=class{constructor(){}static registerCallbackConstructor(e,t){v.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),pr.checkForDuplicate(t),pr.constructors[e]==null&&(pr.constructors[e]=[]),pr.constructors[e].push(t)}static checkForDuplicate(e){for(let t in pr.constructors)pr.constructors[+t].forEach(n=>{if(n===e)throw new V("Duplicate callback constructor.")})}static clear(){pr.constructors={}}static createCallbacks(e){let t=[];for(let n in pr.constructors){let r=+n;e>=r&&t.push(...pr.constructors[r])}return t.map(n=>new n)}};pr.constructors={};function xI(e,t,n,r,a,s,i,o,l){let p=new gI,u=[new PB,...pr.createCallbacks(t)];e!=null&&u.push(...e),u.push(p);let h=new mI(u);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:p}}function Sr(e,t={},n=!1){return Hp(e,ne.SerializationMap.getMap().classNameMap,t,"layer",n)}function md(e,t){return B(()=>{e.dtype!=="float32"&&(e=ie(e,"float32"));let n=ye(jp(e),t,!0),r=Vn(n.shape,Rt()),a=Jt(qr(n,r));return me(e,a)})}function ji(e,t){return B(()=>yt(jp(pe(t,e)),-1))}function ff(e,t){return B(()=>yt(_t(pe(t,e)),-1))}function nu(e,t){return B(()=>{let n=pe(e,t),r=an(_t(e),Rt(),Number.MAX_VALUE),a=_t(me(n,r));return z(100,yt(a,-1))})}function BB(e,t){return B(()=>{let n=an(t,Rt(),Number.MAX_VALUE),r=Hn(Y(1,n)),a=an(e,Rt(),Number.MAX_VALUE),s=Hn(Y(1,a));return yt(jp(pe(r,s)),-1)})}function WB(e,t){return B(()=>{let n=qr(0,pe(1,z(e,t)));return yt(jp(n),-1)})}function VB(e,t){return B(()=>{let n=qr(0,pe(1,z(e,t)));return yt(n,-1)})}function UB(e,t){return B(()=>{let n=ye(z(e,t),-1),r=nr(z(pe(1,e),t),-1);return qr(0,Y(1,pe(r,n)))})}function GB(e,t){return B(()=>{let n=Math.log(2),r=pe(t,e),a=pe(Y(r,Ui(z(-2,r))),n);return yt(a,-1)})}function Zu(e,t,n=!1){return B(()=>{if(n)t=Za(t);else{let r=ye(t,t.shape.length-1,!0);t=me(t,r)}return t=an(t,Rt(),1-Rt()),dt(ye(z(ie(e,"float32"),Hn(t)),t.shape.length-1))})}function gd(e,t,n=!1){return B(()=>{let r=ie(Kl(JP(e)),"int32");t=an(t,Rt(),1-Rt());let a=t.shape,s=P(Io(r,a[a.length-1]),a);return Zu(s,t,n)})}function HB(e,t){if(!v.arraysEqual(e.shape,t.shape))throw new V(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return B(()=>{let n=Je(t),r=dt(_t(t));return Y(pe(n,z(t,e)),Op(dn(r)))})}function mf(e,t){return B(()=>{let n;return n=an(t,Rt(),1-Rt()),n=Hn(me(n,pe(1,n))),yt(HB(e,n),-1)})}function qB(e,t){return B(()=>{let n=an(e,Rt(),1),r=an(t,Rt(),1);return ye(z(e,Hn(me(n,r))),-1)})}function jB(e,t){return B(()=>{let n=Hn(Y(Rt(),t));return yt(pe(t,z(e,n)),-1)})}function Qy(e,t){return B(()=>{let n=md(e,-1),r=md(t,-1),a=z(n,r);return dt(ye(a,-1))})}var yd={meanSquaredError:ji,meanAbsoluteError:ff,meanAbsolutePercentageError:nu,meanSquaredLogarithmicError:BB,squaredHinge:WB,hinge:VB,categoricalHinge:UB,logcosh:GB,categoricalCrossentropy:Zu,sparseCategoricalCrossentropy:gd,binaryCrossentropy:mf,kullbackLeiblerDivergence:qB,poisson:jB,cosineProximity:Qy};function jf(e){if(typeof e=="string"){if(e in yd)return yd[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new V(t)}else return e}function eb(e,t){return B(()=>{let n=z(.5,qn(t)),r=qi(yn(t,n),e.dtype);return yt(Gn(e,r),-1)})}function tb(e,t){return B(()=>qi(Gn(Fs(e,-1),Fs(t,-1)),"float32"))}function wI(e,t){return B(()=>ie(ye(mr(Gn(e,1),Gn(t,1))),"float32"))}function KB(e,t){return B(()=>ie(ye(mr(Gn(e,1),Gn(t,0))),"float32"))}function XB(e,t){return B(()=>ie(ye(mr(Gn(e,0),Gn(t,1))),"float32"))}function vI(e,t){return B(()=>{let n=wI(e,t),r=XB(e,t),a=Y(n,r);return ie(sn(yn(a,0),me(n,a),0),"float32")})}function ZB(e,t){return B(()=>{let n=wI(e,t),r=KB(e,t),a=Y(n,r);return ie(sn(yn(a,0),me(n,a),0),"float32")})}function kI(e,t){return mf(e,t)}function II(e,t){return e.rank===t.rank&&(e=Ya(e,[e.rank-1])),t=Fs(t,-1),t.dtype!==e.dtype&&(t=ie(t,e.dtype)),ie(Gn(e,t),"float32")}var YB=ji,JB=ji,QB=ff,eW=ff,tW=nu,nW=nu,nb=Zu,rW=Qy,SI=gd,bd={binaryAccuracy:eb,categoricalAccuracy:tb,precision:vI,categoricalCrossentropy:nb,sparseCategoricalCrossentropy:SI,mse:YB,MSE:JB,mae:QB,MAE:eW,mape:tW,MAPE:nW,cosine:rW};function aW(e){if(typeof e=="string"&&e in bd)return bd[e];if(typeof e!="string"&&e!=null)return e;throw new V(`Unknown metric ${e}`)}function Ah(e){if(Dr(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(yd))if(yd[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(bd))if(bd[n]===e){t=n;break}return t!==void 0?t:e.name}}function sW(e){let t={Adagrad:()=>ds.adagrad(.01),Adadelta:()=>ds.adadelta(1,.95,Rt()),Adam:()=>ds.adam(.001,.9,.999,Rt()),Adamax:()=>ds.adamax(.002,.9,.999,Rt(),0),RMSProp:()=>ds.rmsprop(.001,.9,0,Rt()),SGD:()=>ds.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new V(`Unknown Optimizer ${e}`)}function vv(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!Tm(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let r=JSON.stringify(e);r.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${1048576}.`)}}function Tm(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!Tm(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!Tm(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function iW(e,t,n,r=console.log){let a=lW(e),s=["Layer (type)","Input Shape","Output shape","Param #"];a?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(u=>Math.floor(t*u)));let i;if(!a){s.push("Receives inputs"),i=[];for(let u in e.nodesByDepth)i.push(...e.nodesByDepth[u])}r("_".repeat(t)),xd(s,n,r),r("=".repeat(t));let o=e.layers;for(let u=0;u<o.length;++u)a?uW(o[u],n,r):pW(o[u],n,i,r),r((u===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=oW(e),p=dd(e.nonTrainableWeights);r(`Total params: ${l+p}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${p}`),r("_".repeat(t))}function oW(e){let t;return e.collectedTrainableWeights!=null?t=dd(e.collectedTrainableWeights):t=dd(e.trainableWeights),t}function lW(e){let t=!0,n=[],r=[];for(let a in e.nodesByDepth)n.push(e.nodesByDepth[a]);for(let a of n){if(a.length>1||a.length===1&&a[0].inboundLayers.length>1){t=!1;break}r.push(...a)}if(t)for(let a of e.layers){let s=!1;for(let i of a.inboundNodes)if(r.indexOf(i)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function xd(e,t,n=console.log){let r="";for(let a=0;a<e.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=e[a],r=r.slice(0,t[a]),r+=" ".repeat(t[a]-r.length);n(r)}function uW(e,t,n){let r,a;try{a=e.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{a="multiple"}try{r=JSON.stringify(e.outputShape)}catch{r="multiple"}let s=e.name,i=e.getClassName(),o=[`${s} (${i})`,a,r,e.countParams().toString()];xd(o,t,n)}function pW(e,t,n,r){let a,s;try{s=e.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{s="multiple"}try{a=JSON.stringify(e.outputShape)}catch{a="multiple"}let i=[];for(let h of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){let c=h.inboundLayers[d].name,f=h.nodeIndices[d],m=h.tensorIndices[d];i.push(`${c}[${f}][${m}]`)}let o=e.name,l=e.getClassName(),p=i.length===0?"":i[0],u=[`${o} (${l})`,s,a,e.countParams().toString(),p];xd(u,t,r);for(let h=1;h<i.length;++h)xd(["","","","",i[h]],t,r)}function NI(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function Yu(e,t){if(e===null)return null;if(typeof e=="string")return gs(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let s=e[a];NI(t,a,s)?n.push(s):n.push(Yu(s,t))}return n}else{let n={};for(let r of Object.keys(e)){let a=e[r];if(r==="name"&&typeof a=="string")n[r]=a;else{let s=gs(r);n[s]=Yu(a,s)}}return n}}function _m(e,t){if(e==null)return null;if(typeof e=="string")return ra(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let s=e[a];NI(t,a,s)?n.push(s):n.push(_m(s,t))}return n}else{let n={};for(let r of Object.keys(e)){let a=e[r],s=ra(r);(r==="name"||r==="className")&&typeof a=="string"?n[s]=a:n[s]=_m(a,r)}return n}}var rb="4.0.0",Rr=class extends Ve{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){let y=this.getClassName().toLowerCase();this.name=rf(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ca(this.inputs).length!==this.inputs.length)throw new V(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);Ca(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let b=y.sourceLayer,x=y.nodeIndex,w=y.tensorIndex;this.outputLayers.push(b),this.outputLayersNodeIndices.push(x),this.outputLayersTensorIndices.push(w)}for(let y of this.inputs){let b=y.sourceLayer,x=y.nodeIndex,w=y.tensorIndex;Dr(x===0,"input layer has >1 nodes"),Dr(w===0,"input layer has >1 tensors"),this.inputLayers.push(b),this.inputLayersNodeIndices.push(x),this.inputLayersTensorIndices.push(w)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let b=this.inputLayers[y];if(!(b instanceof tu))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${b.getClassName()}.`);this.inputNames.push(b.name),this.feedInputShapes.push(b.batchInputShape),this.feedInputNames.push(b.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let t={},n={},r={},a={},s={},i=[],o=(y,b,x,w,I,N)=>{(w==null||I==null||N==null)&&(w=y.sourceLayer,I=y.nodeIndex,N=y.tensorIndex);let C=w.inboundNodes[I];if(x.indexOf(C)!==-1)throw new vr(`The tensor ${y.name} at layer "${w.name}" is part of a cycle.`);if(b.indexOf(C)!==-1)return;this.containerNodes.add(Rr.nodeKey(w,I)),w.id in s||(s[w.id]=Object.keys(s).length),x.indexOf(C)===-1&&x.push(C);let E=C.inboundLayers.length;for(let $=0;$<E;$++){let F=C.inputTensors[$],R=C.inboundLayers[$],S=C.nodeIndices[$],D=C.tensorIndices[$];o(F,b,x,R,S,D)}for(b.push(C);x.indexOf(C)>=0;)x.splice(x.indexOf(C),1);i.push(C)},l=[],p=[];for(let y of this.outputs)o(y,l,p);let u=i.slice().reverse();for(let y of u){n[y.id]=y,y.id in t||(t[y.id]=0);let b=t[y.id],x=r[y.outboundLayer.id]==null?0:r[y.outboundLayer.id];b=Math.max(b,x),r[y.outboundLayer.id]=b,a[y.outboundLayer.id]=y.outboundLayer,t[y.id]=b;for(let w=0;w<y.inboundLayers.length;w++){let I=y.inboundLayers[w],N=y.nodeIndices[w],C=I.inboundNodes[N],E=t[C.id]==null?0:t[C.id];t[C.id]=Math.max(b+1,E),n[C.id]=C}}let h={};for(let y in t){let b=t[y];b in h||(h[b]=[]),h[b].push(n[y])}let d={};for(let y in r){let b=r[y];b in d||(d[b]=[]),d[b].push(a[y])}let c=Object.keys(d).map(y=>parseInt(y,10)).sort(Ch);this.layers=[];for(let y of c){let b=d[y];b.sort((x,w)=>{let I=s[x.id],N=s[w.id];return I<N?-1:I>N?1:0});for(let x of b)x instanceof Rr&&this.internalContainerRefs.push(x),this.layers.push(x)}this.layersByDepth=d,c=Object.keys(h).map(y=>parseInt(y,10)).sort(Ch);let f=this.inputs.slice(),m=[];for(let y of c)for(let b of h[y]){let x=b.outboundLayer;if(x!=null){for(let w of b.inputTensors)if(f.indexOf(w)===-1)throw new vr(`Graph disconnected: cannot obtain value for tensor ${w} at layer "${x.name}". The following previous layers were accessed without issue: ${m}`);for(let w of b.outputTensors)f.push(w);m.push(x.name)}}this.nodesByDepth=h;let g=this.layers.map(y=>y.name);for(let y of g){let b=g.filter(x=>x===y).length;if(b!==1)throw new vr(`The name "${y}" is used ${b} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new cf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new V("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},r=0;for(let s of this.layers)for(let i of s.weights){if(n[i.originalName]!=null)throw new V(`Duplicate weight name: ${i.originalName}`);n[i.originalName]=i,r++}let a=[];for(let s in e){let i=s;if(n[s]==null){let o=s.split("/");i=o.slice(0,-2).concat([o[o.length-1]]).join("/")}if(n[i]!=null)a.push([n[i],e[s]]);else if(t)throw new V(`Provided weight data has no target variable: ${s}`);delete n[i]}if(t){let s=[];for(let i in n)s.push(i);if(s.length>0)throw new V(`${s.length} of ${r} weights are not set: ${s}`)}jy(a)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${rb}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=_m(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return B(()=>{e=ht(e);let n=new xs;for(let r=0;r<this.inputs.length;++r)n.add(this.inputs[r],e[r]);return Cu(this.outputs,n,t)})}computeMask(e,t){return B(()=>{e=ht(e);let n;return t==null?n=Ls(null,e.length):n=ht(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=hd(e);if(t.length!==this.inputLayers.length)throw new V(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let o=this.inputLayers[i],l=t[i],p=o.name+"_0_0";n[p]=l}let r=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Ch);if(r.length>1)for(let i of r){let o=this.nodesByDepth[i];for(let l of o){let p=l.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(p.id)!==-1)continue;let u=[];for(let f=0;f<l.inboundLayers.length;f++){let m=l.inboundLayers[f],g=l.nodeIndices[f],y=l.tensorIndices[f],b=`${m.name}_${g}_${y}`,x=n[b];u.push(x)}let h=p.computeOutputShape(Sn(u)),d=hd(h),c=p.inboundNodes.indexOf(l);for(let f=0;f<d.length;f++){let m=`${p.name}_${c}_${f}`;n[m]=d[f]}}}let a=[],s=[];for(let i=0;i<this.outputLayers.length;i++){let o=this.outputLayers[i],l=this.outputLayersNodeIndices[i],p=this.outputLayersTensorIndices[i],u=`${o.name}_${l}_${p}`;s.push(u)}for(let i=0;i<s.length;i++){let o=s[i];Dr(o in n),a.push(n[o])}return Sn(a)}runInternalGraph(e,t){t==null&&(t=Ls(null,e.length));let n={};for(let o=0;o<this.inputs.length;++o){let l=this.inputs[o],p=e[o],u=t[o];n[l.id]=[p,u]}let r=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(Ch);for(let o of r){let l=this.nodesByDepth[o];for(let p of l){let u=p.outboundLayer,h=p.inputTensors,d=p.outputTensors,c=new Array;for(let f of h)f.id in n&&c.push(n[f.id]);if(c.length===h.length){let f={},m,g,y,b;if(p.callArgs!=null&&(f=p.callArgs),c.length===1){let[x,w]=c[0];f.mask==null&&(f.mask=w),y=ht(u.call(x,f)),b=ht(u.computeMask(x,w)),m=[x],g=[w]}else m=c.map(x=>x[0]),g=c.map(x=>x[1]),f.mask==null&&(f.mask=g),y=ht(u.call(m,f)),b=ht(u.computeMask(m,g));if(u.activityRegularizer)throw new Me("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let x=0;x<d.length;++x){let w=d[x],I=y[x],N=b[x];n[w.id]=[I,N]}}}}let a=[],s=[],i=[];for(let o of this.outputs){Dr(o.id in n,`Could not compute output ${o.name} : ${o.id}`);let[l,p]=n[o.id];i.push(l.shape),a.push(l),s.push(p)}return[a,s,i]}buildNodeConversionMap(e){let t={},n;for(let r of this.layers){n=r instanceof Rr?1:0;for(let a=0;a<r.inboundNodes.length;a++){let s=Rr.nodeKey(r,a);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new V(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new V("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new V(`No such layer: ${e}`)}calculateLosses(){return B(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let r=Rr.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let s of this.layers){let i=s.getClassName(),o=s.getConfig(),l=[];for(let u=0;u<s.inboundNodes.length;u++){let h=s.inboundNodes[u],d=Rr.nodeKey(s,u),c={};if(this.containerNodes.has(d)){if(h.callArgs)try{JSON.stringify(h.callArgs),c=h.callArgs}catch{console.warn(`Layer ${s.name} was passed non-serializable keyword arguments: ${h.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),c={}}if(h.inboundLayers.length>0){let f=[];for(let m=0;m<h.inboundLayers.length;m++){let g=h.inboundLayers[m],y=h.nodeIndices[m],b=h.tensorIndices[m],x=Rr.nodeKey(g,y),w=t[x];w==null&&(w=0),f.push([g.name,w,b,c])}l.push(f)}}}let p={};p.name=s.name,p.className=i,p.config=o,p.inboundNodes=l,n.push(p)}e.layers=n;let r=[];for(let s=0;s<this.inputLayers.length;s++){let i=this.inputLayers[s],o=this.inputLayersNodeIndices[s],l=Rr.nodeKey(i,o);if(!this.containerNodes.has(l))continue;let p=t[l];p==null&&(p=0);let u=this.inputLayersTensorIndices[s];r.push([i.name,p,u])}e.inputLayers=r;let a=[];for(let s=0;s<this.outputLayers.length;s++){let i=this.outputLayers[s],o=this.outputLayersNodeIndices[s],l=Rr.nodeKey(i,o);if(!this.containerNodes.has(l))continue;let p=t[l];p==null&&(p=0);let u=this.outputLayersTensorIndices[s];a.push([i.name,p,u])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){let a={},s={};function i(m,g){m.name in s?s[m.name].push(g):s[m.name]=[g]}function o(m,g){let y=[],b;for(let x of g){let w=x[0],I=x[1],N=x[2];if(b=x[3]==null?{}:x[3],!(w in a)){i(m,g);return}let C=a[w];if(C.inboundNodes.length<=I){i(m,g);return}let E=C.inboundNodes[I];y.push(E.outputTensors[N])}y.length>0&&m.apply(Sn(y),b)}function l(m){let g=m.name,y=Sr(m,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(r),a[g]=y,m.inboundNodes.forEach(b=>{if(!(b instanceof Array))throw new V(`Corrupted configuration, expected array for nodeData: ${b}`);i(y,b)})}let p=t.name,u=t.layers;for(let m of u)l(m);for(;!PP(s);)for(let m of u){let g=a[m.name];if(g.name in s){let y=s[g.name];delete s[g.name];for(let b of y)o(g,b)}}let h=[],d=[],c=t.inputLayers;for(let m of c){let g=m[0],y=m[1],b=m[2];Dr(g in a);let x=a[g].inboundNodes[y].outputTensors;h.push(x[b])}let f=t.outputLayers;for(let m of f){let g=m[0],y=m[1],b=m[2];Dr(g in a);let x=a[g].inboundNodes[y].outputTensors;d.push(x[b])}return new e({inputs:h,outputs:d,name:p})}get stateful(){if(this._stateful)throw new V("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){B(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function hW(e,t,n){let r=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(a=>null);if(r===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let a=[];return t.forEach(s=>{s in e?a.push(e[s]):a.push(null)}),a}else throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function TI(e,t){return hW(e,t,"classWeight")}async function _I(e,t,n,r){if(t!=null||r!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let a=B(()=>{if(e.shape.length===1)return Pr(e);if(e.shape.length===2){if(e.shape[1]>1)return Fs(e,1);if(e.shape[1]===1)return P(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await a.data());Ce(a);let i=[];return s.forEach(o=>{if(n[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(n[o])}),Ye(i,"float32")}else return null}function dW(e,t){return z(e,t)}var cW=32;function CI(e,t){let n,r,a=t;n=a.xs,r=a.ys,v.assert(n!=null&&r!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=kv("input",e.inputNames,n),i=kv("output",e.outputNames,r),o=s[0].shape[0];v.assert(s.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),v.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<s.length;l++)v.assert(s[l].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${s[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let l=0;l<i.length;l++)v.assert(i[l].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:s,ys:i}}function kv(e,t,n){if(n instanceof Re)return[n];if(Array.isArray(n))return v.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let r=[];for(let a of t){if(n[a]==null)throw new V(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function fW(e){if(e.length===3)throw new Me("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function mW(e,t,n){let r=n.batchesPerEpoch!=null;if(v.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),v.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),v.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),v.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),v.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a=n.validationData!=null,s,i;if(a)if(Iv(n.validationData))v.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=fW(n.validationData);s=g.xs,i=g.ys}let o=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),p;a?p=l.slice().concat(l.map(g=>"val_"+g)):p=l.slice();let u=bI(n.callbacks,n.yieldEvery),h=n.verbose==null?1:n.verbose,{callbackList:d,history:c}=xI(u,h,n.epochs,null,null,gW(t,n),null,a,p);d.setModel(e),e.history=c,await d.onTrainBegin(),e.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let g={};await d.onEpochBegin(f);let y=0,b=0;for(r||(m=await t.iterator());!r||y<n.batchesPerEpoch;){let x=await m.next();if(r&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:w,ys:I}=CI(e,x.value),N={};N.batch=b,N.size=w[0].shape[0],await d.onBatchBegin(b,N);let C=[];if(n.classWeight!=null){let F=TI(n.classWeight,e.outputNames);for(let R=0;R<F.length;++R)C.push(await _I(I[R],null,F[R]))}let E=w.concat(I).concat(C),$=o(E);Ce(E);for(let F=0;F<l.length;++F){let R=l[F],S=$[F];N[R]=S,Bt(S)}await d.onBatchEnd(b,N),fI(N),b++,y++}if(r?y>=n.batchesPerEpoch:x.done){if(a){let w;Iv(n.validationData)?w=ht(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):w=ht(e.evaluate(s,i,{batchSize:n.validationBatchSize==null?cW:n.validationBatchSize,verbose:0}));for(let I=0;I<e.metricsNames.length;++I)g[`val_${e.metricsNames[I]}`]=w[I]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,g),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function gW(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function Iv(e){return typeof e.iterator=="function"}function yW(e){return typeof e.next=="function"}async function bW(e,t,n){n=n||{};let r=n.batches!=null,a=e.testFunction,s=[];if(n.verbose>0)throw new Me("Verbose mode is not implemented yet.");v.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let i=yW(t)?t:await t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let p=await i.next();if(s=B(()=>{if(p.value){let{xs:u,ys:h}=CI(e,p.value),d=u.concat(h),c=B(()=>a(d));if(Ce(d),l===0)for(let m=0;m<c.length;++m)s.push(ve(0));let f=d[0].shape[0];for(let m=0;m<c.length;++m){let g=c[m],y=s[m];s[m]=B(()=>Y(s[m],z(f,g))),l>0&&Ce(y)}Ce(c),o+=f,++l}return s}),p.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let p=0;p<s.length;++p){let u=s[p];s[p]=me(s[p],o),Ce(u)}return Sn(s)}function Cm(e){v.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function Eu(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(r=>Ss(r,t,n-t)):Ss(e,t,n-t)}function ab(e,t){return B(()=>e==null?null:Array.isArray(e)?e.map(n=>ab(n,t)):iI(e,t.dtype==="int32"?t:ie(t,"int32")))}function Em(e,t){let n=[],r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}async function xW(e,t,n,r,a,s,i,o,l,p,u,h,d,c,f){a==null&&(a=32),s==null&&(s=1),u==null&&(u=!0),d==null&&(d=0);let m=!1;if(l!=null&&p!=null&&(m=!0),f!=null&&(m=!0,c==null))throw new V("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,a,c,"steps_per_epoch"),y;g!=null&&(y=Tr(0,g)),i==null&&(i=1);let{callbackList:b,history:x}=xI(o,i,s,d,g,c,a,m,h);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let w=d;w<s;++w){await b.onEpochBegin(w);let I={};if(c!=null)throw new Me("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new Me("batch shuffling is not implemneted yet");u&&v.shuffle(y);let N=Ye(y),C=Em(g,a);for(let E=0;E<C.length;++E){let $={};if(await b.onBatchBegin(E,$),B(()=>{let F=C[E][0],R=C[E][1],S=Ss(N,F,R-F);$.batch=E,$.size=R-F;let D=ab(n,S),W=t(D);for(let U=0;U<r.length;++U){let G=r[U],j=W[U];$[G]=j,Bt(j)}if(E===C.length-1&&m){let U=e.testLoop(l,p,a);for(let G=0;G<r.length;++G){let j=r[G],H=U[G];Bt(H),I["val_"+j]=H}}}),await b.onBatchEnd(E,$),fI($),e.stopTraining_)break}N.dispose()}if(await b.onEpochEnd(w,I),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}async function wW(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let a,s,i,o,l,p,u,h,d;try{let c=r.batchSize==null?32:r.batchSize;Cm(c);let f=!1,m=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,f,c);a=m[0],s=m[1],d=m[2];let g=!1,y;if(r.validationData!=null&&r.validationData.length>0){if(g=!0,r.validationData.length===2)l=r.validationData[0],p=r.validationData[1];else throw r.validationData.length===3?new Me("validationData including sample weights is not supported yet."):new V(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);let E=!0,$=await e.standardizeUserData(l,p,null,null,E,c);u=$[0],h=$[1],y=u.concat(h)}else if(r.validationSplit!=null&&r.validationSplit>0&&r.validationSplit<1){g=!0;let E=Math.floor(a[0].shape[0]*(1-r.validationSplit)),$=a[0].shape[0];u=Eu(a,E,$),i=a,a=Eu(a,0,E),h=Eu(s,E,$),o=s,s=Eu(s,0,E),y=u.concat(h)}else r.validationSteps!=null&&(g=!0);let b=a.concat(s).concat(d);e.checkTrainableWeightsConsistency();let x=e.makeTrainFunction(),w=e.getDedupedMetricsNames(),I,N;g?(e.makeTestFunction(),I=e.testFunction,N=w.slice().concat(w.map(E=>"val_"+E))):(I=null,y=[],N=w.slice());let C=bI(r.callbacks,r.yieldEvery);return await xW(e,x,b,w,c,r.epochs,r.verbose,C,I,y,r.shuffle,N,r.initialEpoch,null,null)}finally{e.isTraining=!1,wr(a,t),wr(s,n),wr(i,t),wr(o,n),wr(u,l),wr(h,p),d!=null&&Ce(d)}}function EI(e){let t=[];e instanceof Re&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(r.rank===1)t.push(qp(r,1));else{if(r.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function wr(e,t){if(e==null)return;let n=[];if(t instanceof Re)n.push(t.id);else if(Array.isArray(t))t.forEach(a=>n.push(a.id));else if(t!=null)for(let a in t){let s=t[a];n.push(s.id)}let r=[];if(e instanceof Re)n.indexOf(e.id)===-1&&r.push(e);else if(Array.isArray(e))e.forEach(a=>{n.indexOf(a.id)===-1&&r.push(a)});else if(e!=null)for(let a in e){let s=e[a];n.indexOf(s.id)===-1&&r.push(s)}r.forEach(a=>{a.isDisposed||a.dispose()})}function vW(e){return e instanceof Re}function $m(e){return Array.isArray(e)}function Sv(e){return!vW(e)&&!$m(e)}function Nv(e,t,n,r=!0,a=""){if(t==null||t.length===0){if(e!=null){let i=!1;if($m(e)&&e.length>0)i=!0;else if(Sv(e)){for(let o in e)if(e.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new V(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(i=>null);let s;if(Sv(e)){e=e,s=[];for(let i of t){if(e[i]==null)throw new V(`No data provided for "${i}". Need data for each key in: ${t}`);s.push(e[i])}}else if($m(e)){if(e=e,e.length!==t.length)throw new V(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new V(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=EI(s),n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=s[i];if(o.shape.length!==n[i].length)throw new V(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<n[i].length;++l){if(l===0&&!r)continue;let p=o.shape[l],u=n[i][l];if(u!=null&&u>=0&&p!==u)throw new V(`${a} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${a} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return s}function kW(e,t,n){let r=Ca(e.map(s=>s.shape[0]));r.sort();let a=Ca(t.map(s=>s.shape[0]));if(a.sort(),r.length>1)throw new V(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(a.length>1)throw new V(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(r.length>0&&a.length>0&&!v.arraysEqual(r,a))throw new V(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}function IW(e,t,n){let r=[ji,mf,Zu];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(i!=null){if(i===Zu&&s.shape[s.shape.length-1]===1)throw new V(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(r.indexOf(i)!==-1){let l=s.shape.slice(1),p=o.slice(1);for(let u=0;u<l.length;++u){let h=l[u],d=p[u];if(d!=null&&h!==d)throw new V(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Tv(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new V(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new V(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=s[i];if(o.shape.length!==n[i].length)throw new V(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<n[i].length;++l){if(l===0&&!r)continue;let p=o.shape[l],u=n[i][l];if(u!=null&&u!==p)throw new V(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function SW(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(r=>n);{let r=[];for(let a of t){let s=n.hasOwnProperty(a)?n[a]:[];Array.isArray(s)||(s=[s]),r.push(s)}return r}}var NW="layers-model",la=class extends Rr{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new V("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");iW(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=sW(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ma))throw new V("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let s in e.loss)if(this.outputNames.indexOf(s)===-1)throw new V(`Unknown entry in loss dictionary: "${s}". Only expected the following keys: ${this.outputNames}`);for(let s of this.outputNames)e.loss[s]==null&&console.warn(`Output "${s}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${s} during training`),t.push(jf(e.loss[s]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new V(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(s=>jf(s))}else{let s=jf(e.loss);this.outputs.forEach(i=>{t.push(s)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){let i=this.internalOutputShapes[s],o=this.outputNames[s];this.feedOutputNames.push(o),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[s])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Is("loss",()=>{for(let s=0;s<this.outputs.length;++s){if(n.indexOf(s)!==-1)continue;let i=this.lossFunctions[s];this.outputs.length>1&&(this.metricsTensors.push([i,s]),this.metricsNames.push(this.outputNames[s]+"_loss"))}});let r=SW(e.metrics,this.outputNames),a=(s,i,o)=>{this.outputNames.length>1&&(i=this.outputNames[s]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([o,s])};Is("metric",()=>{for(let s=0;s<this.outputs.length;++s){if(n.indexOf(s)!==-1)continue;let i=r[s];(o=>{let l="",p,u,h;for(let d of o){if(typeof d=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(d)!==-1){let f=this.internalOutputShapes[s];f[f.length-1]===1||this.lossFunctions[s]===mf?["accuracy","acc"].indexOf(d)!==-1?u=eb:["crossentropy","ce"].indexOf(d)!==-1&&(u=kI):this.lossFunctions[s]===gd?["accuracy","acc"].indexOf(d)!==-1?u=II:["crossentropy","ce"].indexOf(d)!==-1&&(u=SI):["accuracy","acc"].indexOf(d)!==-1?u=tb:["crossentropy","ce"].indexOf(d)!==-1&&(u=nb);let m;["accuracy","acc"].indexOf(d)!==-1?m="acc":["crossentropy","ce"].indexOf(d)!==-1&&(m="ce"),h=u,p=l+m}else h=aW(d),p=l+Ah(d);let c;Is(p,()=>{c=h}),a(s,p,c)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let r=n.batchSize==null?32:n.batchSize;Cm(r);let a=!0,s=this.standardizeUserDataXY(e,t,a,r);try{let i=s[0].concat(s[1]);this.makeTestFunction();let o=this.testFunction,l=this.testLoop(o,i,r,n.verbose,n.steps);return Sn(l)}finally{wr(s[0],e),wr(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),bW(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(n!=null){if(a=null,t!=null)throw new V(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?a=e[0].shape[0]:a=e.shape[0];else throw new V(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return a}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new V("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new xs;if(e instanceof Re&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new V(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let o=0;o<this.inputs.length;++o)s.add(this.inputs[o],e[o])}else for(let o of this.inputs){let l=e[o.name];if(l==null)throw new V(`No value is provided for the model's input ${o.name}`);s.add(o,l)}let i=Cu(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=Ls(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map(i=>i.name);for(let i=0;i<e.length;++i){let o=s.indexOf(e[i]);if(o!==-1&&(t[i]=a[o],n--),n===0)break}if(n===0)break}if(n>0){let r=[];throw t.forEach((a,s)=>{a==null&&r.push(e[s])}),new V(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,n=!1){return B(()=>{let r=this.checkNumSamples(e);if(n)throw new Me("Verbose predictLoop() is not implemented yet.");let a=Em(r,t),s=this.outputs.map(i=>[]);for(let i=0;i<a.length;++i)B(()=>{let o=a[i][0],l=a[i][1],p=Eu(e,o,l),u=[];if(Array.isArray(p))for(let d=0;d<p.length;++d)u.push({key:this.inputs[d],value:p[d]});else u.push({key:this.inputs[0],value:p});let h=new xs(u);return Cu(this.outputs,h)}).forEach((o,l)=>s[l].push(o));return Sn(s.map(i=>nt(i,0)))})}predict(e,t={}){let n=EI(e);Tv(n,this.inputNames,this.feedInputShapes,!1);try{let r=t.batchSize==null?32:t.batchSize;return Cm(r),this.predictLoop(n,r)}finally{wr(n,e)}}predictOnBatch(e){Tv(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(this.optimizer_==null)throw new vr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let s=0;s<this.feedOutputShapes.length;++s){let i=this.feedOutputShapes[s];this.feedLossFns[s]===gd?a.push(i.slice(0,i.length-1).concat([1])):a.push(i)}if(e=Nv(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Nv(t,this.feedOutputNames,a,!1,"target"),kW(e,t),IW(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new V(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,a,s);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(r!=null){let p=TI(r,this.outputNames);l=[];for(let u=0;u<p.length;++u)l.push(await _I(o[u],null,p[u]))}return[i,o,l]}testLoop(e,t,n,r=0,a){return B(()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new Me("Verbose mode is not implemented yet.");if(a!=null)throw new Me("steps mode in testLoop() is not implemented yet");{let o=Em(s,n),l=Ye(Tr(0,s));for(let p=0;p<o.length;++p){let u=o[p][0],h=o[p][1],d=Ss(l,u,h-u),c=ab(t,d),f=e(c);if(p===0)for(let m=0;m<f.length;++m)i.push(ve(0));for(let m=0;m<f.length;++m){let g=f[m];i[m]=Y(i[m],z(h-u,g))}}for(let p=0;p<i.length;++p)i[p]=me(i[p],s)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;hv(e,r)>1&&(a+=`_${hv(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),s=[],i=()=>{let p=[];for(let c=0;c<this.inputs.length;++c)p.push({key:this.inputs[c],value:n[c]});let u=new xs(p),h=Cu(this.outputs,u,{training:!0}),d;for(let c=0;c<this.lossFunctions.length;++c){let f=this.lossFunctions[c],m=f(r[c],h[c]);a[c]!=null&&(m=dW(m,a[c]));let g=yt(m);t.push(g),c===0?d=m:d=Y(d,m)}for(let c=0;c<this.metricsTensors.length;++c){let f;if(this.outputs.length>1&&c<this.outputs.length)f=t[c];else{let m=this.metricsTensors[c][0],g=this.metricsTensors[c][1];f=yt(m(r[g],h[g]))}Bt(f),s.push(f)}return d=yt(d),this.calculateLosses().forEach(c=>{d=Y(d,c)}),d},o=this.collectedTrainableWeights.map(p=>p.read()),l=!0;return[this.optimizer_.minimize(i,l,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>B(()=>{let t=[],n,r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let l=0;l<this.inputs.length;++l)s.push({key:this.inputs[l],value:r[l]});let i=new xs(s),o=Cu(this.outputs,i);for(let l=0;l<this.lossFunctions.length;++l){let p=this.lossFunctions[l],u=yt(p(a[l],o[l]));l===0?n=u:n=Y(n,u),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let p=this.metricsTensors[l][0],u=this.metricsTensors[l][1],h=yt(p(a[u],o[u]));t.push(h)}return t})}async fit(e,t,n={}){return wW(this,e,t,n)}async fitDataset(e,t){return mW(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let o of s){let l=await o.data();i.push(l[0])}return Ce(s),wr(n[0],e),wr(n[1],t),Sn(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||t.push({name:r[s].originalName,tensor:a[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=ld().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ld().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=ra(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>ra(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t)if(typeof n[r]=="string")e[r]=ra(n[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[ra(Ah(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>ra(Ah(e)));{let e={};for(let t in this.metrics)e[t]=ra(Ah(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=Yu(e.optimizer_config),n=Sr(t),r;if(typeof e.loss=="string")r=gs(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(s=>gs(s));else if(e.loss!=null){r={};for(let s in e.loss)r[s]=gs(e.loss[s])}let a;if(Array.isArray(e.metrics))a=e.metrics.map(s=>gs(s));else if(e.metrics!=null){a={};for(let s in e.metrics)a[s]=gs(e.metrics[s])}this.compile({loss:r,metrics:a,optimizer:n})}async save(e,t){if(typeof e=="string"){let i=Yt.getSaveHandlers(e);if(i.length===0)throw new V(`Cannot find any save handlers for URL '${e}'`);if(i.length>1)throw new V(`Found more than one (${i.length}) save handlers for URL '${e}'`);e=i[0]}if(e.save==null)throw new V("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Yt.encodeWeights(this.getNamedWeights(t)),r=!1,a=null,s={modelTopology:this.toJSON(a,r),format:NW,generatedBy:`TensorFlow.js tfjs-layers v${rb}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){s.trainingConfig=this.getTrainingConfig();let i="optimizer",{data:o,specs:l}=await Yt.encodeWeights(await this.optimizer.getWeights(),i);n.specs.push(...l),n.data=Yt.concatenateArrayBuffers([n.data,o])}return this.userDefinedMetadata!=null&&(vv(this.userDefinedMetadata,this.name,!0),s.userDefinedMetadata=this.userDefinedMetadata),s.weightData=n.data,s.weightSpecs=n.specs,e.save(s)}setUserDefinedMetadata(e){vv(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};la.className="Model";ne.registerClass(la);var $I=class extends la{};$I.className="Functional";ne.registerClass($I);async function TW(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let r=Yu(n),a=Sr(r,t);if(e.weightsManifest!=null){let s=await Yt.loadWeights(e.weightsManifest,e.pathPrefix,a.weights.map(o=>o.originalName)),i={};for(let o of a.weights)i[o.originalName]=s[o.originalName];a.loadWeights(i),Ce(s)}return a}async function _W(e,t){if(t==null&&(t={}),typeof e=="string"){let n=Yt.getLoadHandlers(e,t);if(n.length===0)n.push(Yt.browserHTTPRequest(e,t));else if(n.length>1)throw new V(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return CW(e,void 0,t)}async function CW(e,t,n){if(n==null&&(n={}),e.load==null)throw new V("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),a=r.modelTopology;a.model_config!=null&&(a=a.model_config);let s=n.strict==null?!0:n.strict,i=r.weightData!=null&&r.weightSpecs!=null&&s,o=Sr(Yu(a),t,i),l=r.trainingConfig;if(l!=null&&o.loadTrainingConfig(l),r.userDefinedMetadata!=null&&o.setUserDefinedMetadata(r.userDefinedMetadata),r.weightData!=null){if(r.weightSpecs==null)throw new V("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:p,optimizerWeights:u}=EW(r.weightData,r.weightSpecs);o.loadWeights(p,s),o.optimizer!=null&&u.length>0&&await o.optimizer.setWeights(u),Ce(p),Ce(u.map(h=>h.tensor))}return o}function EW(e,t){let n=Yt.decodeWeights(e,t),r={},a=[];return t.forEach(s=>{s.group==="optimizer"?a.push({name:s.name,tensor:n[s.name]}):r[s.name]=n[s.name]}),{modelWeights:r,optimizerWeights:a}}var Ro=class extends la{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:rf("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new V(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof Ro||e instanceof la,n;if(t){if(n=e,n.outputs.length!==1)throw new V("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new V("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new V("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let r=pI({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new V(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new V("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=uI(this.outputs[0])}this.inboundNodes=[],new cf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ls(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{let r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(Ze(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new la({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new vr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new vr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new vr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new vr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new V("Legacy serialization format not supported yet.");a=t}else v.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof Ro))throw new Me(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let o of a){let l=Sr(o,void 0,r);r&&l.setFastWeightInitDuringBuild(!0),i.add(l)}return i}set stopTraining(e){if(this.model==null)throw new V("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new V("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};Ro.className="Sequential";ne.registerClass(Ro);function $W(e){return new la(e)}function AW(e){return new Ro(e)}function AI(e){return pI(e)}function RW(e,t){pr.registerCallbackConstructor(e,t)}var Rn=class extends ne.Serializable{getConfig(){return{}}},RI=class extends Rn{apply(e,t=1){return eB(e,t)}};RI.className="elu";ne.registerClass(RI);var FI=class extends Rn{apply(e){return zc(e)}};FI.className="selu";ne.registerClass(FI);var MI=class extends Rn{apply(e){return Je(e)}};MI.className="relu";ne.registerClass(MI);var DI=class extends Rn{apply(e){return B(()=>Zl(6,Je(e)))}};DI.className="relu6";ne.registerClass(DI);var OI=class extends Rn{apply(e){return e}};OI.className="linear";ne.registerClass(OI);var LI=class extends Rn{apply(e){return fr(e)}};LI.className="sigmoid";ne.registerClass(LI);var zI=class extends Rn{apply(e){return nB(e)}};zI.className="hardSigmoid";ne.registerClass(zI);var PI=class extends Rn{apply(e){return Ui(e)}};PI.className="softplus";ne.registerClass(PI);var BI=class extends Rn{apply(e){return tB(e)}};BI.className="softsign";ne.registerClass(BI);var WI=class extends Rn{apply(e){return Ms(e)}};WI.className="tanh";ne.registerClass(WI);var sb=class extends Rn{apply(e,t=-1){return Za(e,t)}};sb.className="softmax";ne.registerClass(sb);var VI=class extends Rn{apply(e,t=-1){return $c(e,t)}};VI.className="logSoftmax";ne.registerClass(VI);var UI=class extends Rn{apply(e,t=1){return B(()=>z(fr(z(e,t)),e))}};UI.className="swish";ne.registerClass(UI);var GI=class extends Rn{apply(e){return B(()=>z(e,Ms(Ui(e))))}};GI.className="mish";ne.registerClass(GI);function Da(e){return e.getClassName()}function Kf(e,t={}){return Hp(e,ne.SerializationMap.getMap().classNameMap,t,"activation")}function Oa(e){if(e==null){let t={};return t.className="linear",t.config={},Kf(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},Kf(t)}else return e instanceof Rn?e:Kf(e)}function ib(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var HI=class extends ne.Serializable{},Zp=class extends HI{constructor(e){super(),ib(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return B(()=>{let t=bt([1]);return this.hasL1&&(t=Y(t,ye(z(this.l1,_t(e))))),this.hasL2&&(t=Y(t,ye(z(this.l2,jp(e))))),P(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Zp.className="L1L2";ne.registerClass(Zp);function FW(e){return ib(e),new Zp({l1:e!=null?e.l1:null,l2:0})}function MW(e){return ib(e),new Zp({l2:e!=null?e.l2:null,l1:0})}var _v={l1l2:"L1L2"};function at(e){return Ly(e)}function Cv(e,t={}){return Hp(e,ne.SerializationMap.getMap().classNameMap,t,"regularizer")}function mt(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in _v?_v[e]:e,config:{}};return Cv(t)}else return e instanceof HI?e:Cv(e)}var ob=class extends Ve{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Te(e);let n=Je(e);return this.maxValue!=null&&(n=an(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};ob.className="ReLU";ne.registerClass(ob);var lb=class extends Ve{constructor(e){super(e==null?{}:e),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Te(e);return Dp(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};lb.className="LeakyReLU";ne.registerClass(lb);var ub=class extends Ve{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=ft(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=mt(e.alphaRegularizer),this.alphaConstraint=Ot(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new V(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Ze(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new Ct({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Te(e),Bp(e,this.alpha.read())}getConfig(){let e={alphaInitializer:xt(this.alphaInitializer),alphaRegularizer:at(this.alphaRegularizer),alphaConstraint:Dt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};ub.className="PReLU";ne.registerClass(ub);var pb=class extends Ve{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Me(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Te(e);return ql(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};pb.className="ELU";ne.registerClass(pb);var hb=class extends Ve{constructor(e){super(e==null?{}:e),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Te(e);return z(n,ie(yn(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};hb.className="ThresholdedReLU";ne.registerClass(hb);var db=class extends Ve{constructor(e){super(e==null?{}:e),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new sb().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Te(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};db.className="Softmax";ne.registerClass(db);function yo(e,t,n){if(typeof e=="number")return Ls(e,t);if(e.length!==t)throw new V(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(!ZP(a))throw new V(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function Nr(e,t,n,r,a=1){if(e==null)return e;let s=t+(t-1)*(a-1),i;return n==="same"?i=e:i=e-s+1,Math.floor((i+r-1)/r)}function Or(e,t,n,r){if(e==null)return null;if(r==="valid")e=e*t+Ma([n-t,0]);else if(r==="same")e=e*t;else throw new V(`Unsupport padding mode: ${r}.`);return e}function cb(e,t){return B(()=>(Nt(t),t==="channelsFirst"?Fe(e,[0,2,3,1]):e))}function qI(e,t){return B(()=>(Nt(t),t==="channelsFirst"?Fe(e,[0,2,3,4,1]):e))}function DW(e,t,n,r=1,a="valid",s,i=1){return B(()=>{if(s==null&&(s=_r()),Nt(s),e.shape.length!==3)throw new V(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new V(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new V(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(s==="channelsFirst"&&(e=Fe(e,[0,2,1])),a==="causal")throw new Me("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Ic(e,t,r,a==="same"?"same":"valid","NWC",i);return n!=null&&(o=$r(o,n)),o})}function Ev(e,t,n,r=[1,1],a="valid",s,i,o=null){return B(()=>{if(s==null&&(s=_r()),Nt(s),e.rank!==3&&e.rank!==4)throw new V(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new V(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=cb(e,s);if(a==="causal")throw new Me("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Eo.conv2d({x:l,filter:t,strides:r,pad:a==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),s==="channelsFirst"&&(l=Fe(l,[0,3,1,2])),l})}function OW(e,t,n,r=[1,1,1],a="valid",s,i){return B(()=>{if(s==null&&(s=_r()),Nt(s),e.rank!==4&&e.rank!==5)throw new V(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new V(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=qI(e,s);if(a==="causal")throw new Me("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Jg(o,t,r,a==="same"?"same":"valid","NDHWC",i),n!=null&&(o=$r(o,n)),s==="channelsFirst"&&(o=Fe(o,[0,4,1,2,3])),o})}var fb=class extends Ve{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",fb.verifyArgs(t),this.rank=e,Wt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Me(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=yo(t.kernelSize,e,"kernelSize"),this.strides=yo(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,ir(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Nt(this.dataFormat),this.activation=Oa(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=ft(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ot(t.biasConstraint),this.biasRegularizer=mt(t.biasRegularizer),this.activityRegularizer=mt(t.activityRegularizer),this.dilationRate=yo(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new V(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new V(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new V(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Dr("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!zy(e.kernelSize,"number",1,3))throw new V(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Da(this.activation),useBias:this.useBias,biasInitializer:xt(this.biasInitializer),biasRegularizer:at(this.biasRegularizer),activityRegularizer:at(this.activityRegularizer),biasConstraint:Dt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Yp=class extends fb{constructor(e,t){super(e,t),this.kernel=null,Yp.verifyArgs(t),this.filters=t.filters,Wt(this.filters,"filters"),this.kernelInitializer=ft(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ot(t.kernelConstraint),this.kernelRegularizer=mt(t.kernelRegularizer)}build(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new V(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return B(()=>{e=Te(e);let n,r=this.bias==null?null:this.bias.read(),a=eI(this.activation.getClassName());if(a!=null&&this.rank===2)n=Ev(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(this.rank===1)n=DW(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=Ev(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=OW(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Me("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=Ze(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<n.length;++a){let s=Nr(n[a],this.kernelSize[a],this.padding,this.strides[a],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[a]);t.push(s)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:xt(this.kernelInitializer),kernelRegularizer:at(this.kernelRegularizer),kernelConstraint:Dt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new V(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},Jp=class extends Yp{constructor(e){super(2,e),Jp.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!zy(e.kernelSize,"number",1,2))throw new V(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};Jp.className="Conv2D";ne.registerClass(Jp);var Qp=class extends Yp{constructor(e){super(3,e),Qp.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new V(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};Qp.className="Conv3D";ne.registerClass(Qp);var mb=class extends Jp{constructor(e){if(super(e),this.inputSpec=[new Ct({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new V(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Ze(e),e.length!==4)throw new V("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new V("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ct({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return B(()=>{let n=Te(e);if(n.shape.length!==4)throw new V(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let r=n.shape,a=r[0],s,i;this.dataFormat==="channelsFirst"?(s=2,i=3):(s=1,i=2);let o=r[s],l=r[i],p=this.kernelSize[0],u=this.kernelSize[1],h=this.strides[0],d=this.strides[1],c=Or(o,h,p,this.padding),f=Or(l,d,u,this.padding),m=[a,c,f,this.filters];this.dataFormat!=="channelsLast"&&(n=Fe(n,[0,2,3,1]));let g=Sc(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=Fe(g,[0,3,1,2])),this.bias!=null&&(g=$r(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=Ze(e);let t=e.slice(),n,r,a;this.dataFormat==="channelsFirst"?(n=1,r=2,a=3):(n=3,r=1,a=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=Or(t[r],o,s,this.padding),t[a]=Or(t[a],l,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};mb.className="Conv2DTranspose";ne.registerClass(mb);var gb=class extends Qp{constructor(e){if(super(e),this.inputSpec=[new Ct({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new V(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Ze(e),e.length!==5)throw new V("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new V("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ct({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return B(()=>{let n=Te(e);if(n.shape.length!==5)throw new V(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let r=n.shape,a=r[0],s,i,o;this.dataFormat==="channelsFirst"?(o=2,s=3,i=4):(o=1,s=2,i=3);let l=r[o],p=r[s],u=r[i],h=this.kernelSize[0],d=this.kernelSize[1],c=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=Or(l,f,h,this.padding),b=Or(p,m,d,this.padding),x=Or(u,g,c,this.padding),w=[a,y,b,x,this.filters];this.dataFormat!=="channelsLast"&&(n=Fe(n,[0,2,3,4,1]));let I=Qg(n,this.kernel.read(),w,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(I=Fe(I,[0,4,1,2,3])),this.bias!==null&&(I=$r(I,this.bias.read(),this.dataFormat)),this.activation!==null&&(I=this.activation.apply(I)),I})}computeOutputShape(e){e=Ze(e);let t=e.slice(),n,r,a,s;this.dataFormat==="channelsFirst"?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],p=this.strides[0],u=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=Or(t[r],p,i,this.padding),t[a]=Or(t[a],u,o,this.padding),t[s]=Or(t[s],h,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};gb.className="Conv3DTranspose";ne.registerClass(gb);var jI=class extends Yp{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new V("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new V("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new V(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=ft(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=mt(t.depthwiseRegularizer),this.depthwiseConstraint=Ot(t.depthwiseConstraint),this.pointwiseInitializer=ft(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=mt(t.pointwiseRegularizer),this.pointwiseConstraint=Ot(t.pointwiseConstraint)}build(e){if(e=Ze(e),e.length<this.rank+2)throw new V(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new V(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let i=0;i<this.rank;++i)a.push(1);a.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Ct({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return B(()=>{e=Te(e);let n;if(this.rank===1)throw new Me("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Fe(e,[0,2,3,1])),n=Jl(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=$r(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Fe(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=xt(this.depthwiseInitializer),e.pointwiseInitializer=xt(this.pointwiseInitializer),e.depthwiseRegularizer=at(this.depthwiseRegularizer),e.pointwiseRegularizer=at(this.pointwiseRegularizer),e.depthwiseConstraint=Dt(this.depthwiseConstraint),e.pointwiseConstraint=Dt(this.pointwiseConstraint),e}};jI.className="SeparableConv";var yb=class extends jI{constructor(e){super(2,e)}};yb.className="SeparableConv2D";ne.registerClass(yb);var gf=class extends Yp{constructor(e){super(1,e),gf.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!zy(e.kernelSize,"number",1,1))throw new V(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};gf.className="Conv1D";ne.registerClass(gf);var bb=class extends Ve{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return B(()=>{if(e=Te(e),this.dataFormat==="channelsLast"){let n=$h(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return $h(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=$h(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return $h(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};bb.className="Cropping2D";ne.registerClass(bb);var xb=class extends Ve{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Nt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,jP(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return B(()=>{let n=Te(e),r=n.shape;if(this.dataFormat==="channelsFirst"){n=Fe(n,[0,2,3,1]);let a=this.size[0]*r[2],s=this.size[1]*r[3],i=this.interpolation==="nearest"?zr.resizeNearestNeighbor(n,[a,s]):zr.resizeBilinear(n,[a,s]);return Fe(i,[0,3,1,2])}else{let a=this.size[0]*r[1],s=this.size[1]*r[2];return this.interpolation==="nearest"?zr.resizeNearestNeighbor(n,[a,s]):zr.resizeBilinear(n,[a,s])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};xb.className="UpSampling2D";ne.registerClass(xb);function LW(e,t,n=[1,1],r="valid",a,s){return B(()=>{a==null&&(a=_r()),Nt(a);let i=cb(e,a);if(e.rank!==4)throw new V(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new V(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Vi(i,t,n,r==="same"?"same":"valid","NHWC",s),a==="channelsFirst"&&(i=Fe(i,[0,3,1,2])),i})}var wb=class extends fb{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=ft(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ot(e.depthwiseConstraint),this.depthwiseRegularizer=mt(e.depthwiseRegularizer)}build(e){if(e=Ze(e),e.length<4)throw new V(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new V(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return B(()=>{e=Te(e);let n=LW(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=$r(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Nr(t,this.kernelSize[0],this.padding,this.strides[0]),s=Nr(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=xt(this.depthwiseInitializer),e.depthwiseRegularizer=at(this.depthwiseRegularizer),e.depthwiseConstraint=Dt(this.depthwiseRegularizer),e}};wb.className="DepthwiseConv2D";ne.registerClass(wb);function KI(e,t,n,r){if(Array.isArray(e)){if(t!=null||n!=null)throw new V("When inputs is an array, neither initialState or constants should be provided");r!=null&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(s){return s==null||Array.isArray(s)?s:[s]}return t=a(t),n=a(n),{inputs:e,initialState:t,constants:n}}function XI(e,t,n,r=!1,a,s,i=!1,o=!1){return B(()=>{let l=t.shape.length;if(l<3)throw new V(`Input should be at least 3D, but is ${l}D.`);let p=[1,0].concat(Tr(2,l));if(t=Fe(t,p),s!=null)throw new Me("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),a!=null&&(a=ie(ie(a,"bool"),"float32"),a.rank===l-1&&(a=Xt(a,-1)),a=Fe(a,p)),r&&(t=ar(t,0),a!=null&&(a=ar(a,0)));let u=[],h,d=n,c=t.shape[0],f=St(t),m;a!=null&&(m=St(a));for(let y=0;y<c;++y){let b=f[y],x=B(()=>e(b,d));if(a==null)h=x[0],d=x[1];else{let w=B(()=>{let I=m[y],N=pe(qn(I),I),C=Y(z(x[0],I),z(d[0],N)),E=d.map(($,F)=>Y(z(x[1][F],I),z($,N)));return{output:C,newStates:E}});h=w.output,d=w.newStates}o&&u.push(h)}let g;return o&&(g=Vt(u,1)),[h,g,d]})}var Kr=class extends Ve{constructor(e){super(e);let t;if(e.cell==null)throw new V("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new xf({cells:e.cell}):t=e.cell,t.stateSize==null)throw new V("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Ct({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Tr(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Sm(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],r;if(this.returnSequences?r=[e[0],e[1],n]:r=[e[0],n],this.returnState){let a=[];for(let s of t)a.push([e[0],s]);return[r].concat(a)}else return r}computeMask(e,t){return B(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let r=this.states.map(a=>null);return[n].concat(r)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Me("Constants support is not implemented in RNN yet.");Sm(e)&&(e=e[0]),e=e;let t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Ct({shape:[t,null,...n]});let r=[e[0]].concat(e.slice(2));this.cell.build(r);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!v.arraysEqual(this.stateSpec.map(s=>s.shape[s.shape.length-1]),a))throw new V(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(s=>new Ct({shape:[null,s]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){B(()=>{if(!this.stateful)throw new na("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new V("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>bt([n,r])):this.states_=[bt([n,this.cell.stateSize])];else if(e==null)Ce(this.states_),this.keptStates!=null&&(Ce(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>bt([n,r])):this.states_[0]=bt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new V(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Ce(this.states_);for(let r=0;r<this.states_.length;++r){let a=e[r],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,i=[n,s];if(!v.arraysEqual(a.shape,i))throw new V(`State ${r} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${a.shape}`);this.states_[r]=a}}this.states_=this.states_.map(r=>Bt(r.clone()))})}apply(e,t){let n=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});let a=KI(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(n!=null){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(let o of n)this.stateSpec.push(new Ct({shape:o.shape}));i=i.concat(this.stateSpec)}if(r!=null&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof kr){let o=[e].concat(s),l=this.inputSpec.concat(i),p=this.inputSpec;this.inputSpec=l;let u=super.apply(o,t);return this.inputSpec=p,u}else return super.apply(e,t)}call(e,t){return B(()=>{let n=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;e=Te(e),a==null&&(this.stateful?a=this.states_:a=this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new V(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:r},o=XI((d,c)=>{let f=this.cell.call([d].concat(c),i);return[f[0],f.slice(1)]},e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],p=o[1],u=o[2];this.stateful&&this.resetStates(u,r);let h=this.returnSequences?p:l;return this.returnState?[h].concat(u):h})}getInitialState(e){return B(()=>{let t=bt(e.shape);return t=ye(t,[1,2]),t=qp(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?km(t,[1,n]):t):this.cell.stateSize>1?[km(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===Kr.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){let r=t.cell,a=Sr(r,n);return new e(Object.assign(t,{cell:a}))}};Kr.className="RNN";ne.registerClass(Kr);var eh=class extends Ve{},yf=class extends eh{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Wt(this.units,"units"),this.activation=Oa(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ft(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ft(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ft(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=mt(e.kernelRegularizer),this.recurrentRegularizer=mt(e.recurrentRegularizer),this.biasRegularizer=mt(e.biasRegularizer),this.kernelConstraint=Ot(e.kernelConstraint),this.recurrentConstraint=Ot(e.recurrentConstraint),this.biasConstraint=Ot(e.biasConstraint),this.dropout=$o([1,Ma([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=$o([1,Ma([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ze(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return B(()=>{if(e=e,e.length!==2)throw new V(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=La({ones:()=>qn(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=La({ones:()=>qn(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;s!=null?a=Wr(z(e,s),this.kernel.read()):a=Wr(e,this.kernel.read()),this.bias!=null&&(a=$r(a,this.bias.read())),i!=null&&(n=z(n,i));let o=Y(a,Wr(n,this.recurrentKernel.read()));return this.activation!=null&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Da(this.activation),useBias:this.useBias,kernelInitializer:xt(this.kernelInitializer),recurrentInitializer:xt(this.recurrentInitializer),biasInitializer:xt(this.biasInitializer),kernelRegularizer:at(this.kernelRegularizer),recurrentRegularizer:at(this.recurrentRegularizer),biasRegularizer:at(this.biasRegularizer),activityRegularizer:at(this.activityRegularizer),kernelConstraint:Dt(this.kernelConstraint),recurrentConstraint:Dt(this.recurrentConstraint),biasConstraint:Dt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}};yf.className="SimpleRNNCell";ne.registerClass(yf);var vb=class extends Kr{constructor(e){e.cell=new yf(e),super(e)}call(e,t){return B(()=>{this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return new e(t)}};vb.className="SimpleRNN";ne.registerClass(vb);var bf=class extends eh{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new V("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Wt(this.units,"units"),this.activation=Oa(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Oa(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ft(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ft(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ft(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=mt(e.kernelRegularizer),this.recurrentRegularizer=mt(e.recurrentRegularizer),this.biasRegularizer=mt(e.biasRegularizer),this.kernelConstraint=Ot(e.kernelConstraint),this.recurrentConstraint=Ot(e.recurrentConstraint),this.biasConstraint=Ot(e.biasConstraint),this.dropout=$o([1,Ma([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=$o([1,Ma([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ze(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return B(()=>{if(e=e,e.length!==2)throw new V(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=La({ones:()=>qn(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=La({ones:()=>qn(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,s=this.recurrentDropoutMask,i,o,l;0<this.dropout&&this.dropout<1&&(e=z(e,a[0]));let p=Wr(e,this.kernel.read());this.useBias&&(p=$r(p,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=z(r,s[0]));let u=this.recurrentKernel.read(),[h,d]=_n(u,[2*this.units,this.units],u.rank-1),c=Wr(r,h),[f,m,g]=_n(p,3,p.rank-1),[y,b]=_n(c,2,c.rank-1);i=this.recurrentActivation.apply(Y(f,y)),o=this.recurrentActivation.apply(Y(m,b));let x=Wr(z(o,r),d);l=this.activation.apply(Y(g,x));let w=Y(z(i,r),z(Y(1,dt(i)),l));return[w,w]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Da(this.activation),recurrentActivation:Da(this.recurrentActivation),useBias:this.useBias,kernelInitializer:xt(this.kernelInitializer),recurrentInitializer:xt(this.recurrentInitializer),biasInitializer:xt(this.biasInitializer),kernelRegularizer:at(this.kernelRegularizer),recurrentRegularizer:at(this.recurrentRegularizer),biasRegularizer:at(this.biasRegularizer),activityRegularizer:at(this.activityRegularizer),kernelConstraint:Dt(this.kernelConstraint),recurrentConstraint:Dt(this.recurrentConstraint),biasConstraint:Dt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}};bf.className="GRUCell";ne.registerClass(bf);var kb=class extends Kr{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new bf(e),super(e)}call(e,t){return B(()=>{this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};kb.className="GRU";ne.registerClass(kb);var th=class extends eh{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Wt(this.units,"units"),this.activation=Oa(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Oa(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ft(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ft(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ft(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=mt(e.kernelRegularizer),this.recurrentRegularizer=mt(e.recurrentRegularizer),this.biasRegularizer=mt(e.biasRegularizer),this.kernelConstraint=Ot(e.kernelConstraint),this.recurrentConstraint=Ot(e.recurrentConstraint),this.biasConstraint=Ot(e.biasConstraint),this.dropout=$o([1,Ma([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=$o([1,Ma([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=Ze(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){let a=this.biasInitializer,s=this.units;r=new(t=class extends yr{apply(i,o){let l=a.apply([s]),p=new sf().apply([s]),u=a.apply([s*2]);return cv(cv(l,p),u)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return B(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new V(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=La({ones:()=>qn(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=La({ones:()=>qn(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,i=this.recurrentDropoutMask,o,l,p,u;0<this.dropout&&this.dropout<1&&(e=z(e,s[0]));let h=Wr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=z(r,i[0])),h=Y(h,Wr(r,this.recurrentKernel.read())),this.useBias&&(h=$r(h,this.bias.read()));let[d,c,f,m]=_n(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(c),p=Y(z(l,a),z(o,this.activation.apply(f))),u=this.recurrentActivation.apply(m);let g=z(u,this.activation.apply(p));return[g,g,p]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Da(this.activation),recurrentActivation:Da(this.recurrentActivation),useBias:this.useBias,kernelInitializer:xt(this.kernelInitializer),recurrentInitializer:xt(this.recurrentInitializer),biasInitializer:xt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:at(this.kernelRegularizer),recurrentRegularizer:at(this.recurrentRegularizer),biasRegularizer:at(this.biasRegularizer),activityRegularizer:at(this.activityRegularizer),kernelConstraint:Dt(this.kernelConstraint),recurrentConstraint:Dt(this.recurrentConstraint),biasConstraint:Dt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}};th.className="LSTMCell";ne.registerClass(th);var Ib=class extends Kr{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new th(e),super(e)}call(e,t){return B(()=>{this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Ib.className="LSTM";ne.registerClass(Ib);var xf=class extends eh{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return B(()=>{e=e;let n=e.slice(1),r=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?r.push(n.splice(0,i.stateSize.length)):r.push(n.splice(0,1));r.reverse();let a=[],s;for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=r[i],i===0?s=[e[0]].concat(n):s=[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(let i of a.slice().reverse())n.push(...i);return[s[0]].concat(n)})}build(e){Sm(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,r)=>{Is(`RNNCell_${r}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),n={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),n)}static fromConfig(e,t,n={}){let r=[];for(let a of t.cells)r.push(Sr(a,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return Nm(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,a=e.splice(r);for(let s=0;s<n.weights.length;++s)t.push([n.weights[s],a[s]])}jy(t)}};xf.className="StackedRNNCells";ne.registerClass(xf);function La(e){let{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>s!=null?s(t(),n):oI(t(),n),o=()=>Kp(i,t,r);return!a||a<=1?Bt(o().clone()):Array(a).fill(void 0).map(o).map(l=>Bt(l.clone()))}var zW=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var a=0,r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]]);return n},ZI=class extends Kr{constructor(e){if(e.unroll)throw new Me("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Me("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Ct({ndim:5})]}call(e,t){return B(()=>{if(this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new V("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return B(()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],s=bt(a);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){B(()=>{if(!this.stateful)throw new na("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(n[0]==null)throw new V("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>bt(a)):this.states_=[bt(a)];else if(e==null)Ce(this.states_),this.keptStates!=null&&(Ce(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>bt(a)):this.states_[0]=bt(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new V(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ce(this.states_);for(let s=0;s<this.states_.length;++s){let i=e[s],o=a;if(!v.arraysEqual(i.shape,o))throw new V(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${i.shape}`);this.states_[s]=i}}this.states_=this.states_.map(s=>Bt(s.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o=t==="channelsFirst",l=e[o?3:2],p=e[o?4:3],u=Nr(l,r[0],a,s[0],i[0]),h=Nr(p,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,u,h]:[u,h,n]]}};ZI.className="ConvRNN2D";var wf=class extends th{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Wt(this.filters,"filters"),this.kernelSize=yo(n,2,"kernelSize"),this.kernelSize.forEach(o=>Wt(o,"kernelSize")),this.strides=yo(r||1,2,"strides"),this.strides.forEach(o=>Wt(o,"strides")),this.padding=a||"valid",ir(this.padding),this.dataFormat=s||"channelsLast",Nt(this.dataFormat),this.dilationRate=yo(i||1,2,"dilationRate"),this.dilationRate.forEach(o=>Wt(o,"dilationRate"))}build(e){var t;e=Ze(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new V(`The channel dimension of the input should be defined. Found ${e[n]}`);let r=e[n],a=4,s=this.kernelSize.concat([r,this.filters*a]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*a]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let o;if(this.unitForgetBias){let l=this.biasInitializer,p=this.filters;o=new(t=class extends yr{apply(u,h){let d=l.apply([p]),c=Wn([p]),f=l.apply([p*2]);return Py([d,c,f])}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*a],null,o,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return B(()=>{if(e.length!==3)throw new V(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],a=e[1],s=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=La({ones:()=>qn(r),rate:this.dropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let o=this.dropoutMask,l=(X,ee,Z)=>!ee||!ee[Z]?X:z(ee[Z],X),p=l(r,o,0),u=l(r,o,1),h=l(r,o,2),d=l(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=La({ones:()=>qn(a),rate:this.recurrentDropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let c=this.recurrentDropoutMask,f=l(a,c,0),m=l(a,c,1),g=l(a,c,2),y=l(a,c,3),b=3,[x,w,I,N]=_n(this.kernel.read(),i,b),[C,E,$,F]=this.useBias?_n(this.bias.read(),i):[null,null,null,null];p=this.inputConv(p,x,C,this.padding),u=this.inputConv(u,w,E,this.padding),h=this.inputConv(h,I,$,this.padding),d=this.inputConv(d,N,F,this.padding);let[R,S,D,W]=_n(this.recurrentKernel.read(),i,b);f=this.recurrentConv(f,R),m=this.recurrentConv(m,S),g=this.recurrentConv(g,D),y=this.recurrentConv(y,W);let U=this.recurrentActivation.apply(Y(p,f)),G=this.recurrentActivation.apply(Y(u,m)),j=Y(z(G,s),z(U,this.activation.apply(Y(h,g)))),H=z(this.recurrentActivation.apply(Y(d,y)),this.activation.apply(j));return[H,H,j]})}getConfig(){let e=super.getConfig(),t=zW(e,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),n)}inputConv(e,t,n,r){let a=hn(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?$r(a,n,this.dataFormat):a}recurrentConv(e,t){return hn(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};wf.className="ConvLSTM2DCell";ne.registerClass(wf);var Sb=class extends ZI{constructor(e){let t=new wf(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}};Sb.className="ConvLSTM2D";ne.registerClass(Sb);var vf=class extends Ve{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return n}call(e,t){return B(()=>{this.invokeCallHook(e,t);let n=Te(e);if(0<this.rate&&this.rate<1){let r=t.training==null?!1:t.training,a=this.getNoiseShape(n);return Kp(()=>oI(n,this.rate,a,this.seed),()=>n,r)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};vf.className="Dropout";ne.registerClass(vf);var Nb=class extends vf{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Nb.className="SpatialDropout1D";ne.registerClass(Nb);var Tb=class extends Ve{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Wt(this.units,"units"),this.activation=Oa(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=ft(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ft(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ot(e.kernelConstraint),this.biasConstraint=Ot(e.biasConstraint),this.kernelRegularizer=mt(e.kernelRegularizer),this.biasRegularizer=mt(e.biasRegularizer),this.activityRegularizer=mt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Ze(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=Ze(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return B(()=>{this.invokeCallHook(e,t);let n=Te(e),r=eI(this.activation.getClassName()),a;return r!=null?a=Wr(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=Wr(n,this.kernel.read()),this.bias!=null&&(a=$r(a,this.bias.read())),this.activation!=null&&(a=this.activation.apply(a))),a})}getConfig(){let e={units:this.units,activation:Da(this.activation),useBias:this.useBias,kernelInitializer:xt(this.kernelInitializer),biasInitializer:xt(this.biasInitializer),kernelRegularizer:at(this.kernelRegularizer),biasRegularizer:at(this.biasRegularizer),activityRegularizer:at(this.activityRegularizer),kernelConstraint:Dt(this.kernelConstraint),biasConstraint:Dt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Tb.className="Dense";ne.registerClass(Tb);var _b=class extends Ve{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ze(e);for(let t of e.slice(1))if(t==null)throw new V(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ea(e,1)]}call(e,t){return B(()=>{this.invokeCallHook(e,t);let n=Te(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let r=[0];for(let a=2;a<n.rank;++a)r.push(a);r.push(1),n=Fe(n,r)}return QP(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};_b.className="Flatten";ne.registerClass(_b);var Cb=class extends Ve{constructor(e){super(e),this.supportsMasking=!0,this.activation=Oa(e.activation)}call(e,t){return B(()=>{this.invokeCallHook(e,t);let n=Te(e);return this.activation.apply(n)})}getConfig(){let e={activation:Da(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Cb.className="Activation";ne.registerClass(Cb);var Eb=class extends Ve{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return B(()=>(e=Te(e),YP(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Eb.className="RepeatVector";ne.registerClass(Eb);var $b=class extends Ve{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),a=1,s=null;for(let o=0;o<r.length;++o){let l=r[o];if(this.isUnknown(l))if(s===null)s=o;else throw new V("Can only specifiy one unknown dimension.");else a*=l}let i=Ea(e);if(s!==null){if(a===0||i%a!==0)throw new V(n);r[s]=i/a}else if(i!==a)throw new V(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return B(()=>{this.invokeCallHook(e,t);let n=Te(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return P(n,a)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};$b.className="Reshape";ne.registerClass($b);var Ab=class extends Ve{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Tr(1,e.dims.length+1);if(!v.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ct({ndim:this.dims.length+1})]}computeOutputShape(e){e=Ze(e);let t=e.slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return Fe(Te(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Ab.className="Permute";ne.registerClass(Ab);var Rb=class extends Ve{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Te(e),r=-1;return Ku(Os(n,this.maskValue),r)}call(e,t){return B(()=>{this.invokeCallHook(e,t);let n=Te(e),r=-1,a=!0,s=Ku(Os(n,this.maskValue),r,a);return z(n,ie(s,n.dtype))})}};Rb.className="Masking";ne.registerClass(Rb);var Fb=class extends Ve{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ht(e.inputLength))}this.inputDim=e.inputDim,Wt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Wt(this.outputDim,"outputDim"),this.embeddingsInitializer=ft(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=mt(e.embeddingsRegularizer),this.activityRegularizer=mt(e.activityRegularizer),this.embeddingsConstraint=Ot(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return B(()=>this.maskZero?(e=Te(e),Os(e,Ue(e))):null)}computeOutputShape(e){if(e=Ze(e),this.inputLength==null)return[...e,this.outputDim];let t=ht(this.inputLength);if(t.length!==e.length-1)throw new V(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let a=t[r],s=e[r+1];if(a!=null&&s!=null&&a!==s)throw new V(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);a==null&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return B(()=>{this.invokeCallHook(e,t);let n=Te(e);n.dtype!=="int32"&&(n=qi(n,"int32"));let r=iI(this.embeddings.read(),P(n,[n.size]));return P(r,Ze(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:xt(this.embeddingsInitializer),embeddingsRegularizer:at(this.embeddingsRegularizer),activityRegularizer:at(this.activityRegularizer),embeddingsConstraint:Dt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Fb.className="Embedding";ne.registerClass(Fb);var Ki=class extends Ve{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Me}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(a==null||s==null||a<0||s<0)n.push(null);else if(a===1)n.push(s);else if(s===1)n.push(a);else{if(a!==s)throw new V("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ze(e)]),e=e,e.length<2)throw new V(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let a of e)a!=null&&a[0]!==null&&t.push(a[0]);if(t=Ca(t),t.length>1)throw new V(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let a=1;a<e.length;++a){let s=e[a]==null?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}let r=e.map(a=>a.length);e.indexOf(null)===-1&&Ca(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return B(()=>{if(e=e,this.reshapeRequired){let n=[],r=e.map(a=>a.rank);if(r.indexOf(null)===-1){let a=Ma(r);for(let s of e){let i=s.rank;for(let o=0;o<a-i;++o)s=qp(s,1);n.push(s)}return this.mergeFunction(n)}else{let a=!1;for(let o of e){let l=o.rank;if(l==null){let p=o.shape,u=p[0],h=p.slice(1).concat([u]),d=P(o,[u].concat(Ea(p.slice(1))));d=Fe(d,[1,0]),d=P(d,h),n.push(d),a=!0}else if(l>1){let p=Tr(1,l).concat([0]);n.push(Fe(o,p)),a=!0}else n.push(o)}let s=this.mergeFunction(n),i=s.rank;if(a){if(i==null){let o=s.shape,l=o.length,p=o[l-1],u=[p].concat(o.slice(0,o.length-1));s=P(Fe(P(s,[-1,p]),[1,0]),u)}else if(i>1){let o=[i-1].concat(Tr(0,i-1));s=Fe(s,o)}}return s}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){let a=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,a)}let n=[];for(let r of e)r!=null&&r[0]!==null&&n.push(r[0]);return n=Ca(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return B(()=>{if(t==null)return null;if(!Array.isArray(t))throw new V("`mask` should be an Array");if(!Array.isArray(e))throw new V("`inputs` should be an Array");if(t.length!==e.length)throw new V(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:Xt(r,0));let n=t[0];for(let r=1;r<t.length-1;++r)n=mr(n,t[r]);return n})}},Mb=class extends Ki{constructor(e){super(e)}mergeFunction(e){return B(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Y(t,e[n]);return t})}};Mb.className="Add";ne.registerClass(Mb);var Db=class extends Ki{constructor(e){super(e)}mergeFunction(e){return B(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=z(t,e[n]);return t})}};Db.className="Multiply";ne.registerClass(Db);var Ob=class extends Ki{constructor(e){super(e)}mergeFunction(e){return B(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Y(t,e[n]);return z(1/e.length,t)})}};Ob.className="Average";ne.registerClass(Ob);var Lb=class extends Ki{constructor(e){super(e)}mergeFunction(e){return B(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=qr(t,e[n]);return t})}};Lb.className="Maximum";ne.registerClass(Lb);var zb=class extends Ki{constructor(e){super(e)}mergeFunction(e){return B(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Zl(t,e[n]);return t})}};zb.className="Minimum";ne.registerClass(zb);var Pb=class extends Ki{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new V("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let r of e)if(r!=null){t=!1;break}if(t)return;let n=[];for(let r=0;r<e.length;++r){let a=e[r].slice();a.splice(this.axis,1);let s=!1;for(let i of n)if(v.arraysEqual(i,a)){s=!0;break}s||n.push(a)}if(n.length>1)throw new V("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return B(()=>Py(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new V("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let a of t.slice(1)){if(n[r]==null||a[r]==null){n[r]=null;break}n[r]+=a[r]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new V("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new V("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new V(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return B(()=>{let n=!0;if(t.forEach(s=>{if(s!=null){n=!1;return}}),n)return null;let r=[];for(let s=0;s<e.length;++s)t[s]==null?r.push(ie(qn(e[s]),"bool")):t[s].rank<e[s].rank?r.push(Xt(t[s],-1)):r.push(t[s]);let a=nt(r,this.axis);return kc(a,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Pb.className="Concatenate";ne.registerClass(Pb);function Iu(e,t){for(;e<0;)e+=t;return e}function PW(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Me("batchDot is not implemented for tensors of 4D or higher rank yet");if(v.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),v.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new Me("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;n==null&&(n=[r-1,a-2]);let s=n;return B(()=>{let i;if(r>a){i=r-a;let l=[];for(let p=0;p<i;++p)l.push(1);t=P(t,t.shape.concat(l))}else if(a>r){i=a-r;let l=[];for(let p=0;p<i;++p)l.push(1);e=P(e,e.shape.concat(l))}else i=0;let o;if(e.shape.length===2&&t.shape.length===2)s[0]===s[1]?o=ye(z(e,t),s[0]):o=ye(z(Fe(e,[1,0]),t),s[1]);else{let l=s[0]!==e.shape.length-1,p=s[1]===t.shape.length-1;o=Oe(e,t,l,p)}if(i>0){let l;r>a?l=r+a-3:l=r-1;let p=[];for(let u=l;u<l+i;++u)p.push(u);o=Ya(o,p)}return o.shape.length===1&&(o=Xt(o,1)),o})}var Bb=class extends Ki{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Me("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new V(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new V(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((a,s)=>Iu(a,e[s].shape.length)):r=[Iu(this.axes,t.shape.length),Iu(this.axes,n.shape.length)],this.normalize&&(t=md(t,r[0]),n=md(n,r[1])),PW(t,n,r)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[Iu(this.axes,e.length),Iu(this.axes,t.length)],n}computeOutputShape(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Me("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let a=t.concat(n);return a.length===1&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Bb.className="Dot";ne.registerClass(Bb);var Wb=class extends Ve{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return B(()=>{this.invokeCallHook(e,t);let n=Te(e);return Kp(()=>Y(af(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};Wb.className="GaussianNoise";ne.registerClass(Wb);var Vb=class extends Ve{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return B(()=>{this.invokeCallHook(e,t);let n=Te(e);return this.rate>0&&this.rate<1?Kp(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return z(n,af(n.shape,1,r))},()=>n,t.training||!1):n})}};Vb.className="GaussianDropout";ne.registerClass(Vb);var Ub=class extends Ve{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Te(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return B(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return Kp(()=>{let r=Te(e),a=1.6732632423543772,s=1.0507009873554805,i=-a*s,o=ca(Yl(n),this.rate);o=qi(o,"float32");let l=((1-this.rate)*(1+this.rate*i**2))**-.5,p=-l*i*this.rate,u=Y(z(r,o),z(Y(o,-1),i));return Y(z(u,l),p)},()=>Te(e),t.training||!1)}return e})}};Ub.className="AlphaDropout";ne.registerClass(Ub);function Ju(e,t,n,r,a,s=.001){let i;if(e.rank===2)i=Vg(e,t,n,r,a,s);else if(e.rank===3)i=Ug(e,t,n,r,a,s);else if(e.rank===4)i=Gg(e,t,n,r,a,s);else throw new Me(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return i}function BW(e,t,n,r,a=.001){return B(()=>{let s=zp(e,r),i=s.mean,o=s.variance;return[Ju(e,i,o,n,t,a),i,o]})}function WW(e,t,n,r,a=.001){return B(()=>{let s=zp(e,r),i=s.mean,o=s.variance,l=[];for(let c of Tr(0,e.rank))r.indexOf(c)!==-1?l.push(1):l.push(e.shape[c]);let p=P(i,l),u=P(o,l),h=t==null?null:P(t,l),d=n==null?null:P(n,l);return[Ju(e,p,u,d,h,a),i,o]})}function VW(e,t,n,r,a=.001){return v.arraysEqual(r.slice().sort(),Tr(0,e.rank-1))?BW(e,t,n,r,a):WW(e,t,n,r,a)}var Gb=class extends Ve{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=ft(e.betaInitializer||"zeros"),this.gammaInitializer=ft(e.gammaInitializer||"ones"),this.movingMeanInitializer=ft(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ft(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ot(e.betaConstraint),this.gammaConstraint=Ot(e.gammaConstraint),this.betaRegularizer=mt(e.betaRegularizer),this.gammaRegularizer=mt(e.gammaRegularizer)}build(e){e=Ze(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new V(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Ct({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return B(()=>{let n=t.training==null?!1:t.training,r=Te(e),a=r.shape,s=a.length,i=Tr(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=Ls(1,s);l[o]=a[o];let p=i.slice();p.sort();let u=!v.arraysEqual(p,Tr(0,s).slice(0,s-1)),h=()=>{if(u){let g=P(this.movingMean.read(),l),y=P(this.movingVariance.read(),l),b=this.center?P(this.beta.read(),l):null,x=this.scale?P(this.gamma.read(),l):null;return Ju(r,g,y,b,x,this.epsilon)}else return Ju(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return h();let[d,c,f]=VW(r,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(g,y,b)=>{B(()=>{let x=1-b,w=g.read(),I=z(pe(w,y),x);g.write(pe(w,I))})};return m(this.movingMean,c,this.momentum),m(this.movingVariance,f,this.momentum),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:xt(this.betaInitializer),gammaInitializer:xt(this.gammaInitializer),movingMeanInitializer:xt(this.movingMeanInitializer),movingVarianceInitializer:xt(this.movingVarianceInitializer),betaRegularizer:at(this.betaRegularizer),gammaRegularizer:at(this.gammaRegularizer),betaConstraint:Dt(this.betaConstraint),gammaConstraint:Dt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Gb.className="BatchNormalization";ne.registerClass(Gb);var Hb=class extends Ve{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=ft(e.betaInitializer||"zeros"),this.gammaInitializer=ft(e.gammaInitializer||"ones"),this.betaRegularizer=mt(e.betaRegularizer),this.gammaRegularizer=mt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Ze(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=t);for(let a of this.axis)if(a<0||a>=t)throw new Error(`Invalid axis: ${a}`);if(this.axis.length!==Ca(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(a=>e[a]),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){let n=Te(e),r=n.shape,a=r.length;return B(()=>{let{mean:s,variance:i}=zp(n,this.axis,!0),o=Ls(1,a);for(let c of this.axis)o[c]=r[c];let l=c=>c!=null&&c.shape.length!==a?P(c,o):c,p=this.scale?l(this.gamma.read()):null,u=this.center?l(this.beta.read()):null,h=[],d=[];for(let c=0;c<a;++c)this.axis.indexOf(c)!==-1?(h.push(r[c]),d.push(1)):(h.push(1),d.push(r[c]));return s=Bn(s,h),i=Bn(i,h),p!=null&&(p=Bn(p,d)),u!=null&&(u=Bn(u,d)),Ju(n,s,i,u,p,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:xt(this.betaInitializer),gammaInitializer:xt(this.gammaInitializer),betaRegularizer:at(this.betaRegularizer),gammaRegularizer:at(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Hb.className="LayerNormalization";ne.registerClass(Hb);function UW(e,t,n){return B(()=>{if(e.rank!==4)throw new V(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new V("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=_r()),n!=="channelsLast"&&n!=="channelsFirst")throw new V(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return n==="channelsFirst"?r=[[0,0],[0,0],t[0],t[1]]:r=[[0,0],t[0],t[1],[0,0]],Er(e,r)})}var qb=class extends Ve{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?_r():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new V(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new V(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new V(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Ct({ndim:4})]}computeOutputShape(e){e=Ze(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return B(()=>UW(Te(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};qb.className="ZeroPadding2D";ne.registerClass(qb);function kf(e,t,n,r,a,s){return B(()=>{Nt(a),nI(s),ir(r),n==null&&(n=[1,1]),r==null&&(r="valid"),a==null&&(a=_r()),s==null&&(s="max"),e=cb(e,a);let i,o=r==="same"?"same":"valid";return s==="max"?i=zt(e,t,n,o):i=da(e,t,n,o),a==="channelsFirst"&&(i=Fe(i,[0,3,1,2])),i})}function YI(e,t,n,r,a,s){return B(()=>{Nt(a),nI(s),ir(r),n==null&&(n=[1,1,1]),r==null&&(r="valid"),a==null&&(a=_r()),s==null&&(s="max"),e=qI(e,a);let i,o=r==="same"?"same":"valid";return s==="max"?i=my(e,t,n,o):i=Wg(e,t,n,o),a==="channelsFirst"&&(i=Fe(i,[0,4,1,2,3])),i})}var JI=class extends Ve{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new V(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Wt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new V(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Wt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,ir(this.padding),this.inputSpec=[new Ct({ndim:3})]}computeOutputShape(e){e=Ze(e);let t=Nr(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return B(()=>{this.invokeCallHook(e,t),e=qp(Te(e),2);let n=this.poolingFunction(Te(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ya(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},jb=class extends JI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Nt(a),ir(r),kf(e,t,n,r,a,"max")}};jb.className="MaxPooling1D";ne.registerClass(jb);var Kb=class extends JI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Nt(a),ir(r),kf(e,t,n,r,a,"avg")}};Kb.className="AveragePooling1D";ne.registerClass(Kb);var QI=class extends Ve{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new V(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Wt(this.poolSize,"poolSize"),Wt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Nt(this.dataFormat),ir(this.padding),this.inputSpec=[new Ct({ndim:4})]}computeOutputShape(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Nr(t,this.poolSize[0],this.padding,this.strides[0]),n=Nr(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return B(()=>(this.invokeCallHook(e,t),this.poolingFunction(Te(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Xb=class extends QI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Nt(a),ir(r),kf(e,t,n,r,a,"max")}};Xb.className="MaxPooling2D";ne.registerClass(Xb);var Zb=class extends QI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Nt(a),ir(r),kf(e,t,n,r,a,"avg")}};Zb.className="AveragePooling2D";ne.registerClass(Zb);var eS=class extends Ve{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new V(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Wt(this.poolSize,"poolSize"),Wt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Nt(this.dataFormat),ir(this.padding),this.inputSpec=[new Ct({ndim:5})]}computeOutputShape(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Nr(t,this.poolSize[0],this.padding,this.strides[0]),n=Nr(n,this.poolSize[1],this.padding,this.strides[1]),r=Nr(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return B(()=>(this.invokeCallHook(e,t),this.poolingFunction(Te(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Yb=class extends eS{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Nt(a),ir(r),YI(e,t,n,r,a,"max")}};Yb.className="MaxPooling3D";ne.registerClass(Yb);var Jb=class extends eS{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Nt(a),ir(r),YI(e,t,n,r,a,"avg")}};Jb.className="AveragePooling3D";ne.registerClass(Jb);var tS=class extends Ve{constructor(e){super(e),this.inputSpec=[new Ct({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Me}},Qb=class extends tS{constructor(e){super(e||{})}call(e,t){return B(()=>{let n=Te(e);return yt(n,1)})}};Qb.className="GlobalAveragePooling1D";ne.registerClass(Qb);var ex=class extends tS{constructor(e){super(e||{})}call(e,t){return B(()=>{let n=Te(e);return nr(n,1)})}};ex.className="GlobalMaxPooling1D";ne.registerClass(ex);var nS=class extends Ve{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Nt(this.dataFormat),this.inputSpec=[new Ct({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Me}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},tx=class extends nS{call(e,t){return B(()=>{let n=Te(e);return this.dataFormat==="channelsLast"?yt(n,[1,2]):yt(n,[2,3])})}};tx.className="GlobalAveragePooling2D";ne.registerClass(tx);var nx=class extends nS{call(e,t){return B(()=>{let n=Te(e);return this.dataFormat==="channelsLast"?nr(n,[1,2]):nr(n,[2,3])})}};nx.className="GlobalMaxPooling2D";ne.registerClass(nx);var rS=class extends Ve{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=t.layer,a=Sr(r,n);delete t.layer;let s={layer:a};return Object.assign(s,t),new e(s)}},rx=class extends rS{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Ze(e),e.length<3)throw new V(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Ze(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return B(()=>(e=Te(e),XI((n,r)=>[Te(this.layer.call(n,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};rx.className="TimeDistributed";ne.registerClass(rx);function GW(e){Hi(qP,"BidirectionalMergeMode",e)}var HW="concat",ax=class extends rS{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Sr(n),t.goBackwards=t.goBackwards!==!0;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Sr(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?HW:e.mergeMode,GW(this.mergeMode),e.weights)throw new Me("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,r,a;return this.returnState&&(a=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,r=[n]):this.mergeMode==null?r=[n,n.slice()]:r=[n],this.returnState?this.mergeMode==null?r.concat(a).concat(a.slice()):[n].concat(a).concat(a.slice()):Sn(r)}apply(e,t){let n=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});let a=KI(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&r==null)return super.apply(e,t);let s=[],i=[];if(n!=null){let l=n.length;if(l%2>0)throw new V("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let p=n.map(u=>new Ct({shape:u.shape}));this.forwardLayer.stateSpec=p.slice(0,l/2),this.backwardLayer.stateSpec=p.slice(l/2),i.push(...p)}if(r!=null)throw new Me("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof kr;for(let l of s)if(l instanceof kr!==o)throw new V("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let l=[e].concat(s),p=this.inputSpec.concat(i),u=this.inputSpec;this.inputSpec=p;let h=super.apply(l,t);return this.inputSpec=u,h}else return super.apply(e,t)}call(e,t){return B(()=>{let n=t.initialState,r,a;if(n==null)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{let o=n.slice(0,n.length/2),l=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let s;this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=ar(a,1));let i;return this.mergeMode==="concat"?i=Py([r,a]):this.mergeMode==="sum"?i=Y(r,a):this.mergeMode==="ave"?i=z(.5,Y(r,a)):this.mergeMode==="mul"?i=z(r,a):this.mergeMode==null&&(i=[r,a]),this.returnState?this.mergeMode==null?i.concat(s):[i].concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Is(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Is(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Sr(t.layer);if(delete t.layer,t.numConstants!=null)throw new Me("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};ax.className="Bidirectional";ne.registerClass(ax);var sx=class extends Ve{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return B(()=>(e=Te(e),e.dtype!=="float32"&&(e=qi(e,"float32")),Y(z(e,this.scale),this.offset)))}};sx.className="Rescaling";ne.registerClass(sx);var qW=["bilinear","nearest"],$v=new Set(qW),ix=class extends Ve{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if($v.has(e.interpolation))this.interpolation=e.interpolation;else throw new V(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){e=Ze(e);let t=e[2];return[this.height,this.width,t]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return B(()=>{let n=[this.height,this.width];if(this.interpolation==="bilinear")return zr.resizeBilinear(e,n,!this.cropToAspectRatio);if(this.interpolation==="nearest")return zr.resizeNearestNeighbor(e,n,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...$v]} are supported`)})}};ix.className="Resizing";ne.registerClass(ix);function jW(e,t,n,r){let a=Te(e);if(a.dtype!=="int32"&&(a=qi(a,"int32")),t==="int")return a;let s=a.shape;if(a.rank===0&&(a=Xt(a,-1)),t==="oneHot"&&a.shape[a.shape.length-1]!==1&&(a=Xt(a,-1)),a.rank>2)throw new V(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${a.rank}.`);let i=["multiHot","oneHot"].includes(t),o=a,l;if(typeof r<"u"&&t==="count"?l=pd(o,r,n,i):l=pd(o,[],n,i),t!=="tfIdf")return l;if(r)return z(l,r);throw new V("When outputMode is 'tfIdf', weights must be provided.")}var ox=class extends Ve{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){let e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=Ze(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return B(()=>{e=Te(e),e.dtype!=="int32"&&(e=qi(e,"int32"));let n;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new V(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);n=Te(t.countWeights)}let r=nr(e),a=No(e),s=yn(this.numTokens,r).bufferSync().get(0),i=ca(a,0).bufferSync().get(0);if(!(s&&i))throw new V(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return jW(e,this.outputMode,this.numTokens,n)})}};ox.className="CategoryEncoding";ne.registerClass(ox);function KW(e){return new tu(e)}function XW(e){return new pb(e)}function ZW(e){return new ob(e)}function YW(e){return new lb(e)}function JW(e){return new ub(e)}function QW(e){return new db(e)}function e4(e){return new hb(e)}function t4(e){return new gf(e)}function n4(e){return new Jp(e)}function r4(e){return new mb(e)}function a4(e){return new Qp(e)}function s4(e){return new gb(e)}function i4(e){return new yb(e)}function o4(e){return new bb(e)}function l4(e){return new xb(e)}function u4(e){return new wb(e)}function p4(e){return new Cb(e)}function h4(e){return new Tb(e)}function d4(e){return new vf(e)}function c4(e){return new Nb(e)}function f4(e){return new _b(e)}function m4(e){return new Eb(e)}function g4(e){return new $b(e)}function y4(e){return new Ab(e)}function b4(e){return new Fb(e)}function x4(e){return new Mb(e)}function w4(e){return new Ob(e)}function v4(e){return new Pb(e)}function k4(e){return new Lb(e)}function I4(e){return new zb(e)}function S4(e){return new Db(e)}function N4(e){return new Bb(e)}function T4(e){return new Gb(e)}function _4(e){return new Hb(e)}function C4(e){return new qb(e)}function lx(e){return new Kb(e)}function E4(e){return lx(e)}function $4(e){return lx(e)}function ux(e){return new Zb(e)}function A4(e){return ux(e)}function R4(e){return ux(e)}function px(e){return new Jb(e)}function F4(e){return px(e)}function M4(e){return px(e)}function D4(e){return new Qb(e)}function O4(e){return new tx(e)}function aS(e){return new ex(e)}function sS(e){return new nx(e)}function iS(e){return new jb(e)}function oS(e){return new Xb(e)}function L4(e){return new Yb(e)}function z4(e){return new kb(e)}function P4(e){return new bf(e)}function B4(e){return new Ib(e)}function W4(e){return new th(e)}function V4(e){return new vb(e)}function U4(e){return new yf(e)}function G4(e){return new Sb(e)}function H4(e){return new wf(e)}function q4(e){return new Kr(e)}function j4(e){return new xf(e)}function K4(e){return new ax(e)}function X4(e){return new rx(e)}var Z4=aS,Y4=sS,J4=iS,Q4=oS;function eV(e){return new Wb(e)}function tV(e){return new Vb(e)}function nV(e){return new Ub(e)}function rV(e){return new Rb(e)}function aV(e){return new sx(e)}function sV(e){return new ix(e)}function iV(e){return new ox(e)}var lS={};Ee(lS,{MAPE:()=>yV,MSE:()=>wV,binaryAccuracy:()=>oV,binaryCrossentropy:()=>lV,categoricalAccuracy:()=>pV,categoricalCrossentropy:()=>hV,cosineProximity:()=>fV,mape:()=>bV,meanAbsoluteError:()=>mV,meanAbsolutePercentageError:()=>gV,meanSquaredError:()=>xV,mse:()=>vV,precision:()=>dV,recall:()=>cV,sparseCategoricalAccuracy:()=>uV});function oV(e,t){return eb(e,t)}function lV(e,t){return kI(e,t)}function uV(e,t){return II(e,t)}function pV(e,t){return tb(e,t)}function hV(e,t){return nb(e,t)}function dV(e,t){return vI(e,t)}function cV(e,t){return ZB(e,t)}function fV(e,t){return Qy(e,t)}function mV(e,t){return ff(e,t)}function gV(e,t){return nu(e,t)}function yV(e,t){return nu(e,t)}function bV(e,t){return nu(e,t)}function xV(e,t){return ji(e,t)}function wV(e,t){return ji(e,t)}function vV(e,t){return ji(e,t)}var uS={};Ee(uS,{modelFromJSON:()=>TW});var pS={};Ee(pS,{l1:()=>IV,l1l2:()=>kV,l2:()=>SV});function kV(e){return new Zp(e)}function IV(e){return FW(e)}function SV(e){return MW(e)}var hS=class extends Ao{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof la))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Rh(e,t){return e<t}function Av(e,t){return e>t}var dS=class extends hS{constructor(e){if(super(),e==null&&(e={}),e.restoreBestWeights)throw new Me("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Rh:this.mode==="max"?this.monitorFunc=Av:this.monitor.indexOf("acc")!==-1?this.monitorFunc=Av:this.monitorFunc=Rh,this.monitorFunc===Rh&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Rh?1/0:-1/0}async onEpochEnd(e,t){await va(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function NV(e){return new dS(e)}var TV={earlyStopping:NV},_V=q();_V.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var ur;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"})(ur||(ur={}));var Rv;(function(e){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(Rv||(Rv={}));var hx={};function CV(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};hx[e]=n}function cS(e){return hx[e]}function EV(e){delete hx[e]}function k(e,t,n,r,a){let s=t.inputParams[e];if(s&&s.inputIndexStart!==void 0){let o=s.inputIndexStart,l=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?o+1:s.inputIndexEnd;if(s.type==="tensor")return un(t.inputNames[s.inputIndexStart],n,r,a);if(s.type==="tensors")return t.inputNames.slice(o,l).map(h=>un(h,n,r,a));let p=un(t.inputNames.slice(o)[0],n,r,a),u=p.dataSync();return s.type==="number"?u[0]:v.toNestedArray(p.shape,u)}let i=t.attrParams[e];return i&&i.value}function un(e,t,n,r){let[a,s]=zn(e);if(r!=null){let o=r.getHashTableHandleByName(a);if(o!=null)return o}let i=n.currentContextIds.find(o=>!!t[wd(a,o)]);return i!==void 0?t[wd(a,i)][s]:void 0}function $V(e,t,n){return t[wd(e,n.currentContextId)]}function Lr(e,t){let[n,r,a]=zn(e);return[wd(n,t&&t.currentContextId),r,a]}function wd(e,t){return t?`${e}-${t}`:e}function zn(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let n=t[0],r=t.length===3?t[1]:void 0,a=Number(t[t.length-1]);return[n,a,r]}function Hh(e,t,n){let r=k("pad",e,t,n);if(r==="explicit"){r=k("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)a[s][0]=r[s*2],a[s][1]=r[s*2+1];return a}return r}function aa(e){return e.kept?e:Pr(e)}var fS={};Ee(fS,{json:()=>AV});var AV=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],mS={};Ee(mS,{json:()=>RV});var RV=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],gS={};Ee(gS,{json:()=>FV});var FV=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],yS={};Ee(yS,{json:()=>MV});var MV=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],bS={};Ee(bS,{json:()=>DV});var DV=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],xS={};Ee(xS,{json:()=>OV});var OV=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],wS={};Ee(wS,{json:()=>LV});var LV=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],vS={};Ee(vS,{json:()=>zV});var zV=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],kS={};Ee(kS,{json:()=>PV});var PV=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],IS={};Ee(IS,{json:()=>BV});var BV=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],SS={};Ee(SS,{json:()=>WV});var WV=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],NS={};Ee(NS,{json:()=>VV});var VV=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],TS={};Ee(TS,{json:()=>UV});var UV=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],_S={};Ee(_S,{json:()=>GV});var GV=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],CS={};Ee(CS,{json:()=>HV});var HV=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],ES={};Ee(ES,{json:()=>qV});var qV=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],$S={};Ee($S,{json:()=>jV});var jV=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],AS={};Ee(AS,{json:()=>KV});var KV=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],RS={};Ee(RS,{json:()=>XV});var XV=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],Fv=class{constructor(){let e=[fS,mS,gS,yS,bS,xS,wS,vS,kS,IS,SS,NS,TS,_S,CS,ES,$S,AS,RS],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,r)=>(n[r.tfOpName]=r,n),{})}static get Instance(){return this._instance||(this._instance=new this)}transformGraph(e,t={}){let n=e.node,r=[],a=[],s=[],i=n.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?r.push(f[m.name]):m.op==="Const"?a.push(f[m.name]):(m.input==null||m.input.length===0)&&s.push(f[m.name]),f),{}),o=[],l=[],p={},u={};t!=null&&(p=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));let h=Object.keys(i);h.forEach(f=>{let m=i[f];m.inputNames.forEach((g,y)=>{let[b,,x]=Lr(g),w=i[b];if(w.outputs!=null){let I=w.outputs.indexOf(x);if(I!==-1){let N=`${b}:${I}`;m.inputNames[y]=N}}m.inputs.push(w),w.children.push(m)})}),Object.keys(u).length===0?h.forEach(f=>{let m=i[f];m.children.length===0&&l.push(m)}):Object.keys(u).forEach(f=>{let[m]=Lr(f),g=i[m];g!=null&&(g.signatureKey=u[f],l.push(g))}),Object.keys(p).length>0?Object.keys(p).forEach(f=>{let[m]=Lr(f),g=i[m];g&&(g.signatureKey=p[f],o.push(g))}):o=r;let d={};e.library!=null&&e.library.function!=null&&(d=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:d};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=cS(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((r,a)=>(r[a.name]={type:a.type,inputIndexStart:a.start,inputIndexEnd:a.end},r),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((r,a)=>{let s=a.type,i;switch(a.type){case"string":i=Am(e.attr,a.tfName,a.defaultValue),i===void 0&&!!a.tfDeprecatedName&&(i=Am(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"string[]":i=zm(e.attr,a.tfName,a.defaultValue),i===void 0&&!!a.tfDeprecatedName&&(i=zm(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number":i=Fm(e.attr,a.tfName,a.defaultValue||0),i===void 0&&!!a.tfDeprecatedName&&(i=Fm(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number[]":i=Lm(e.attr,a.tfName,a.defaultValue),i===void 0&&!!a.tfDeprecatedName&&(i=Lm(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool":i=Rm(e.attr,a.tfName,a.defaultValue),i===void 0&&!!a.tfDeprecatedName&&(i=Rm(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool[]":i=Bm(e.attr,a.tfName,a.defaultValue),i===void 0&&!!a.tfDeprecatedName&&(i=Bm(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape":i=Om(e.attr,a.tfName,a.defaultValue),i===void 0&&!!a.tfDeprecatedName&&(i=Om(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape[]":i=Pm(e.attr,a.tfName,a.defaultValue),i===void 0&&!!a.tfDeprecatedName&&(i=Pm(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype":i=Mm(e.attr,a.tfName,a.defaultValue),i===void 0&&!!a.tfDeprecatedName&&(i=Mm(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype[]":i=Dm(e.attr,a.tfName,a.defaultValue),i===void 0&&!!a.tfDeprecatedName&&(i=Dm(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"func":i=Mv(e.attr,a.tfName,a.defaultValue),i===void 0&&!!a.tfDeprecatedName&&(i=Mv(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${a.type} for op: ${e.op}`)}return r[a.name]={value:i,type:s},r},{})),n}mapFunction(e){let t=e.nodeDef,n=[],r=[],a={};t!=null&&(a=t.reduce((p,u)=>(p[u.name]=this.mapNode(u),u.op==="Const"&&r.push(p[u.name]),p),{}));let s=[],i=[];e.signature.inputArg.forEach(p=>{let[u]=Lr(p.name),h={name:u,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:dx(p.type),type:"dtype"}},children:[]};h.signatureKey=p.name,s.push(h),a[u]=h}),Object.keys(a).forEach(p=>{let u=a[p];u.inputNames.forEach((h,d)=>{let[c,,f]=Lr(h),m=a[c];if(m.outputs!=null){let g=m.outputs.indexOf(f);if(g!==-1){let y=`${c}:${g}`;u.inputNames[d]=y}}u.inputs.push(m),m.children.push(u)})});let o=e.ret;e.signature.outputArg.forEach(p=>{let[u,h]=Lr(o[p.name]),d=a[u];d!=null&&(d.defaultOutput=h,i.push(d))});let l=this.mapArgsToSignature(e);return{nodes:a,inputs:s,outputs:i,weights:r,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function ZV(e){let t=q().global;if(typeof t.atob<"u")return t.atob(e);if(typeof Buffer<"u")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function FS(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):ZV(e);return t?n:n.toLowerCase()}function Am(e,t,n,r=!1){let a=e[t];return a!=null?FS(a.s,r):n}function Rm(e,t,n){let r=e[t];return r?r.b:n}function Fm(e,t,n){let r=e[t]||{},a=r.i!=null?r.i:r.f!=null?r.f:n;return typeof a=="number"?a:parseInt(a,10)}function dx(e){switch(typeof e=="string"&&(e=ur[e]),e){case ur.DT_FLOAT:case ur.DT_HALF:return"float32";case ur.DT_INT32:case ur.DT_INT64:case ur.DT_INT8:case ur.DT_UINT8:return"int32";case ur.DT_BOOL:return"bool";case ur.DT_DOUBLE:return"float32";case ur.DT_STRING:return"string";default:return null}}function Mv(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function Mm(e,t,n){let r=e[t];return r&&r.type?dx(r.type):n}function Dm(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map(a=>dx(a)):n}function MS(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function Om(e,t,n){let r=e[t];return r&&r.shape?MS(r.shape):n}function Lm(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(a=>typeof a=="number"?a:parseInt(a,10)):n}function zm(e,t,n,r=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map(s=>FS(s,r)):n}function Pm(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(a=>MS(a)):n}function Bm(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var YV=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,a)=>(r[a]=this.getAttr(a),r),{}))}getInput(e){return un(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return un(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return Fm(this.node.rawAttrs,e,t);if(n.s!=null)return Am(this.node.rawAttrs,e,t);if(n.b!=null)return Rm(this.node.rawAttrs,e,t);if(n.shape!=null)return Om(this.node.rawAttrs,e,t);if(n.type!=null)return Mm(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return Lm(this.node.rawAttrs,e,t);if(n.list.s!=null)return zm(this.node.rawAttrs,e,t);if(n.list.shape!=null)return Pm(this.node.rawAttrs,e,t);if(n.list.b!=null)return Bm(this.node.rawAttrs,e,t);if(n.list.type!=null)return Dm(this.node.rawAttrs,e,t)}return t}},Qt={};Ee(Qt,{OP_SCOPE_SUFFIX:()=>xg,abs:()=>_t,acos:()=>Rg,acosh:()=>Fg,add:()=>Y,addN:()=>B1,all:()=>kc,any:()=>Ku,argMax:()=>Fs,argMin:()=>Mg,asin:()=>Dg,asinh:()=>Og,atan:()=>Lg,atan2:()=>zg,atanh:()=>Pg,avgPool:()=>da,avgPool3d:()=>Wg,basicLSTMCell:()=>G1,batchNorm:()=>Wi,batchNorm2d:()=>Vg,batchNorm3d:()=>Ug,batchNorm4d:()=>Gg,batchToSpaceND:()=>Fp,bincount:()=>Hg,booleanMaskAsync:()=>Tk,broadcastArgs:()=>H1,broadcastTo:()=>ks,buffer:()=>Le,cast:()=>ie,ceil:()=>qg,clipByValue:()=>an,clone:()=>Pr,complex:()=>pa,concat:()=>nt,concat1d:()=>jg,concat2d:()=>Kg,concat3d:()=>Xg,concat4d:()=>Zg,conv1d:()=>Ic,conv2d:()=>hn,conv2dTranspose:()=>Sc,conv3d:()=>Jg,conv3dTranspose:()=>Qg,cos:()=>Mp,cosh:()=>Nc,cosineWindow:()=>qc,cumprod:()=>Xu,cumsum:()=>Tc,denseBincount:()=>pd,depthToSpace:()=>ey,depthwiseConv2d:()=>Vi,diag:()=>j1,dilation2d:()=>ty,div:()=>me,divNoNan:()=>ny,dot:()=>ry,dropout:()=>$y,einsum:()=>K1,elu:()=>ql,enclosingPowerOfTwo:()=>Ay,equal:()=>Gn,erf:()=>ay,euclideanNorm:()=>oy,exp:()=>dn,expandDims:()=>Xt,expm1:()=>ly,eye:()=>_c,fft:()=>Vp,fill:()=>Vn,floor:()=>Kl,floorDiv:()=>vc,fused:()=>Eo,gather:()=>Xl,gatherND:()=>$k,greater:()=>yn,greaterEqual:()=>ca,ifft:()=>Co,imag:()=>$p,image:()=>zr,inTopKAsync:()=>Ak,irfft:()=>Vc,isFinite:()=>uy,isInf:()=>py,isNaN:()=>hy,leakyRelu:()=>Dp,less:()=>Cc,lessEqual:()=>Xa,linalg:()=>My,linspace:()=>Q1,localResponseNormalization:()=>dy,log:()=>Hn,log1p:()=>Op,logSigmoid:()=>cy,logSoftmax:()=>$c,logSumExp:()=>Ac,logicalAnd:()=>mr,logicalNot:()=>Lp,logicalOr:()=>Rc,logicalXor:()=>fy,losses:()=>Uk,lowerBound:()=>tk,matMul:()=>Oe,max:()=>nr,maxPool:()=>zt,maxPool3d:()=>my,maxPoolWithArgmax:()=>nk,maximum:()=>qr,mean:()=>yt,meshgrid:()=>rk,min:()=>No,minimum:()=>Zl,mirrorPad:()=>gy,mod:()=>yy,moments:()=>zp,movingAverage:()=>_k,mul:()=>z,multiRNNCell:()=>ak,multinomial:()=>sk,neg:()=>dt,norm:()=>jl,notEqual:()=>Os,oneHot:()=>Io,ones:()=>Wn,onesLike:()=>qn,op:()=>L,outerProduct:()=>ik,pad:()=>Er,pad1d:()=>ok,pad2d:()=>lk,pad3d:()=>uk,pad4d:()=>pk,pool:()=>by,pow:()=>ha,prelu:()=>Bp,print:()=>Ig,prod:()=>xy,raggedGather:()=>hk,raggedRange:()=>dk,raggedTensorToTensor:()=>ck,rand:()=>fk,randomGamma:()=>mk,randomNormal:()=>Mc,randomStandardNormal:()=>gk,randomUniform:()=>Yl,range:()=>To,real:()=>So,reciprocal:()=>ky,relu:()=>Je,relu6:()=>Dc,reshape:()=>P,reverse:()=>ar,reverse1d:()=>yk,reverse2d:()=>bk,reverse3d:()=>xk,reverse4d:()=>wk,rfft:()=>Up,round:()=>Oc,rsqrt:()=>Lc,scalar:()=>ve,scatterND:()=>Ck,searchSorted:()=>Fc,selu:()=>zc,separableConv2d:()=>Jl,setdiff1dAsync:()=>vk,sigmoid:()=>fr,sign:()=>Iy,signal:()=>Vk,sin:()=>Pc,sinh:()=>Bc,slice:()=>We,slice1d:()=>Wp,slice2d:()=>Wc,slice3d:()=>Ql,slice4d:()=>_o,softmax:()=>Za,softplus:()=>Ui,spaceToBatchND:()=>Pp,sparse:()=>Gk,sparseToDense:()=>Ek,spectral:()=>Wk,split:()=>_n,sqrt:()=>Jt,square:()=>tt,squaredDifference:()=>Uc,squeeze:()=>Ya,stack:()=>Vt,step:()=>Gi,stridedSlice:()=>Sy,string:()=>Hk,sub:()=>pe,sum:()=>ye,tan:()=>Ny,tanh:()=>Ms,tensor:()=>Tn,tensor1d:()=>Ye,tensor2d:()=>Br,tensor3d:()=>wc,tensor4d:()=>Fa,tensor5d:()=>kk,tensor6d:()=>Ik,tile:()=>Bn,topk:()=>Ty,transpose:()=>Fe,truncatedNormal:()=>Gc,unique:()=>_y,unsortedSegmentSum:()=>Hc,unstack:()=>St,upperBound:()=>Sk,variable:()=>Cy,where:()=>sn,whereAsync:()=>Ey,zeros:()=>bt,zerosLike:()=>Ue});var JV=(e,t,n,r=Qt)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(k("a",e,t,n),k("b",e,t,n))];case"AddN":return[r.addN(k("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(k("a",e,t,n),k("b",e,t,n))];case"Mul":return[r.mul(k("a",e,t,n),k("b",e,t,n))];case"RealDiv":case"Div":return[r.div(k("a",e,t,n),k("b",e,t,n))];case"DivNoNan":return[r.divNoNan(k("a",e,t,n),k("b",e,t,n))];case"FloorDiv":return[r.floorDiv(k("a",e,t,n),k("b",e,t,n))];case"Sub":return[r.sub(k("a",e,t,n),k("b",e,t,n))];case"Minimum":return[r.minimum(k("a",e,t,n),k("b",e,t,n))];case"Maximum":return[r.maximum(k("a",e,t,n),k("b",e,t,n))];case"Pow":return[r.pow(k("a",e,t,n),k("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},QV=(e,t,n,r=Qt)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(k("x",e,t,n))];case"Acos":return[r.acos(k("x",e,t,n))];case"Acosh":return[r.acosh(k("x",e,t,n))];case"Asin":return[r.asin(k("x",e,t,n))];case"Asinh":return[r.asinh(k("x",e,t,n))];case"Atan":return[r.atan(k("x",e,t,n))];case"Atan2":return[r.atan2(k("x",e,t,n),k("y",e,t,n))];case"Atanh":return[r.atanh(k("x",e,t,n))];case"Ceil":return[r.ceil(k("x",e,t,n))];case"Complex":return[r.complex(k("real",e,t,n),k("imag",e,t,n))];case"Cos":return[r.cos(k("x",e,t,n))];case"Cosh":return[r.cosh(k("x",e,t,n))];case"Elu":return[r.elu(k("x",e,t,n))];case"Erf":return[r.erf(k("x",e,t,n))];case"Exp":return[r.exp(k("x",e,t,n))];case"Expm1":return[r.expm1(k("x",e,t,n))];case"Floor":return[r.floor(k("x",e,t,n))];case"Log":return[r.log(k("x",e,t,n))];case"Log1p":return[r.log1p(k("x",e,t,n))];case"Imag":return[r.imag(k("x",e,t,n))];case"Neg":return[r.neg(k("x",e,t,n))];case"Reciprocal":return[r.reciprocal(k("x",e,t,n))];case"Real":return[r.real(k("x",e,t,n))];case"Relu":return[r.relu(k("x",e,t,n))];case"Round":return[r.round(k("x",e,t,n))];case"Selu":return[r.selu(k("x",e,t,n))];case"Sigmoid":return[r.sigmoid(k("x",e,t,n))];case"Sin":return[r.sin(k("x",e,t,n))];case"Sign":return[r.sign(k("x",e,t,n))];case"Sinh":return[r.sinh(k("x",e,t,n))];case"Softplus":return[r.softplus(k("x",e,t,n))];case"Sqrt":return[r.sqrt(k("x",e,t,n))];case"Square":return[r.square(k("x",e,t,n))];case"Tanh":return[r.tanh(k("x",e,t,n))];case"Tan":return[r.tan(k("x",e,t,n))];case"ClipByValue":return[r.clipByValue(k("x",e,t,n),k("clipValueMin",e,t,n),k("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(k("x",e,t,n))];case"Rsqrt":return[r.rsqrt(un(e.inputNames[0],t,n))];case"Prod":return[r.prod(k("x",e,t,n),k("axes",e,t,n))];case"LeakyRelu":return[r.leakyRelu(k("x",e,t,n),k("alpha",e,t,n))];case"Prelu":return[r.prelu(k("x",e,t,n),k("alpha",e,t,n))];case"IsNan":return[r.isNaN(un(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function dr(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){v.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){let a=e[r],s=t[r];v.assert(a<0||s<0||a===s,()=>n+` Shapes ${e} and ${t} must match`)}}}function Dv(e){return!(typeof e=="number"||e.some(t=>t<0))}function Su(e,t,n){let r=Wm(e,n),a=!Dv(r);if(a&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach(s=>{r=Wm(s.shape,r)}),!Dv(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Wm(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var eU=class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=ve(0),Bt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),dr(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Bt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,r)=>this.write(n,t[r]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return Tn([],[0].concat(this.elementShape));let n=this.readMany(e);return dr(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Vt(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Tn([],[0].concat(this.elementShape));let t=[];for(let r=0;r<this.size();r++)t.push(r);let n=this.readMany(t);return dr(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),nt(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,St(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map(o=>(n+=o,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=n===0?0:t.size/n,s=[];B(()=>{t=P(t,[1,n,a]);for(let o=0;o<e.length;++o){let l=o===0?0:r[o-1],p=[0,l,0],u=[1,e[o],a];s[o]=P(We(t,p,u),this.elementShape)}return s});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}},Fo=class{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(a=>{if(n!==a.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${a.dtype}`);dr(t,a.shape,"TensorList shape mismatch: "),Bt(a)}),this.idTensor=ve(0),this.maxNumElements=r,Bt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Fo([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);dr(e,this.elementShape,"TensorList shape mismatch: ");let r=Su(this.elementShape,this.tensors,e);return B(()=>{let a=this.tensors.map(s=>P(s,r));return Vt(a,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=Su(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,dr(r.shape,e,"TensorList shape mismatch: "),P(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(dr(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Bt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new Fo([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);dr(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=Su(this.elementShape,this.tensors,t);return P(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);dr(this.elementShape,t.shape,"TensorList shape mismatch: "),Bt(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);dr(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=Su(this.elementShape,this.tensors,n);return e.length===0?Tn([],[0].concat(r)):B(()=>{let a=e.map(s=>P(this.tensors[s],r));return Vt(a,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);dr(this.elementShape,t,"TensorList shape mismatch: ");let n=Su(this.elementShape,this.tensors,t);return this.size()===0?Tn([],[0].concat(n)):B(()=>{let r=this.tensors.map(a=>P(a,n));return nt(r,0)})}};function tU(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let a=e.shape.slice(1);dr(a,t,"TensorList shape mismatch: ");let s=St(e);return new Fo(s,t,r)}function nU(e,t,n,r){return new Fo([],e,t,r)}function rU(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(r!=null&&r!==-1&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new Fo([],n,e.dtype,r),i=St(e,0);return t.forEach((o,l)=>{s.setItem(o,i[l])}),s}function aU(e,t,n){let r=0,a=t.map(u=>(r+=u,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${e.shape}`);let s=e.shape.slice(1),i=Wm(s,n),o=r===0?0:e.size/r,l=B(()=>{let u=[];e=P(e,[1,r,o]);for(let h=0;h<t.length;++h){let d=h===0?0:a[h-1],c=[0,d,0],f=[1,t[h],o];u[h]=P(We(e,c,f),i)}return e.dispose(),u}),p=new Fo([],n,e.dtype,t.length);for(let u=0;u<l.length;u++)p.setItem(u,l[u]);return p}var sU=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=k("thenBranch",e,t,n),a=k("elseBranch",e,t,n),s=k("cond",e,t,n),i=k("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=k("body",e,t,n),a=k("cond",e,t,n),s=k("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map(u=>u.id),l=await i[0].data();i.forEach(u=>{!u.kept&&o.indexOf(u.id)===-1&&u.dispose()});let p=s;for(;l[0];){let u=p;p=await n.functionMap[r].executeFunctionAsync(p,n.tensorArrayMap,n.tensorListMap);let h=p.map(c=>c.id);u.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&h.indexOf(c.id)===-1&&c.dispose()});let d=await n.functionMap[a].executeFunctionAsync(p,n.tensorArrayMap,n.tensorListMap);l=await d[0].data(),d.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&h.indexOf(c.id)===-1&&c.dispose()})}return p}case"LoopCond":{let r=k("pred",e,t,n);return[aa(r)]}case"Switch":{let r=k("pred",e,t,n),a=k("data",e,t,n);return a.kept||(a=aa(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find(a=>un(a,t,n)!==void 0);if(r){let a=un(r,t,n);return[aa(a)]}return}case"Enter":{let r=k("frameName",e,t,n),a=k("tensor",e,t,n);return n.enterFrame(r),[aa(a)]}case"Exit":{let r=k("tensor",e,t,n);return n.exitFrame(),[aa(r)]}case"NextIteration":{let r=k("tensor",e,t,n);return n.nextIteration(),[aa(r)]}case"TensorArrayV3":{let r=k("size",e,t,n),a=k("dtype",e,t,n),s=k("elementShape",e,t,n),i=k("dynamicSize",e,t,n),o=k("clearAfterRead",e,t,n),l=k("identicalElementShapes",e,t,n),p=k("name",e,t,n),u=new eU(p,a,r,s,l,i,o);return n.addTensorArray(u),[u.idTensor,ve(1)]}case"TensorArrayWriteV3":{let r=k("tensorArrayId",e,t,n),a=k("index",e,t,n),s=k("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=k("tensorArrayId",e,t,n),a=k("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=k("tensorArrayId",e,t,n),a=k("indices",e,t,n),s=k("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=k("tensorArrayId",e,t,n),a=k("indices",e,t,n),s=k("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=k("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=k("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=k("tensorArrayId",e,t,n),a=k("tensor",e,t,n),s=k("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=k("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[ve(a.size(),"int32")]}case"TensorArrayCloseV3":{let r=k("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=k("tensorListId",e,t,n),a=k("index",e,t,n),s=k("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=k("tensorListId",e,t,n),a=k("index",e,t,n),s=k("elementShape",e,t,n),i=k("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=k("indices",e,t,n),a=k("tensor",e,t,n),s=k("elementShape",e,t,n),i=k("numElements",e,t,n),o=rU(a,r,s,i);return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r=k("elementShape",e,t,n),a=k("elementDType",e,t,n),s;e.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=k(s,e,t,n),o=e.op==="TensorListReserve"?-1:i,l=nU(r,a,i,o);return n.addTensorList(l),[l.idTensor]}case"TensorListGather":{let r=k("tensorListId",e,t,n),a=k("indices",e,t,n),s=k("elementShape",e,t,n),i=k("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=k("tensorListId",e,t,n),a=k("elementShape",e,t,n),s=k("elementDType",e,t,n),i=k("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=k("tensor",e,t,n),a=k("elementShape",e,t,n),s=k("elementDType",e,t,n),i=tU(r,a,s);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let r=k("tensorListId",e,t,n),a=n.getTensorList(r.id),s=k("dtype",e,t,n),i=k("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=k("tensorListId",e,t,n),a=k("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=k("tensorListId",e,t,n),a=k("elementShape",e,t,n),s=k("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=k("tensor",e,t,n),a=k("elementShape",e,t,n),s=k("lengths",e,t,n),i=aU(r,s,a);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{let r=k("tensorListId",e,t,n),a=n.getTensorList(r.id);return[ve(a.size(),"int32")]}case"TensorListResize":{let r=k("tensorListId",e,t,n),a=k("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Ov(e,t,n){let[r,a]=k("fusedOps",e,t,n),s=r==="biasadd",i=!s,o=a==="prelu",l=r==="fusedbatchnorm",p=k("numArgs",e,t,n);if(s){if(o&&p!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&p!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let u=k("strides",e,t,n),h=Hh(e,t,n),d=k("dataFormat",e,t,n).toUpperCase(),c=k("dilations",e,t,n),[f,m]=k("args",e,t,n);i&&(m=f,f=void 0);let g=k("leakyreluAlpha",e,t,n);return{stride:u,pad:h,dataFormat:d,dilations:c,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:g}}var iU=(e,t,n,r=Qt)=>{switch(e.op){case"Conv1D":{let a=k("stride",e,t,n),s=k("pad",e,t,n),i=k("dataFormat",e,t,n).toUpperCase(),o=k("dilation",e,t,n);return[r.conv1d(k("x",e,t,n),k("filter",e,t,n),a,s,i,o)]}case"Conv2D":{let a=k("strides",e,t,n),s=Hh(e,t,n),i=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[r.conv2d(k("x",e,t,n),k("filter",e,t,n),[a[1],a[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:p,activationFunc:u,leakyreluAlpha:h}=Ov(e,t,n);return[r.fused.conv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:u,preluActivationWeights:p,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:p,activationFunc:u,leakyreluAlpha:h}=Ov(e,t,n);return[r.fused.depthwiseConv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:u,preluActivationWeights:p,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=k("outputShape",e,t,n),s=k("strides",e,t,n),i=Hh(e,t,n);return[r.conv2dTranspose(k("x",e,t,n),k("filter",e,t,n),a,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=k("strides",e,t,n),s=Hh(e,t,n),i=k("dilations",e,t,n),o=k("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(k("input",e,t,n),k("filter",e,t,n),[a[1],a[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[r.conv3d(k("x",e,t,n),k("filter",e,t,n),[a[1],a[2],a[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.avgPool(k("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPool":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.maxPool(k("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n),o=k("includeBatchInIndex",e,t,n),{result:l,indexes:p}=r.maxPoolWithArgmax(k("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s,o);return[l,p]}case"AvgPool3D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.avgPool3d(k("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.maxPool3d(k("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("dilations",e,t,n),o=a[1],l=a[2],p=i[1],u=i[2];return[r.dilation2d(k("x",e,t,n),k("filter",e,t,n),[o,l],s,[p,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},oU=(e,t,n,r=Qt)=>{switch(e.op){case"Fill":{let a=k("shape",e,t,n),s=k("dtype",e,t,n),i=k("value",e,t,n);return[r.fill(a,i,s)]}case"LinSpace":{let a=k("start",e,t,n),s=k("stop",e,t,n),i=k("num",e,t,n);return[r.linspace(a,s,i)]}case"Multinomial":{let a=k("logits",e,t,n),s=k("numSamples",e,t,n),i=k("seed",e,t,n);return[r.multinomial(a,s,i)]}case"OneHot":{let a=k("indices",e,t,n),s=k("depth",e,t,n),i=k("onValue",e,t,n),o=k("offValue",e,t,n),l=k("dtype",e,t,n);return[r.oneHot(a,s,i,o,l)]}case"Ones":return[r.ones(k("shape",e,t,n),k("dtype",e,t,n))];case"OnesLike":return[r.onesLike(k("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(k("shape",e,t,n),k("dtype",e,t,n),k("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(k("shape",e,t,n),k("minval",e,t,n),k("maxval",e,t,n),k("dtype",e,t,n))];case"Range":{let a=k("start",e,t,n),s=k("stop",e,t,n),i=k("step",e,t,n);return[r.range(a,s,i,k("dtype",e,t,n))]}case"TruncatedNormal":{let a=k("shape",e,t,n),s=k("mean",e,t,n),i=k("stdDev",e,t,n),o=k("seed",e,t,n);return[r.truncatedNormal(a,s,i,k("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(k("shape",e,t,n),k("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Xf(e,t,n){let r=k("boxes",e,t,n),a=k("scores",e,t,n),s=k("maxOutputSize",e,t,n),i=k("iouThreshold",e,t,n),o=k("scoreThreshold",e,t,n),l=k("softNmsSigma",e,t,n);return{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}}var lU=async(e,t,n,r,a=Qt)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:p,softNmsSigma:u}=Xf(e,t,n),h=await a.image.nonMaxSuppressionWithScoreAsync(s,i,o,l,p,u);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:p}=Xf(e,t,n),u=k("padToMaxOutputSize",e,t,n),h=await a.image.nonMaxSuppressionPaddedAsync(s,i,o,l,p,u);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:p}=Xf(e,t,n);return[await a.image.nonMaxSuppressionAsync(s,i,o,l,p)]}case"Where":{let s=a.cast(k("condition",e,t,n),"bool"),i=[await a.whereAsync(s)];return s.dispose(),i}case"ListDiff":return a.setdiff1dAsync(k("x",e,t,n),k("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},uU=(e,t,n,r=Qt)=>{switch(e.op){case"LowerBound":{let a=k("sortedSequence",e,t,n),s=k("values",e,t,n);return[r.lowerBound(a,s)]}case"TopKV2":{let a=k("x",e,t,n),s=k("k",e,t,n),i=k("sorted",e,t,n),o=r.topk(a,s,i);return[o.values,o.indices]}case"UpperBound":{let a=k("sortedSequence",e,t,n),s=k("values",e,t,n);return[r.upperBound(a,s)]}case"Unique":{let a=k("x",e,t,n),s=r.unique(a);return[s.values,s.indices]}case"UniqueV2":{let a=k("x",e,t,n),s=k("axis",e,t,n),i=r.unique(a,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},pU=(e,t,n,r=Qt)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=k("default",e,t,n);return[un(e.name,t,n)||a];case"Placeholder":return[un(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let u=k("x",e,t,n);return[aa(u)]}case"IdentityN":return k("x",e,t,n).map(u=>aa(u));case"Snapshot":let s=k("x",e,t,n);return[aa(s)];case"Shape":return[r.tensor1d(k("x",e,t,n).shape,"int32")];case"ShapeN":return k("x",e,t,n).map(u=>r.tensor1d(u.shape));case"Size":return[r.scalar(k("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(k("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":let i=k("x",e,t,n),o=k("data",e,t,n),l=k("message",e,t,n),p=k("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let u=0;u<o.length;u++)console.log(Array.prototype.slice.call(o[u].dataSync()).slice(0,p));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}},hU=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ve(0),this.tensorMap=new Map,Bt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ve(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),B(()=>{let r=St(t),a=n.length,s=r.length;v.assert(a===s,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${s} elements.`);for(let i=0;i<a;i++){let o=n[i],l=r[i];Bt(l),this.tensorMap.set(o,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return B(()=>{let r=[];for(let a=0;a<n.length;a++){let s=n[a],i=this.findWithDefault(s,t);r.push(i)}return Vt(r)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},dU=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=r.getHashTableHandleByName(e.name);if(a!=null)return[a];{let s=k("keyDType",e,t,n),i=k("valueDType",e,t,n),o=new hU(s,i);return r.addHashTable(e.name,o),[o.handle]}}case"LookupTableImport":case"LookupTableImportV2":{let a=k("tableHandle",e,t,n,r),s=k("keys",e,t,n),i=k("values",e,t,n);return[await r.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=k("tableHandle",e,t,n,r),s=k("keys",e,t,n),i=k("defaultValue",e,t,n);return[await r.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=k("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},cU=(e,t,n,r=Qt)=>{switch(e.op){case"ResizeBilinear":{let a=k("images",e,t,n),s=k("size",e,t,n),i=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let a=k("images",e,t,n),s=k("size",e,t,n),i=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[s[0],s[1]],i,o)]}case"CropAndResize":{let a=k("image",e,t,n),s=k("boxes",e,t,n),i=k("boxInd",e,t,n),o=k("cropSize",e,t,n),l=k("method",e,t,n),p=k("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,s,i,o,l,p)]}case"ImageProjectiveTransformV3":{let a=k("images",e,t,n),s=k("transforms",e,t,n),i=k("outputShape",e,t,n),o=k("fillValue",e,t,n),l=k("interpolation",e,t,n),p=k("fillMode",e,t,n);return[r.image.transform(a,s,l.toLowerCase(),p.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},fU=(e,t,n,r=Qt)=>{switch(e.op){case"Equal":return[r.equal(k("a",e,t,n),k("b",e,t,n))];case"NotEqual":return[r.notEqual(k("a",e,t,n),k("b",e,t,n))];case"Greater":return[r.greater(k("a",e,t,n),k("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(k("a",e,t,n),k("b",e,t,n))];case"Less":return[r.less(k("a",e,t,n),k("b",e,t,n))];case"LessEqual":return[r.lessEqual(k("a",e,t,n),k("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(k("a",e,t,n),k("b",e,t,n))];case"LogicalNot":return[r.logicalNot(k("a",e,t,n))];case"LogicalOr":return[r.logicalOr(k("a",e,t,n),k("b",e,t,n))];case"Select":case"SelectV2":return[r.where(k("condition",e,t,n),k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},mU=(e,t,n,r=Qt)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(k("a",e,t,n),k("b",e,t,n),k("transposeA",e,t,n),k("transposeB",e,t,n))];case"Einsum":return[r.einsum(k("equation",e,t,n),...k("tensors",e,t,n))];case"Transpose":return[r.transpose(k("x",e,t,n),k("perm",e,t,n))];case"_FusedMatMul":let[a,s]=k("fusedOps",e,t,n),i=a==="biasadd",o=s==="prelu",l=k("numArgs",e,t,n),p=k("leakyreluAlpha",e,t,n);if(i){if(o&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,h]=k("args",e,t,n);return[r.fused.matMul({a:k("a",e,t,n),b:k("b",e,t,n),transposeA:k("transposeA",e,t,n),transposeB:k("transposeB",e,t,n),bias:u,activation:s,preluActivationWeights:h,leakyreluAlpha:p})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},gU=(e,t,n,r=Qt)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(k("x",e,t,n),k("axis",e,t,n),k("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(k("x",e,t,n),k("mean",e,t,n),k("variance",e,t,n),k("offset",e,t,n),k("scale",e,t,n),k("epsilon",e,t,n))];case"FusedBatchNormV3":return[r.batchNorm(k("x",e,t,n),k("mean",e,t,n),k("variance",e,t,n),k("offset",e,t,n),k("scale",e,t,n),k("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(k("x",e,t,n),k("radius",e,t,n),k("bias",e,t,n),k("alpha",e,t,n),k("beta",e,t,n))];case"Softmax":return[r.softmax(k("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(k("x",e,t,n))];case"SparseToDense":return[r.sparseToDense(k("sparseIndices",e,t,n),k("outputShape",e,t,n),k("sparseValues",e,t,n),k("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},yU=(e,t,n,r=Qt)=>{switch(e.op){case"Max":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.max(k("x",e,t,n),o,l)]}case"Mean":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.mean(k("x",e,t,n),o,l)]}case"Min":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.min(k("x",e,t,n),o,l)]}case"Sum":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.sum(k("x",e,t,n),o,l)]}case"All":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.all(k("x",e,t,n),o,l)]}case"Any":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.any(k("x",e,t,n),o,l)]}case"ArgMax":{let o=k("axis",e,t,n);return[r.argMax(k("x",e,t,n),o)]}case"ArgMin":{let o=k("axis",e,t,n);return[r.argMin(k("x",e,t,n),o)]}case"Prod":{let o=k("axis",e,t,n),l=k("keepDims",e,t,n);return[r.prod(k("x",e,t,n),o,l)]}case"Cumprod":{let o=k("axis",e,t,n),l=k("exclusive",e,t,n),p=k("reverse",e,t,n);return[r.cumprod(k("x",e,t,n),o,l,p)]}case"Cumsum":{let o=k("axis",e,t,n),l=k("exclusive",e,t,n),p=k("reverse",e,t,n);return[r.cumsum(k("x",e,t,n),o,l,p)]}case"Bincount":let a=k("x",e,t,n),s=k("weights",e,t,n),i=k("size",e,t,n);return[r.bincount(a,s,i)];case"DenseBincount":{let o=k("x",e,t,n),l=k("weights",e,t,n),p=k("size",e,t,n),u=k("binaryOutput",e,t,n);return[r.denseBincount(o,l,p,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},bU=(e,t,n,r=Qt)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=k("n",e,t,n),s=k("axis",e,t,n),i=k("tensors",e,t,n);return i=i.slice(0,a),[r.concat(i,s)]}case"Gather":{let a=k("x",e,t,n),s=k("indices",e,t,n);return[r.gather(a,r.cast(s,"int32"),0)]}case"GatherV2":{let a=k("axis",e,t,n),s=k("batchDims",e,t,n),i=k("x",e,t,n),o=k("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),a,s)]}case"Reverse":{let a=k("dims",e,t,n),s=[];for(let o=0;o<a.length;o++)a[o]&&s.push(o);let i=k("x",e,t,n);return[r.reverse(i,s)]}case"ReverseV2":{let a=k("axis",e,t,n),s=k("x",e,t,n);return[r.reverse(s,a)]}case"Slice":{let a=k("begin",e,t,n),s=k("size",e,t,n);return[r.slice(k("x",e,t,n),a,s)]}case"StridedSlice":{let a=k("begin",e,t,n),s=k("end",e,t,n),i=k("strides",e,t,n),o=k("beginMask",e,t,n),l=k("endMask",e,t,n),p=k("ellipsisMask",e,t,n),u=k("newAxisMask",e,t,n),h=k("shrinkAxisMask",e,t,n),d=k("x",e,t,n);return[r.stridedSlice(d,a,s,i,o,l,p,u,h)]}case"Pack":return B(()=>{let a=k("axis",e,t,n),s=k("tensors",e,t,n),i=s[0].shape,o=r.squeeze(s[0]).shape,l=s.map(p=>{let u=v.arraysEqual(p.shape,i);if(!u&&!v.arraysEqual(r.squeeze(p).shape,o))throw new Error("the input tensors shape does not match");return u?p:r.reshape(p,i)});return[r.stack(l,a)]});case"Unpack":{let a=k("axis",e,t,n),s=k("tensor",e,t,n);return r.unstack(s,a)}case"Tile":{let a=k("reps",e,t,n);return[r.tile(k("x",e,t,n),a)]}case"Split":case"SplitV":{let a=k("axis",e,t,n),s=k("numOrSizeSplits",e,t,n),i=k("x",e,t,n);return r.split(i,s,a)}case"ScatterNd":{let a=k("indices",e,t,n),s=k("values",e,t,n),i=k("shape",e,t,n);return[r.scatterND(a,s,i)]}case"GatherNd":{let a=k("x",e,t,n),s=k("indices",e,t,n);return[r.gatherND(a,s)]}case"SparseToDense":{let a=k("sparseIndices",e,t,n),s=k("outputShape",e,t,n),i=k("sparseValues",e,t,n),o=k("defaultValue",e,t,n);return[r.sparseToDense(a,i,s,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},xU=(e,t,n,r=Qt)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(k("indices",e,t,n),k("values",e,t,n),k("denseShape",e,t,n),k("defaultValue",e,t,n));return[a,s,i,o]}case"SparseReshape":{let{outputIndices:a,outputShape:s}=r.sparse.sparseReshape(k("inputIndices",e,t,n),k("inputShape",e,t,n),k("newShape",e,t,n));return[a,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},wU=(e,t,n,r=Qt)=>{switch(e.op){case"FFT":return[r.fft(k("x",e,t,n))];case"IFFT":return[r.ifft(k("x",e,t,n))];case"RFFT":return[r.rfft(k("x",e,t,n))];case"IRFFT":return[r.irfft(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},vU=(e,t,n,r=Qt)=>{switch(e.op){case"StringNGrams":{let{nGrams:a,nGramsSplits:s}=r.string.stringNGrams(k("data",e,t,n),k("dataSplits",e,t,n),k("separator",e,t,n),k("nGramWidths",e,t,n),k("leftPad",e,t,n),k("rightPad",e,t,n),k("padWidth",e,t,n),k("preserveShortSequences",e,t,n));return[a,s]}case"StringSplit":{let{indices:a,values:s,shape:i}=r.string.stringSplit(k("input",e,t,n),k("delimiter",e,t,n),k("skipEmpty",e,t,n));return[a,s,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(k("input",e,t,n),k("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},kU=(e,t,n,r=Qt)=>{switch(e.op){case"Cast":return[r.cast(k("x",e,t,n),k("dtype",e,t,n))];case"ExpandDims":{let a=k("axis",e,t,n);return[r.expandDims(k("x",e,t,n),a)]}case"Squeeze":{let a=k("axis",e,t,n);return[r.squeeze(k("x",e,t,n),a)]}case"Reshape":return[r.reshape(k("x",e,t,n),k("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(k("x",e,t,n),k("padding",e,t,n),k("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(k("x",e,t,n),k("padding",e,t,n),k("constantValue",e,t,n))];case"SpaceToBatchND":{let a=k("blockShape",e,t,n),s=k("paddings",e,t,n);return[r.spaceToBatchND(k("x",e,t,n),a,s)]}case"BatchToSpaceND":{let a=k("blockShape",e,t,n),s=k("crops",e,t,n);return[r.batchToSpaceND(k("x",e,t,n),a,s)]}case"DepthToSpace":{let a=k("blockSize",e,t,n),s=k("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(k("x",e,t,n),a,s)]}case"BroadcastTo":return[r.broadcastTo(k("x",e,t,n),k("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(k("s0",e,t,n),k("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Lv(e,t,n,r,a=B){let s=((i,o,l)=>{switch(i.category){case"arithmetic":return a(()=>JV(i,o,l));case"basic_math":return a(()=>QV(i,o,l));case"control":return sU(i,o,l);case"convolution":return a(()=>iU(i,o,l));case"creation":return a(()=>oU(i,o,l));case"dynamic":return lU(i,o,l);case"evaluation":return a(()=>uU(i,o,l));case"image":return a(()=>cU(i,o,l));case"graph":return a(()=>pU(i,o,l));case"logical":return a(()=>fU(i,o,l));case"matrices":return a(()=>mU(i,o,l));case"normalization":return a(()=>gU(i,o,l));case"reduction":return a(()=>yU(i,o,l));case"slice_join":return a(()=>bU(i,o,l));case"sparse":return a(()=>xU(i,o,l));case"spectral":return a(()=>wU(i,o,l));case"string":return a(()=>vU(i,o,l));case"transformation":return a(()=>kU(i,o,l));case"hash_table":return dU(i,o,l,r);case"custom":let p=cS(i.op);if(p&&p.customExecutor)return p.customExecutor(new YV(i,o,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return v.isPromise(s)?s.then(i=>[].concat(i)):[].concat(s)}var zv=class{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function Pv(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,p=Object.keys(e).map(d=>zn(d)[0]),u=[];r!=null&&(u=r.map(d=>zn(d.name)[0]));let h=[...t];for(;h.length>0;){let d=h.pop();if((DS(d)||_U(d)||CU(d))&&i==null&&(i=d,o=i.children.map(c=>c.name).filter(c=>a.has(c))),a.add(d.name),n[d.name]==null&&p.indexOf(d.name)===-1&&u.indexOf(d.name)===-1){if(d.inputs.length===0){s.push(d.name);continue}d.inputs.forEach(c=>{l.has(c.name)||(l.add(c.name),h.push(c))})}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}function IU(e,t,n){let{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map(u=>zn(u)[0]).map(u=>e.nodes[u]),o=e.initNodes;i.forEach(u=>{r.has(u.name)&&s.push(u)}),e.weights.forEach(u=>{r.has(u.name)&&s.push(u)}),o!=null&&o.forEach(u=>{r.has(u.name)&&s.push(u)});let l=new Set,p=[];for(;s.length>0;){let u=s.pop();l.add(u.name),t[u.name]||p.push(u),u.children.forEach(h=>{!l.has(h.name)&&r.has(h.name)&&h.inputs.every(d=>l.has(d.name))&&s.push(h)})}return p}var SU=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],NU=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],TU=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function DS(e){return SU.indexOf(e.op)>=0}function _U(e){return NU.indexOf(e.op)>=0}function CU(e){return TU.indexOf(e.op)>=0}var Vm=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new Vm(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(a=>a.name).sort(),r=t.map(a=>a.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){let n=Pv(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(a!=null)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){let i=t.map(l=>l.name),o=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${o}]. Missing the following inputs: [${r}]`)}return IU(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map(u=>this.graph.nodes[zn(u)[0]]),a=t.map(u=>zn(u)[0]),s=a.map(u=>this.graph.nodes[u]);this.resetIntermediateTensors(),s.length===0&&(s=this._outputs);let i=this.getCompilationKey(r,s),o=this.compiledMap.get(i);o==null&&(o=this.compile(e,s),this.compiledMap.set(i,o));let l={},p={};return B(()=>{let u=new zv(this.weightMap,l,p,this.functionExecutorMap),h=Object.assign({},this.weightMap);Object.keys(e).forEach(f=>{let[m,g]=zn(f),y=[];y[g]=e[f],h[m]=y});let d=this.getFrozenTensorIds(h),c={};for(let f=0;f<o.length;f++){let m=o[f];if(!h[m.name]){let g=Lv(m,h,u,this._resourceManager);if(v.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);h[m.name]=g,this.checkTensorForDisposal(m.name,m,h,u,d,a,c)}}return this.parent==null&&u.dispose(d),t.map(f=>un(f,h,u))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){t.category==="control"||s.indexOf(e)!==-1||(n[e].forEach(o=>{o!=null&&(i[o.id]=(i[o.id]||0)+t.children.length)}),t.inputs.forEach(o=>{if(o.category!=="control"){let l=$V(o.name,n,r);l!=null&&l.forEach(p=>{if(p&&!p.kept&&!a.has(p.id)){let u=i[p.id];if(u===1){if(!this.keepTensorForDebug)p.dispose();else{let[h,d]=Lr(t.name,r);this.intermediateTensors[h]?this.intermediateTensors[h][d]=p:(this.intermediateTensors[h]=[],this.intermediateTensors[h][d]=p)}delete i[p.id]}else u!=null&&i[p.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(t=>{t&&!t.kept&&!t.isDisposed&&!this.keepIds.has(t.id)&&t.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=q().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){console.warn(p.message)}this.resetIntermediateTensors();let s=new zv(this.weightMap,r,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,n);let i=t.map(p=>un(p,this.tensorsMap,s)),o=i.map(p=>p.id),l=Object.keys(e).map(p=>e[p].id);return this.keepIds=new Set([...o,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){let r=e.reduce((a,s,i)=>(a[this.inputs[i].name]=s,a),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let a=Object.keys(e),s=a.map(b=>this.graph.nodes[zn(b)[0]]),i=n.map(b=>zn(b)[0]),o=i.map(b=>this.graph.nodes[b]);o.length===0&&(o=this._outputs);let{usedNodes:l,missingInputs:p,dynamicNode:u,syncInputs:h}=Pv(e,o,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map(b=>({node:b,contexts:t.currentContext})),c=Object.assign({},this.weightMap);Object.keys(e).forEach(b=>{let[x,w]=zn(b),I=[];I[w]=e[b],c[x]=I});let f={},m=this.getFrozenTensorIds(c),g={};for(;d.length>0;){let b=this.processStack(s,d,t,c,g,m,i,f,l);await Promise.all(b)}u==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=o.filter(b=>!DS(b)&&!un(b.name,c,t)).map(b=>b.name);if(y.length>0){let b="";throw u!=null&&(b=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${p}]. ${b}`)}return c}processStack(e,t,n,r,a,s,i,o,l){let p=[];for(;t.length>0;){let u=t.pop();n.currentContext=u.contexts;let h="";if(u.node.op==="Enter"&&k("isConstant",u.node,r,n)&&([h]=Lr(u.node.name,n)),r[u.node.name]==null){let d=Lv(u.node,r,n,this._resourceManager);h||([h]=Lr(u.node.name,n));let c=n.currentContext;v.isPromise(d)?p.push(d.then(f=>(r[h]=f,n.currentContext=c,this.checkTensorForDisposal(h,u.node,r,n,s,i,o),this.processChildNodes(u.node,t,n,r,a,l),f))):(r[h]=d,this.checkTensorForDisposal(h,u.node,r,n,s,i,o),this.processChildNodes(u.node,t,n,r,a,l))}else this.processChildNodes(u.node,t,n,r,a,l)}return p}processChildNodes(e,t,n,r,a,s){e.children.forEach(i=>{let[o]=Lr(i.name,n);a[o]||!s.has(i.name)||(i.op==="Merge"?i.inputNames.some(l=>!!un(l,r,n))&&(a[o]=!0,t.push({contexts:n.currentContext,node:i})):i.inputNames.every(l=>!!un(l,r,n))&&(a[o]=!0,t.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[r]=zn(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){let s=a.attrParams.shape.value,i=s.length===n.shape.length&&n.shape.every((o,l)=>s[l]===-1||s[l]===o);v.assert(i,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${s}], but was [${n.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&v.assert(n.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let r=this._signature.inputs[n];t[r.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[r]=zn(n);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=zn(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},EU=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},$U="?tfjs-format=file",AU="model.json",cx=class{constructor(e,t={},n=Yt){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,t==null&&(this.loadOptions={}),this.resourceManager=new EU}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return v.isPromise(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let a=this.artifacts.userDefinedMetadata;a.signature!=null&&(n=a.signature),a.structuredOutputKeys!=null&&(this.structuredOutputKeys=a.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Vm(Fv.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let a=Fv.Instance.transformGraph(e.modelInitializer);this.initializer=new Vm(a),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){let n=this.io.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){let n=this.execute(e,this.outputNodes);if(this.structuredOutputKeys){let r=n instanceof Re?[n]:n,a={};return r.forEach((s,i)=>a[this.structuredOutputKeys[i]]=s),a}return n}normalizeInputs(e){if(!(e instanceof Re)&&!Array.isArray(e)){if(this.signature!=null&&this.signature.inputs!=null)for(let r in this.signature.inputs){let a=this.signature.inputs[r];a.resourceId!=null&&(e[r]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];let t=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+t!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-t} non-resource placeholders, while there are ${e.length} input tensors provided.`);let n=0;return this.inputNodes.reduce((r,a)=>{let s=this.signature?this.signature.inputs[a]:null;return s!=null&&s.resourceId!=null?r[a]=this.resourceIdToCapturedInput[s.resourceId]:r[a]=e[n++],r},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=Object.keys(this.initializerSignature.outputs);for(let n=0;n<t.length;n++){let r=t[n],a=this.initializerSignature.outputs[r];this.resourceIdToCapturedInput[a.resourceId]=e[n]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Ce(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function RU(e,t={},n=Yt){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof e=="string"&&(e=MU(e));let r=new cx(e,t,n);return await r.load(),r}function FU(e){if(e==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){let[r,a]=e;if(!r)throw new Error("modelJSON must be the first element of the array");if(!a||!(a instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in r))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in r))throw new Error("Model JSON is missing 'weightsManifest'");let s=Yt.getWeightSpecs(r.weightsManifest),i=Yt.getModelArtifactsForJSONSync(r,s,a);t=Yt.fromMemorySync(i)}else if("load"in e)t=e;else if("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e)t=Yt.fromMemorySync(e);else throw new Error("Unknown model format");let n=new cx(t);return n.load(),n}function MU(e){return e.endsWith("/")||(e=e+"/"),`${e}${AU}${$U}`}var DU="4.0.0",OS={};Ee(OS,{CSVDataset:()=>HS,Dataset:()=>ru,FileDataSource:()=>JS,TextLineDataset:()=>GS,URLDataSource:()=>QS,array:()=>aG,csv:()=>mG,func:()=>gG,generator:()=>yG,microphone:()=>xG,version_data:()=>wG,webcam:()=>bG,zip:()=>sG});var OU=Wa(Dd()),LU=Wa(Dd());function zU(e,t){return vd(e,t)}function vd(e,t,n=new Map,r=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&a.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse)if(Mo(e)){let s=Array.isArray(e)?[]:{};r.add(e);for(let i in e){let o=e[i],l=vd(o,t,n,r);s[i]=l}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,a.value),a.value}function PU(e,t=zS){return LS(e,t)}function LS(e,t,n=new Set){let r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&a.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse)if(Mo(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let i in r){let o=e.map(p=>p[i]),l=LS(o,t,n);s[i]=l}return n.delete(r),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return a.value}function zS(e){return e===null?null:Mo(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function PS(e,t){let n=new Map;vd(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(v.isPromise(a)){let s=await a;n.set(r,s)}}return vd(e,t,n)}function Mo(e){let t=!1;if(q().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=F0();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof Re)&&!(e instanceof Promise)&&!t)}function BU(e){return e==null||WU(e)||Array.isArray(e)||typeof e=="object"&&e instanceof Re||v.isTypedArray(e)}function WU(e){return e===null||typeof e!="object"&&typeof e!="function"}function VU(e){return zU(e,UU)}function UU(e){return e instanceof Re?{value:e.clone(),recurse:!1}:Mo(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var BS=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},fx=class extends BS{constructor(){super(fx.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};fx.INITIAL_CAPACITY=32;function WS(e){return new qU(e)}function mx(e){return new jU(e)}function GU(e,t){return new VS(e,t)}function HU(e,t=Ta.FAIL){return new nG(e,t)}var Ut=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new eG(this,e)}filter(e){return new JU(this,e)}map(e){return new QU(this,e)}mapAsync(e){return new Bv(this,e)}serialMapAsync(e){return new Bv(this,e).serial()}flatmap(e){return new tG(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new YU(this,e,t)}columnMajorBatch(e,t=!0,n=zS){return this.rowMajorBatch(e,t).map(r=>PU(r,n))}concatenate(e,t){return new VS(WS([this,e]),t)}take(e){return e<0||e==null?this:new ZU(this,e)}skip(e){return e<0||e==null?this:new XU(this,e)}prefetch(e){return new US(this,e)}shuffle(e,t){return new rG(this,e,t)}serial(){return new KU(this)}},qU=class extends Ut{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:VU(e),done:!1}}},jU=class extends Ut{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},KU=class extends Ut{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},XU=class extends Ut{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Ce(e.value)}return this.upstream.next()}},ZU=class extends Ut{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},YU=class extends Ut{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},JU=class extends Ut{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Ce(e.value)}}},QU=class extends Ut{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ir.getTensorsInContainer(e.value),n=this.transform(e.value),r=Ir.getTensorsInContainer(n);for(let a of t)Ir.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}},eG=class extends Ut{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},Bv=class extends Ut{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ir.getTensorsInContainer(e.value),n=await this.transform(e.value),r=Ir.getTensorsInContainer(n);for(let a of t)Ir.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}},gx=class extends Ut{constructor(){super(),this.outputQueue=new fx,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},tG=class extends gx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Ir.getTensorsInContainer(e.value),n=this.transform(e.value),r=Ir.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let a of t)Ir.isTensorInList(a,r)||a.dispose();return!0}},VS=class extends Ut{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},Ta;(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(Ta||(Ta={}));var nG=class extends Ut{constructor(e,t=Ta.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function r(s){return s instanceof Ut?{value:s.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let a=await PS(this.iterators,r);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case Ta.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Ta.SHORTEST:return{value:null,done:!0};case Ta.LONGEST:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},US=class extends Ut{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new BS(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},rG=class extends US{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=LU.alea(n||v.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},ru=class{constructor(){this.size=null}batch(e,t=!0){let n=this;v.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let r;return this.size===1/0||this.size==null?r=this.size:t?r=Math.ceil(this.size/e):r=Math.floor(this.size/e),Ln(async()=>(await n.iterator()).columnMajorBatch(e,t,iG),r)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,Ln(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,Ln(async()=>(await t.iterator()).filter(r=>B(()=>e(r))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Ln(async()=>(await t.iterator()).map(n=>B(()=>e(n))),this.size)}mapAsync(e){let t=this;return Ln(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Ln(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,Ln(async()=>{let r=mx(async()=>({value:await t.iterator(),done:!1}));return GU(r.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,Ln(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=OU.alea(t||v.now().toString());return Ln(async()=>{let s=a.int32();return n&&(s+=a.int32()),(await r.iterator()).shuffle(e,s.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,Ln(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};ru.MAX_BUFFER_SIZE=1e4;function Ln(e,t=null){return new class extends ru{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function aG(e){return Ln(async()=>WS(e),e.length)}function sG(e){if(!Mo(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return Ln(async()=>{let n=await PS(e,r=>{if(r instanceof ru)return{value:r.iterator(),recurse:!1};if(Mo(r))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return HU(n,Ta.SHORTEST)},t)}function iG(e){if(e===null)return null;let t=e[0];return BU(t)?{value:oG(e),recurse:!1}:{value:null,recurse:!0}}function oG(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Re?Vt(e):Tn(e)}var GS=class extends ru{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}},Fh='"',Nu=Symbol("out"),Wv=Symbol("field"),Mh=Symbol("quote"),Zf=Symbol("quoteafterquote"),Vv=Symbol("quoteinquote"),HS=class extends ru{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new GS(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(v.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&v.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((r,a)=>(r[a]=r[a]+1||1,r),{}),n=Object.keys(t).filter(r=>t[r]>1);if(v.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let r of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(r)===-1)throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!(this.configuredColumnsOnly&&!i)){let o=t[a],l=null;if(o==="")if(i&&i.default!==void 0)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let p=Number(o);if(isNaN(p))i&&i.dtype==="bool"?l=this.getBoolean(o):l=o;else if(!i||!i.dtype)l=p;else switch(i.dtype){case"float32":l=p;break;case"int32":l=Math.floor(p);break;case"bool":l=this.getBoolean(o);break;default:l=p}}i&&i.isLabel?r[s]=l:n[s]=l}}return Object.keys(r).length===0?n:{xs:n,ys:r}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],r=0,a=e.length,s=Nu;for(let i=0;i<a;i++)switch(s){case Nu:switch(e.charAt(i)){case Fh:r=i+1,s=Mh;break;case this.delimiter:if(r=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),s=Nu;break;default:s=Wv,r=i;break}break;case Wv:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i)),s=Nu,r=i+1;break}break;case Mh:switch(e.charAt(i)){case Fh:s=Zf;break}break;case Zf:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i-1)),s=Nu,r=i+1;break;case Fh:s=Mh;break;default:s=Vv;break}break;case Vv:switch(e.charAt(i)){case Fh:s=Mh;break}break}if(s===Zf?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},qS=class extends Ut{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!q().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new qS(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let r=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(r,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let r=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(r,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(r=>{let a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((r,a)=>n.set(r,a*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(v.sizeFromShape(t));return n.set(e,n.length-e.length),Tn(n,t)}},jS=class extends Ut{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Ye([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,r=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,a=(1-n)/2,s=(1-r)/2,i=a+n,o=r+s;this.cropBox=Br([s,a,o,i],[1,4])}else this.cropBox=Br([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!q().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new jS(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&v.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Ap.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return B(()=>{let t=Xt(ie(e,"float32"),0),n;n=zr.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let r=n.shape;return P(n,r.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},KS=class{},XS=class extends Ut{split(e){return new lG(this,e)}},lG=class extends XS{constructor(e,t){super(),this.upstream=e,this.impl=new uG(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},uG=class extends gx{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},pG=class extends Ut{decodeUTF8(){return new hG(this)}},hG=class extends XS{constructor(e){super(),this.upstream=e,this.impl=new dG(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},dG=class extends gx{constructor(e){if(super(),this.upstream=e,q().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=F0();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return q().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},ZS=class extends pG{constructor(e,t={}){super(),this.file=e,this.options=t,v.assert(e instanceof Uint8Array||(q().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=s=>{let i=r.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(i)},r.onabort=s=>t(new Error("Aborted")),r.onerror=s=>t(new Error(s.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n}),done:!1}}};async function cG(e,t={},n){let r,a;typeof e=="string"?r=e:(r=e.url,a=fG(e));let s=await(n||v.fetch)(r,a);if(s.ok){let i=new Uint8Array(await s.arrayBuffer());return new ZS(i,t)}else throw new Error(s.statusText)}var fG=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function YS(e){return typeof e=="string"&&e.slice(0,7)==="file://"}var JS=class extends KS{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(YS(this.input)&&q().get("IS_NODE")){let e=hg();this.input=e.readFileSync(this.input.slice(7))}return new ZS(this.input,this.options)}},QS=class extends KS{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return YS(this.url)?new JS(this.url,this.fileOptions).iterator():cG(this.url,this.fileOptions)}};function mG(e,t={}){return new HS(new QS(e),t)}function gG(e){let t=mx(e);return Ln(async()=>t)}function yG(e){return Ln(async()=>{let t=await e();return mx(()=>t.next())})}async function bG(e,t){return jS.create(e,t)}async function xG(e){return qS.create(e)}var wG="4.0.0";function be(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&v.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var vG=jr.whereImpl,yx=class extends op{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Od(this,hr())}nextDataId(){return yx.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,q().get("IS_NODE")&&T.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let a=n.map(s=>v.encodeString(s));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let r=this.readSync(n.real.dataId),a=this.readSync(n.imag.dataId);return T.mergeRealAndImagArrays(r,a)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(r=>v.decodeString(r));return Le(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,t)}makeOutput(e,t,n){return hr().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){be([e],"where");let t=this.readSync(e.dataId);return vG(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};yx.nextDataId=0;var eN={};Ee(eN,{addImpl:()=>rN,bincountImpl:()=>xx,bincountReduceImpl:()=>aN,castImpl:()=>nN,ceilImpl:()=>sN,concatImpl:()=>wx,equalImpl:()=>iN,expImpl:()=>lN,expm1Impl:()=>pN,floorImpl:()=>hN,gatherNdImpl:()=>dN,gatherV2Impl:()=>cN,greaterEqualImpl:()=>mN,greaterImpl:()=>fN,lessEqualImpl:()=>yN,lessImpl:()=>gN,linSpaceImpl:()=>bN,logImpl:()=>xN,maxImpl:()=>wN,maximumImpl:()=>vN,minimumImpl:()=>kN,multiplyImpl:()=>vx,negImpl:()=>IN,notEqualImpl:()=>SN,prodImpl:()=>NN,raggedGatherImpl:()=>TN,raggedRangeImpl:()=>_N,raggedTensorToTensorImpl:()=>CN,rangeImpl:()=>Ix,rsqrtImpl:()=>EN,scatterImpl:()=>uo,sigmoidImpl:()=>mH,simpleAbsImpl:()=>tN,sliceImpl:()=>Id,sparseFillEmptyRowsImpl:()=>AN,sparseReshapeImpl:()=>RN,sparseSegmentReductionImpl:()=>Sx,sqrtImpl:()=>bH,squaredDifferenceImpl:()=>FN,stridedSliceImpl:()=>MN,stringNGramsImpl:()=>Nx,stringSplitImpl:()=>Tx,stringToHashBucketFastImpl:()=>_x,subImpl:()=>DN,tileImpl:()=>ON,topKImpl:()=>zN,transposeImpl:()=>kx,uniqueImpl:()=>PN});function tN(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var kG=e=>{let{x:t}=e.inputs,n=e.backend;be(t,"abs");let r=new Float32Array(v.sizeFromShape(t.shape)),a=n.data.get(t.dataId).values;return r=tN(a),n.makeOutput(r,t.shape,t.dtype)},IG={kernelName:Wo,backendName:"cpu",kernelFunc:kG};function At(e){return(t,n,r,a,s)=>{let i=T.assertAndGetBroadcastShape(t,n),o=i.length,l=v.computeStrides(i),p=v.sizeFromShape(i),u=v.getTypedArrayFromDType(s,p),h=t.length,d=n.length,c=v.computeStrides(t),f=v.computeStrides(n),m=T.getBroadcastDims(t,i),g=T.getBroadcastDims(n,i);if(m.length+g.length===0)for(let y=0;y<u.length;++y)u[y]=e(r[y%r.length],a[y%a.length]);else for(let y=0;y<u.length;++y){let b=v.indexToLoc(y,o,l),x=b.slice(-h);m.forEach(C=>x[C]=0);let w=v.locToIndex(x,h,c),I=b.slice(-d);g.forEach(C=>I[C]=0);let N=v.locToIndex(I,d,f);u[y]=e(r[w],a[N])}return[u,i]}}function Pn(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64"),l=n.data.get(o.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var SG={kernelName:Ud,backendName:"cpu",kernelFunc:Pn};function kd(e,t,n="float32"){if(n==="complex64"){let a=kd(e,t,"float32"),s=kd(e,t,"float32");return Pn({inputs:{real:a,imag:s},backend:e})}let r=v.makeZerosTypedArray(v.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function Gr(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var NG={kernelName:ui,backendName:"cpu",kernelFunc:Gr};function zs(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var TG={kernelName:hc,backendName:"cpu",kernelFunc:zs};function nN(e,t,n,r){if(r==="int32"){let a=Int32Array.from(e);return[t,"int32",a]}if(r==="bool"){let a=v.toTypedArray([0],n),[s,i]=At((o,l)=>o!==l?1:0)(t,[],e,a,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function za(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if(s==="complex64"){if(a.dtype==="complex64")return Gr({inputs:{x:a},backend:n});let u=kd(n,a.shape,a.dtype),h=za({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),d=Pn({inputs:{real:h,imag:u},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),d}if(a.dtype==="complex64"){let u=zs({inputs:{input:a},backend:n}),h=za({inputs:{x:u},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(u),h}if(!v.hasEncodingLoss(a.dtype,s)){let u=Gr({inputs:{x:a},backend:n});return{dataId:u.dataId,shape:u.shape,dtype:s}}let i=n.data.get(a.dataId).values,[o,l,p]=nN(i,a.shape,a.dtype,s);return n.makeTensorInfo(o,l,p)}var _G={kernelName:Ks,backendName:"cpu",kernelFunc:za};function Gt(e,t,n,r){return n==null?({inputs:a,backend:s})=>{let{a:i,b:o}=a,l=s;be([i,o],e);let p=l.data.get(i.dataId).values,u=l.data.get(o.dataId).values,h=i.dtype==="string"?T.fromUint8ToStringArray(p):p,d=i.dtype==="string"?T.fromUint8ToStringArray(u):u,c=r||i.dtype,[f,m]=t(i.shape,o.shape,h,d,c);return l.makeTensorInfo(m,c,f)}:({inputs:a,backend:s})=>{let{a:i,b:o}=a,l=s;if(i.dtype==="complex64"||o.dtype==="complex64"){let p=za({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(p.dataId),h=u.complexTensorInfos.real,d=u.complexTensorInfos.imag,c=l.data.get(h.dataId).values,f=l.data.get(d.dataId).values,m=za({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),y=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,x=l.data.get(y.dataId).values,w=l.data.get(b.dataId).values,[I,N,C]=n(i.shape,o.shape,c,f,x,w),E=l.makeTensorInfo(C,"float32",I),$=l.makeTensorInfo(C,"float32",N),F=Pn({inputs:{real:E,imag:$},backend:l});return l.disposeIntermediateTensorInfo(p),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(E),l.disposeIntermediateTensorInfo($),F}else{let p=l.data.get(i.dataId).values,u=l.data.get(o.dataId).values,h=r||i.dtype,[d,c]=t(i.shape,o.shape,p,u,h);return l.makeTensorInfo(c,h,d)}}}function bx(e){return(t,n,r,a,s,i)=>{let o=T.assertAndGetBroadcastShape(t,n),l=v.sizeFromShape(o),p=o.length,u=v.computeStrides(o),h=v.getTypedArrayFromDType("float32",l),d=v.getTypedArrayFromDType("float32",l),c=T.getBroadcastDims(t,o),f=T.getBroadcastDims(n,o),m=T.mergeRealAndImagArrays(r,a),g=T.mergeRealAndImagArrays(s,i),y=t.length,b=v.computeStrides(t),x=n.length,w=v.computeStrides(n);if(c.length+f.length===0)for(let I=0;I<h.length;I++){let N=I%m.length,C=I%g.length,E=e(m[N*2],m[N*2+1],g[C*2],g[C*2+1]);h[I]=E.real,d[I]=E.imag}else for(let I=0;I<h.length;I++){let N=v.indexToLoc(I,p,u),C=N.slice(-y);c.forEach(S=>C[S]=0);let E=v.locToIndex(C,y,b),$=N.slice(-x);f.forEach(S=>$[S]=0);let F=v.locToIndex($,x,w),R=e(m[E*2],m[E*2+1],g[F*2],g[F*2+1]);h[I]=R.real,d[I]=R.imag}return[h,d,o]}}var rN=At((e,t)=>e+t),CG=bx((e,t,n,r)=>({real:e+n,imag:t+r})),Do=Gt(Ua,rN,CG),EG={kernelName:Ua,backendName:"cpu",kernelFunc:Do};function xx(e,t,n,r,a){let s=v.sizeFromShape(r),i=v.makeZerosTypedArray(a,n);for(let o=0;o<e.length;o++){let l=e[o];if(l<0)throw new Error("Input x must be non-negative!");l>=a||(s>0?i[l]+=t[o]:i[l]+=1)}return i}function aN(e,t,n,r=!1){let a=e.shape[0],s=e.shape[1],i=Le([a,n],t.dtype);for(let o=0;o<a;o++)for(let l=0;l<s;l++){let p=e.get(o,l);if(p<0)throw new Error("Input x must be non-negative!");p>=n||(r?i.set(1,o,p):t.size>0?i.set(i.get(o,p)+t.get(o,l),o,p):i.set(i.get(o,p)+1,o,p))}return i}function Ja(e){return(t,n,r)=>{let a=v.getTypedArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)a[s]=e(t[s],r);return a}}function Qe(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;if(be(i,e),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,p=v.sizeFromShape(i.shape),u=n||i.dtype,h=v.getArrayFromDType(u,p);for(let d=0;d<p;++d)h[d]=t(l[d],a);return o.makeTensorInfo(i.shape,u,h)}}function au(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;if(be(i,e),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,p=n||i.dtype,u=t(l,p,a);return o.makeTensorInfo(i.shape,p,u)}}var sN=Ja(e=>Math.ceil(e)),$G=au(Xs,sN),AG={kernelName:Xs,backendName:"cpu",kernelFunc:$G};function wx(e,t,n,r){let a=v.getArrayFromDType(n,v.sizeFromShape(t));if(r&&n!=="string"){let s=0;e.forEach(i=>{let o=v.sizeFromShape(i.shape);a.set(i.vals,s),s+=o})}else{let s=0;e.forEach(i=>{let o=n==="string"?T.fromUint8ToStringArray(i.vals):i.vals,l=0;for(let p=0;p<i.shape[0];++p){let u=p*t[1]+s;for(let h=0;h<i.shape[1];++h)a[u+h]=o[l++]}s+=i.shape[1]})}return a}var iN=At((e,t)=>e===t?1:0),oN=Gt(rl,iN,null,"bool"),RG={kernelName:rl,backendName:"cpu",kernelFunc:oN},lN=Ja(e=>Math.exp(e)),uN=au(ai,lN,"float32"),FG={kernelName:ai,backendName:"cpu",kernelFunc:uN},pN=Ja(e=>Math.expm1(e)),MG=au(sl,pN),DG={kernelName:sl,backendName:"cpu",kernelFunc:MG},hN=Ja(e=>Math.floor(e)),OG=au(si,hN),LG={kernelName:si,backendName:"cpu",kernelFunc:OG};function dN(e,t,n,r,a,s,i,o,l){let p=Le([r,s],n);for(let u=0;u<r;u++){let h=[],d=0;for(let c=0;c<a;c++){let f=e[u*a+c];d+=f*i[c],h.push(f)}if(d<0||d>=l/s)throw new Error(`Invalid indices: ${h} does not index into ${o}`);for(let c=0;c<s;c++)p.values[u*s+c]=t.get(...t.indexToLoc(d*s+c))}return p}function cN(e,t,n){let r=Le(n,e.dtype);for(let a=0;a<r.size;++a){let s=r.indexToLoc(a).slice(),i=s[0],o=s[2],l=t.locToIndex([i,o]);s[2]=t.values[l];let p=e.locToIndex(s);0<=p&&p<e.values.length&&(r.values[a]=e.values[p])}return r}var fN=At((e,t)=>e>t?1:0),zG=Gt(ul,fN,null,"bool"),PG={kernelName:ul,backendName:"cpu",kernelFunc:zG},mN=At((e,t)=>e>=t?1:0),BG=Gt(li,mN,null,"bool"),WG={kernelName:li,backendName:"cpu",kernelFunc:BG},gN=At((e,t)=>e<t?1:0),VG=Gt(cl,gN,null,"bool"),UG={kernelName:cl,backendName:"cpu",kernelFunc:VG},yN=At((e,t)=>e<=t?1:0),GG=Gt(fl,yN,null,"bool"),HG={kernelName:fl,backendName:"cpu",kernelFunc:GG};function bN(e,t,n){let r=(t-e)/(n-1),a=v.makeZerosTypedArray(n,"float32");a[0]=e;for(let s=1;s<a.length;s++)a[s]=a[s-1]+r;return a}var xN=Ja(e=>Math.log(e)),qG=au(hi,xN),jG={kernelName:hi,backendName:"cpu",kernelFunc:qG};function wN(e,t,n,r){let a=v.getTypedArrayFromDType(r,v.sizeFromShape(n));for(let s=0;s<a.length;++s){let i=s*t,o=e[i];for(let l=0;l<t;++l){let p=e[i+l];(Number.isNaN(p)||p>o)&&(o=p)}a[s]=o}return a}var vN=At((e,t)=>Math.max(e,t)),KG=Gt(ci,vN),XG={kernelName:ci,backendName:"cpu",kernelFunc:KG},kN=At((e,t)=>Math.min(e,t)),ZG=Gt(yi,kN),YG={kernelName:yi,backendName:"cpu",kernelFunc:ZG},vx=At((e,t)=>e*t),JG=bx((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),If=Gt(xi,vx,JG),QG={kernelName:xi,backendName:"cpu",kernelFunc:If};function IN(e,t,n){let r=v.createScalarValue(-1,n);return vx([],t,r,e,n)}function eH(e){let{inputs:t,backend:n}=e,{x:r}=t;be(r,"neg");let a=n.data.get(r.dataId).values,[s,i]=IN(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}var tH={kernelName:wl,backendName:"cpu",kernelFunc:eH},SN=At((e,t)=>e!==t?1:0),nH=Gt(vl,SN,null,"bool"),rH={kernelName:vl,backendName:"cpu",kernelFunc:nH};function kx(e,t,n,r,a){let s=t.length,i=v.sizeFromShape(t),o=v.computeStrides(t),l=v.computeStrides(a),p=v.getTypedArrayFromDType(n,v.sizeFromShape(a));for(let u=0;u<i;++u){let h=v.indexToLoc(u,s,o),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[r[f]];let c=v.locToIndex(d,s,l);p[c]=e[u]}return p}function $n(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;be(a,"transpose");let i=a.shape.length,o=new Array(i);for(let u=0;u<o.length;u++)o[u]=a.shape[s[u]];let l=r.data.get(a.dataId).values,p=kx(l,a.shape,a.dtype,s,o);return{dataId:r.write(p,o,a.dtype),shape:o,dtype:a.dtype}}var aH={kernelName:oa,backendName:"cpu",kernelFunc:$n};function NN(e,t,n,r){let[a,s]=T.computeOutAndReduceShapes(e,r),i=rr(t,"int32"),o=v.makeZerosTypedArray(v.sizeFromShape(a),i),l=v.sizeFromShape(s);for(let p=0;p<o.length;++p){let u=p*l,h=1;for(let d=0;d<l;++d)h*=n[u+d];o[p]=h}return{outVals:o,outShape:a,outDtype:i}}function sH(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;be(a,"prod");let o=a.shape.length,l=v.parseAxisParam(s,a.shape),p=T.getAxesPermutation(l,o),u=l,h=a,d=[];p!=null&&(h=$n({inputs:{x:a},backend:n,attrs:{perm:p}}),d.push(h),u=T.getInnerMostAxes(u.length,o));let c=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=NN(h.shape,h.dtype,c,u),y=m;return i&&(y=T.expandShapeToKeepDim(m,l)),d.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.makeTensorInfo(y,g,f)}var iH={kernelName:Si,backendName:"cpu",kernelFunc:sH};function oH(e,t,n){e.forEach((r,a)=>{if(r<0||r>=n){let s=v.indexToLoc(a,t.length,v.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${r} is not in [0, ${n})`)}})}function lH(e,t){for(let n=0;n<e.length;++n){let r=e[n],a=n===e.length-1?t:e[n+1].length;if(r.length===0)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw new Error("Ragged splits must not point past values");for(let s=1;s<r.length;++s)if(r[s-1]>r[s])throw new Error("Ragged splits must be sorted in ascending order")}}function uH(e,t,n,r){let a=[],s=0,i=t.length-1+n.length,o=new Array(i).fill(null).map(()=>[0]);lH(n,r);let l=1;for(let p=0;p<t.length-1;++p){l*=t[p];let u=t[p+1];for(let h=1;h<l+1;++h)o[p].push(h*u)}for(let p=0;p<e.length;++p){let u=e[p],h=e[p]+1;for(let d=0;d<n.length;++d){let c=n[d],f=d+t.length-1;if(f>=0){let m=o[f],g=m[m.length-1]-c[u];for(let y=u;y<h;++y)o[f].push(c[y+1]+g)}u=c[u],h=c[h]}h!==u&&(a.push([u,h]),s+=h-u)}return{outSplits:o,valueSlices:a,numValues:s}}function pH(e){let t=[];for(let n=0;n<e.length;++n){let r=e[n].length,a=v.getArrayFromDType("int32",r);t.push(a),e[n].forEach((s,i)=>a[i]=s)}return t}function Uv(e,t){let n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function hH(e,t,n,r,a,s){let i=Uv(t,2)[1],o=Uv(s,2)[1],l=0;for(let p of n)for(let u=p[0];u<p[1];++u){for(let h=0;h<r;++h)a[l*o+h]=e[u*i+h];++l}}function dH(e,t,n,r,a){let s=t.slice();s[0]=a;let i=v.getArrayFromDType(n,v.sizeFromShape(s)),o=e.length,l=o===0?0:o/t[0];return hH(e,t,r,l,i,s),[i,s]}function TN(e,t,n,r,a,s,i,o){if(e.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let l=t[0][0]-1;if(oH(s,i,l),r.length===0)throw new Error("params.rank must be nonzero");let p=r[0],{outSplits:u,valueSlices:h,numValues:d}=uH(s,i,e,p),c=pH(u),f=dH(n,r,a,h,d);return[c,f[0],f[1]]}var Gv=2147483647;function _N(e,t,n,r,a,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let o=t.length===0,l=a.length===0,p=i.length===0,u=[];o||u.push(t[0]),l||u.push(a[0]),p||u.push(i[0]);for(let g=1;g<u.length;++g)if(u[g]!==u[g-1])throw new Error("starts, limits, and deltas must have the same shape");let h=u.length===0?1:u[0],d=v.getArrayFromDType("int32",h+1);d[0]=0;for(let g=0;g<h;++g){let y=o?e[0]:e[g],b=l?r[0]:r[g],x=p?s[0]:s[g];if(x===0)throw new Error("Requires delta != 0");let w;if(x>0&&b<y||x<0&&b>y)w=0;else if(w=Math.ceil(Math.abs((b-y)/x)),w>Gv)throw new Error(`Requires ((limit - start) / delta) <= ${Gv}`);d[g+1]=d[g]+w}let c=d[h],f=v.getArrayFromDType(n,c),m=0;for(let g=0;g<h;++g){let y=d[g+1]-d[g],b=o?e[0]:e[g],x=p?s[0]:s[g];for(let w=0;w<y;++w)f[m++]=b,b+=x}return[d,f]}var lr=T.RowPartitionType,Um=class{constructor(e,t,n,r,a,s,i,o,l,p){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=a,this.defaultValue=s,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=T.getRowPartitionTypesHelper(p),this.raggedRank=T.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===lr.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===lr.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case lr.VALUE_ROWIDS:return Um.getMaxWidthValueRowID(t);case lr.ROW_SPLITS:return Um.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${lr[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(t===0||t===1)return 0;let n=0;for(let r=0;r<t-1;++r){let a=e[r+1]-e[r];a>n&&(n=a)}return n}static getMaxWidthValueRowID(e){let t=e.length;if(t===0)return 0;let n=0,r=e[0],a=0;for(let s=1;s<t;++s){let i=e[s];i!==r&&(r=i,a=Math.max(s-n,a),n=s)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t,n=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return qv(e,n)}calculateOutputSize(e){let t=this.valuesShape,n=this.defaultValueShape;T.validateDefaultValueShape(n,t);let r=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=T.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);a[0]<0&&(a[0]=e);for(let s=1;s<=this.raggedRank;++s)a[s]<0&&(a[s]=this.getMaxWidth(s));return a}calculateFirstParentOutputIndex(e,t,n){let r=Math.min(e,n),a=[],s=0;for(let i=0;i<r;++i,s+=t)a.push(s);for(let i=r;i<e;++i)a.push(-1);return v.assert(a.length===e,()=>"Final length of result must be equal to firstDimension."),a}calculateOutputIndexRowSplit(e,t,n,r){let a=e.length,s=[];for(let i=0;i<a-1;++i){let o=e[i+1]-e[i],l=Math.min(r,o),p=t[i];p===-1&&(l=0);for(let u=0;u<l;++u)s.push(p),p+=n;for(let u=0;u<o-l;++u)s.push(-1)}if(a>0&&s.length!==e[a-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,r){let a=e.length,s=[];if(a===0)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];s.push(l);for(let p=1;p<a;++p){let u=e[p];if(u===o)l>=0&&(++i,i<r?l+=n:l=-1);else{if(i=0,o=u,u>=t.length)throw new Error(`Got nextValueRowId=${u} which is not less than ${t.length}`);l=t[u]}s.push(l)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,r){let a=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case lr.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case lr.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw new Error(`Unsupported partition type: ${lr[s]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case lr.FIRST_DIM_SIZE:return e[0];case lr.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case lr.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${lr[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let s=n.length-2;s>=0;--s)n[s]=n[s+1]*t[s+1];let r=qv(t,!1),a=v.getArrayFromDType(this.valuesDType,v.sizeFromShape(r));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let i=1;i<=this.raggedRank;++i)s=this.calculateOutputIndex(i-1,s,n[i],t[i]);this.setOutput(this.raggedRank,s,a,r)}return[r,a]}setOutput(e,t,n,r){if(n.length===0)return;let a=this.values,s=n,i=r.slice();i=i.slice(e+1);let o=v.sizeFromShape(i),l=t.length,p=this.defaultValue;if(p.length!==o&&p.length!==1){let c=this.defaultValueShape;B(()=>{let f=P(p,c);p=ks(f,i).dataSync()})}let u=0,h=0,d=0;for(let c=0;c<=l;++c){let f=c<l?t[c]:-1;if(f===d){++d;continue}if(h<d){let m=a.subarray(u*o),g=s.subarray(h*o),y=(d-h)*o;Hv(g,m,y)}if(c>=l){let m=n.length;f=Math.floor(m/o)}if(f>d)if(this.defaultValue.length===1)s.subarray(d*o,f*o).fill(this.defaultValue[0]),d=f;else for(;f>d;){let m=s.slice(d*o);Hv(m,p,o),++d}f<0?(u=c+1,h=d):(u=c,h=d,d=h+1)}}};function Hv(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function qv(e,t){let n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function CN(e,t,n,r,a,s,i,o,l,p){return new Um(e,t,n,r,a,s,i,o,l,p).compute()}function Ix(e,t,n,r){let a=e===t,s=e<t&&n<0,i=t<e&&n>1;if(a||s||i)return v.makeZerosTypedArray(0,r);let o=Math.abs(Math.ceil((t-e)/n)),l=v.makeZerosTypedArray(o,r);t<e&&n===1&&(n=-1),l[0]=e;for(let p=1;p<l.length;p++)l[p]=l[p-1]+n;return l}var EN=Ja(e=>1/Math.sqrt(e)),cH=au(Ai,EN),fH={kernelName:Ai,backendName:"cpu",kernelFunc:cH};function uo(e,t,n,r,a,s,i,o,l,p){let u=[r/a,a],h=e.values,d=t.values;if(r===0)return Le(n,t.dtype);let c=Le(u,t.dtype);typeof l=="string"||typeof l=="number"?c.values.fill(l):typeof l=="boolean"&&c.values.fill(+l);for(let f=0;f<s;f++){let m=[],g=0;for(let y=0;y<i;y++){let b=h[f*i+y];m.push(b),g+=b*o[y]}if(g<0||g>=r/a)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let y=0;y<a;y++)p?c.values[g*a+y]+=d[f*a+y]:c.values[g*a+y]=t.rank===0?d[0]:d[f*a+y]}return c}var mH=Ja(e=>1/(1+Math.exp(-e))),$N=Qe(Fi,e=>1/(1+Math.exp(-e))),gH={kernelName:Fi,backendName:"cpu",kernelFunc:$N};function Id(e,t,n,r,a){let s=Mt.isSliceContinous(r,t,n),i=v.sizeFromShape(n),o=v.computeStrides(r);if(s){let h=Mt.computeFlatOffset(t,o);return a==="string"?e.slice(h,h+i):e.subarray(h,h+i)}let l=a==="string"?T.fromUint8ToStringArray(e):e,p=Le(r,a,l),u=Le(n,a);for(let h=0;h<u.size;++h){let d=u.indexToLoc(h),c=d.map((f,m)=>f+t[m]);u.set(p.get(...c),...d)}return a==="string"?T.fromStringArrayToUint8(u.values):u.values}function Ps(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;be(a,"slice");let[o,l]=Mt.parseSliceParams(a,s,i);Mt.assertParamsValid(a,o,l);let p=n.data.get(a.dataId).values,u=Id(p,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,u)}var yH={kernelName:Rl,backendName:"cpu",kernelFunc:Ps};function AN(e,t,n,r,a,s,i){let o=t[0],l=s[0],p=new Array(l),u=new Array(o),h=t[1];if(l===0){if(o!==0)throw new Error(T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));let g=v.getArrayFromDType(n,0),y=v.getArrayFromDType(a,0);return[g,[0,h],y,p,u]}let d=!0,c=0,f=new Array(l).fill(0);for(let g=0;g<o;++g){let y=e[g*h];if(y<0)throw new Error(T.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=l)throw new Error(T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,l));++f[y],d=d&&y>=c,c=y}let m=!0;for(let g=0;g<l;++g){let y=f[g]===0;p[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){let g=e,y=r;for(let b=0;b<o;++b)u[b]=b;return[g,[o,h],y,p,u]}else{let g=f[l-1],y=v.getArrayFromDType(n,g*h),b=v.getArrayFromDType(a,g),x=new Array(l).fill(0);for(let w=0;w<o;++w){let I=e[w*h],N=x[I],C=(I===0?0:f[I-1])+N;x[I]++;for(let E=0;E<h;++E)y[C*h+E]=e[w*h+E];b[C]=r[w],u[w]=C}for(let w=0;w<l;++w)if(x[w]===0){let I=w===0?0:f[w-1];y[I*h+0]=w;for(let N=1;N<h;++N)y[I*h+N]=0;b[I]=i}return[y,[g,h],b,p,u]}}function RN(e,t,n,r,a){let s=v.sizeFromShape(r),i=t[0],o=a.length,l=[],p=1,u=-1;for(let m=0;m<o;++m){let g=a[m];if(g===-1){if(u!==-1)throw new Error(T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(u,m));u=m,l.push(1)}else{if(g<0)throw new Error(T.getSparseReshapeNegativeOutputDimErrorMessage(m,g));p*=g,l.push(g)}}if(u!==-1){if(p<=0)throw new Error(T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let m=Math.trunc(s/p);if(p*m!==s)throw new Error(T.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[u]=m}if(v.sizeFromShape(l)!==s)throw new Error(T.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let h=r.length,d=[];if(h>0){d[h-1]=1;for(let m=h-2;m>=0;--m)d[m]=d[m+1]*r[m+1]}let c=[];if(o>0){c[o-1]=1;for(let m=o-2;m>=0;--m)c[m]=c[m+1]*l[m+1]}let f=v.getArrayFromDType(n,i*o);for(let m=0;m<i;++m){let g=0;for(let y=0;y<h;++y)g+=e[m*h+y]*d[y];for(let y=0;y<o;++y)f[m*o+y]=Math.trunc(g/c[y]),g%=c[y]}return[f,[i,o],l]}function Sx(e,t,n,r,a,s=!1,i=0){let o=r.length,l=[t[0],e.length/t[0]],p=l[1],u=o>0?a[o-1]+1:0;if(u<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=t.slice();h[0]=u;let d=h.reduce((b,x)=>b*x,1),c=v.getArrayFromDType(n,d);if(o===0)return u>0&&c.fill(i),[c,h];if(u<=0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=a[f];for(;;){let b=0;if(m<o){if(b=a[m],y===b){++m;continue}if(y>=b)throw new Error(T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=u)throw new Error(T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,u));y>g&&c.fill(i,g*p,y*p);for(let x=f;x<m;++x){let w=r[x];if(w<0||w>=l[0])throw new Error(T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x,r[x],l[0]));for(let I=0;I<p;I++)c[y*p+I]+=e[w*p+I]}if(s)for(let x=0;x<p;x++)c[y*p+x]/=m-f;if(f=m,++m,g=y+1,y=b,m>o)break}return g<u&&c.fill(i,g*p,u*p),[c,h]}var bH=Ja(e=>Math.sqrt(e)),xH=Qe(Mi,e=>Math.sqrt(e)),wH={kernelName:Mi,backendName:"cpu",kernelFunc:xH},FN=At((e,t)=>{let n=e-t;return n*n}),vH=Gt(Li,FN),kH={kernelName:Li,backendName:"cpu",kernelFunc:vH};function MN(e,t,n,r){let a=Le(e,t.dtype);for(let s=0;s<a.size;s++){let i=a.indexToLoc(s),o=new Array(i.length);for(let l=0;l<o.length;l++)o[l]=i[l]*n[l]+r[l];a.set(t.get(...o),...i)}return a}var IH=class{constructor(e,t,n,r,a,s){this.separator=v.encodeString(e),this.nGramWidths=t,this.leftPad=v.encodeString(n),this.rightPad=v.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),p=Math.max(0,o-(a-(i+1))),u=s-(l+p),h=t+(l>0?0:i-o),d=0;d+=l*this.leftPad.length;for(let g=0;g<u;++g)d+=e[h+g].length;d+=p*this.rightPad.length,d+=(l+p+u-1)*this.separator.length,n[r+i]=new Uint8Array(d);let c=n[r+i],f=0,m=g=>g.forEach(y=>c[f++]=y);for(let g=0;g<l;++g)m(this.leftPad),m(this.separator);for(let g=0;g<u-1;++g)m(e[h+g]),m(this.separator);if(u>0){m(e[h+u-1]);for(let g=0;g<p;++g)m(this.separator),m(this.rightPad)}else{for(let g=0;g<p-1;++g)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let o=t[0];if(o!==0)throw new Error(`First split value must be 0, got ${o}`);for(let l=1;l<r;++l){let p=t[l]>=o;if(p=p&&t[l]<=n,!p)throw new Error(`Invalid split value ${t[l]}, must be in [${o}, ${n}]`);o=t[l]}if(o!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${o}`)}let a=r-1,s=v.getArrayFromDType("int32",r);if(n===0||r===0){let o=new Array(n);for(let l=0;l<=a;++l)s[l]=0;return[o,s]}s[0]=0;for(let o=1;o<=a;++o){let l=t[o]-t[o-1],p=0;this.nGramWidths.forEach(u=>{p+=this.getNumNGrams(l,u)}),this.preserveShort&&l>0&&p===0&&(p=1),s[o]=s[o-1]+p}let i=new Array(s[a]);for(let o=0;o<a;++o){let l=t[o],p=s[o];if(this.nGramWidths.forEach(u=>{let h=t[o+1]-t[o],d=this.getNumNGrams(h,u);this.createNGrams(e,l,i,p,d,u),p+=d}),this.preserveShort&&p===s[o]){let u=t[o+1]-t[o];if(u===0)continue;let h=u+2*this.padWidth,d=1;this.createNGrams(e,l,i,p,d,h)}}return[i,s]}};function Nx(e,t,n,r,a,s,i,o){return new IH(n,r,a,s,i,o).compute(e,t)}function SH(e,t,n,r){if(!e.length)return;if(t.length===0){for(let s=0;s<e.length;++s)r.push(e.subarray(s,s+1));return}if(t.length===1){let s=t[0],i=e.indexOf(s);for(;i!==-1;){let o=e.subarray(0,i);(!n||o.length!==0)&&r.push(o),e=e.subarray(i+1),i=e.indexOf(s)}(!n||e.length!==0)&&r.push(e);return}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||t.indexOf(e[s])!==-1){let i=e.subarray(a,s);(!n||i.length!==0)&&r.push(i),a=s+1}}function Tx(e,t,n){let r=e.length,a=[],s=0,i=0,o=new Array(r);for(let d=0;d<r;++d){let c=a.length;SH(e[d],t,n,a);let f=a.length-c;o[d]=f,s+=f,i=Math.max(i,f)}let l=v.getArrayFromDType("int32",s*2),p=new Array(s),u=[r,i],h=0;for(let d=0;d<r;++d)for(let c=0;c<o[d];++c)l[h*2]=d,l[h*2+1]=c,p[h]=a[h],++h;return[l,p,u]}function _x(e,t){let n=v.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=v.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var DN=At((e,t)=>e-t),NH=bx((e,t,n,r)=>({real:e-n,imag:t-r})),Cx=Gt(zi,DN,NH),TH={kernelName:zi,backendName:"cpu",kernelFunc:Cx};function ON(e,t){let n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];let r=Le(n,e.dtype);for(let a=0;a<r.values.length;++a){let s=r.indexToLoc(a),i=new Array(e.rank);for(let l=0;l<i.length;l++)i[l]=s[l]%e.shape[l];let o=e.locToIndex(i);r.values[a]=e.values[o]}return r}var $u=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function LN(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){let o=r-n+1,l=t-n+1,p=Math.log(o),u=.5*Math.exp(2*p/3),h=.5*Math.sqrt(p*u*(o-u)/o)*Math.sign(l-o/2),d=Math.max(n,Math.floor(t-l*u/o+h)),c=Math.min(r,Math.floor(t+(o-l)*u/o+h));LN(e,t,d,c)}let a=e[t],s=n,i=r;for(v.swap(e,n,t),$u(e[r],a)>0&&v.swap(e,n,r);s<i;){for(v.swap(e,s,i),s++,i--;$u(e[s],a)<0;)s=s+1;for(;$u(e[i],a)>0;)i=i-1}$u(e[n],a)===0?v.swap(e,n,i):(i=i+1,v.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function zN(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=v.getTypedArrayFromDType(n,i*r),p=v.getTypedArrayFromDType("int32",i*r);for(let h=0;h<i;h++){let d=h*o,c=e.subarray(d,d+o),f=new Array(c.length);c.forEach((b,x)=>f[x]={value:b,index:x}),r<f.length&&(LN(f,r),f=f.slice(0,r)),a&&f.sort($u);let m=h*r,g=l.subarray(m,m+r),y=p.subarray(m,m+r);for(let b=0;b<r;b++)g[b]=f[b].value,y[b]=f[b].index}let u=t.slice();return u[u.length-1]=r,[Le(u,n,l),Le(u,"int32",p)]}function PN(e,t,n,r){let a=v.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let f=0;f<a;f++)s[0]*=n[f];s[1]=n[a];for(let f=a+1;f<n.length;f++)s[2]*=n[f];let i={},o=new Int32Array(n[a]),l=new Ft(s,r,e),p=[],u=s[0]===1&&s[2]===1;for(let f=0;f<n[a];f++){let m;if(u)m=e[f].toString();else{let g=[];for(let y=0;y<s[0];y++)for(let b=0;b<s[2];b++)g.push(l.get(y,f,b));m=g.join(",")}if(i[m]!==void 0)o[f]=i[m];else{let g=Object.keys(i).length;i[m]=g,o[f]=g,p.push(f)}}let h=s.slice();h[1]=Object.keys(i).length;let d=new Ft(h,r);p.forEach((f,m)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)d.set(l.get(g,f,y),g,m,y)});let c=n.slice();return c[a]=h[1],{outputValues:d.values,outputShape:c,indices:o}}xc("cpu",()=>new yx,1);var BN=Qe(ri,e=>e>=0?e:Math.exp(e)-1),_H={kernelName:ri,backendName:"cpu",kernelFunc:BN};function WN(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;be([a],"leakyRelu");let i=v.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=v.getTypedArrayFromDType("float32",i);for(let p=0;p<o.length;p++)l[p]=o[p]<0?s*o[p]:o[p];return n.makeTensorInfo(a.shape,"float32",l)}var CH={kernelName:pi,backendName:"cpu",kernelFunc:WN},EH=At((e,t)=>e<0?t*e:e);function VN(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;be([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=EH(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var $H={kernelName:Ii,backendName:"cpu",kernelFunc:VN},UN=Qe(Ni,e=>Math.max(0,e)),AH={kernelName:Ni,backendName:"cpu",kernelFunc:UN},GN=Qe(Ci,e=>Math.min(Math.max(0,e),6)),RH={kernelName:Ci,backendName:"cpu",kernelFunc:GN};function Sd(e,t,n,r,a){if(n==="linear")return Gr({inputs:{x:t},backend:e});if(n==="relu")return UN({inputs:{x:t},backend:e});if(n==="elu")return BN({inputs:{x:t},backend:e});if(n==="relu6")return GN({inputs:{x:t},backend:e});if(n==="prelu")return VN({inputs:{x:t,alpha:r},backend:e});if(n==="leakyrelu")return WN({inputs:{x:t},backend:e,attrs:{alpha:a}});if(n==="sigmoid")return $N({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function ut(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=v.sizeFromShape(a.shape),o=v.inferFromImplicitShape(s,i),l=v.sizeFromShape(o);v.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);let p=n.data.get(a.dataId);if(p.complexTensorInfos!=null){let u=p.complexTensorInfos.real,h=p.complexTensorInfos.imag;u.shape=o,h.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var FH={kernelName:Cl,backendName:"cpu",kernelFunc:ut};function HN(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;be([a,s],"matMul");let l=a.shape.length,p=s.shape.length,u=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[p-1]:s.shape[p-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[p-2]:s.shape[p-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=v.sizeFromShape(f),y=v.sizeFromShape(m),b=Hl.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);v.assert(u===h,()=>`Error in matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,u,d]:[g,d,u],w=o?[y,c,h]:[y,h,c],I=ut({inputs:{x:a},backend:n,attrs:{shape:x}}),N=ut({inputs:{x:s},backend:n,attrs:{shape:w}}),C=i?I.shape[1]:I.shape[2],E=i?I.shape[2]:I.shape[1],$=o?N.shape[1]:N.shape[2],F=Math.max(g,y),R=n.data.get(I.dataId).values,S=n.data.get(N.dataId).values,D=v.computeStrides(I.shape),W=v.computeStrides(N.shape),[U,G,j]=i?[D[0],1,D[1]]:[D[0],D[1],1],[H,X,ee]=o?[1,W[1],W[0]]:[W[1],1,W[0]],Z=E*$,re=Le([F,E,$],I.dtype),te=re.values,ae=n.blockSize;for(let oe=0;oe<F;oe++)for(let xe=0;xe<E;xe+=ae)for(let ge=0;ge<$;ge+=ae)for(let he=0;he<C;he+=ae){let Ie=Math.min(xe+ae,E),Ne=Math.min(ge+ae,$),De=Math.min(he+ae,C);for(let ze=xe;ze<Ie;ze++)for(let Xe=ge;Xe<Ne;Xe++){let Ge=0;for(let Ke=he;Ke<De;Ke++){let $e=Math.min(oe,g-1)*U,et=Math.min(oe,y-1)*ee,st=R[$e+ze*G+Ke*j],Fn=S[Ke*H+Xe*X+et];Ge+=st*Fn}te[oe*Z+(ze*$+Xe)]+=Ge}}return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(N),n.makeTensorInfo(b,re.dtype,re.values)}var MH={kernelName:js,backendName:"cpu",kernelFunc:HN};function DH(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:p,activation:u,leakyreluAlpha:h}=r,d,c,f,m=[];d=HN({inputs:{a,b:s},attrs:{transposeA:l,transposeB:p},backend:n}),i&&(c=Do({inputs:{a:d,b:i},backend:n}),m.push(d),d=c),u&&(f=Sd(n,d,u,o,h),m.push(d),d=f);for(let g of m)n.disposeIntermediateTensorInfo(g);return d}var OH={kernelName:_s,backendName:"cpu",kernelFunc:DH},LH=Qe(Vo,e=>Math.acos(e)),zH={kernelName:Vo,backendName:"cpu",kernelFunc:LH},PH=Qe(Uo,e=>Math.acosh(e)),BH={kernelName:Uo,backendName:"cpu",kernelFunc:PH};function WH(e){let{inputs:t,backend:n}=e,r=t;be(t,"addN");let a=r.map(o=>n.data.get(o.dataId).values),s=Le(r[0].shape,r[0].dtype),i=s.values;for(let o=0;o<r.length;o++){let l=a[o];for(let p=0;p<i.length;p++)i[p]+=l[p]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}var VH={kernelName:Gs,backendName:"cpu",kernelFunc:WH};function UH(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;be(a,"all");let o=v.parseAxisParam(s,a.shape),l=o,p=T.getAxesPermutation(l,a.shape.length),u=a;p!=null&&(u=$n({inputs:{x:a},backend:n,attrs:{perm:p}}),l=T.getInnerMostAxes(l.length,a.shape.length)),T.assertAxesAreInnerMostDims("all",l,u.shape.length);let[h,d]=T.computeOutAndReduceShapes(u.shape,l),c=v.sizeFromShape(d),f=v.makeZerosTypedArray(v.sizeFromShape(h),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){let b=y*c,x=m[b];for(let w=0;w<c;++w){let I=m[b+w];x=x&&I}f[y]=x}p!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(h,u.dtype,f);if(i){let y=T.expandShapeToKeepDim(h,o),b=ut({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var GH={kernelName:Go,backendName:"cpu",kernelFunc:UH};function HH(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;be(a,"any");let o=v.parseAxisParam(s,a.shape),l=o,p=T.getAxesPermutation(l,a.shape.length),u=a;p!=null&&(u=$n({inputs:{x:a},backend:n,attrs:{perm:p}}),l=T.getInnerMostAxes(l.length,a.shape.length)),T.assertAxesAreInnerMostDims("any",l,u.shape.length);let[h,d]=T.computeOutAndReduceShapes(u.shape,l),c=v.sizeFromShape(d),f=v.makeZerosTypedArray(v.sizeFromShape(h),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){let b=y*c,x=m[b];for(let w=0;w<c;++w){let I=m[b+w];x=x||I}f[y]=x}p!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(h,u.dtype,f);if(i){let y=T.expandShapeToKeepDim(h,o),b=ut({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var qH={kernelName:Ho,backendName:"cpu",kernelFunc:HH};function jH(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;be(a,"argMax");let i=v.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,p=[];o!=null&&(l=$n({inputs:{x:a},backend:n,attrs:{perm:o}}),p.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],T.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[u,h]=T.computeOutAndReduceShapes(l.shape,i),d=v.sizeFromShape(u),c=v.makeZerosTypedArray(d,"int32"),f=v.sizeFromShape(h),m=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let y=g*f,b=m[y],x=0;for(let w=0;w<f;++w){let I=m[y+w];I>b&&(b=I,x=w)}c[g]=x}return p.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",c)}var KH={kernelName:Hs,backendName:"cpu",kernelFunc:jH};function XH(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;be(a,"argMin");let i=v.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,p=[];o!=null&&(l=$n({inputs:{x:a},backend:n,attrs:{perm:o}}),p.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],T.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[u,h]=T.computeOutAndReduceShapes(l.shape,i),d=v.sizeFromShape(u),c=v.makeZerosTypedArray(d,"int32"),f=v.sizeFromShape(h),m=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let y=g*f,b=m[y],x=0;for(let w=0;w<f;++w){let I=m[y+w];I<b&&(b=I,x=w)}c[g]=x}return p.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",c)}var ZH={kernelName:lp,backendName:"cpu",kernelFunc:XH},YH=Qe(qo,e=>Math.asin(e)),JH={kernelName:qo,backendName:"cpu",kernelFunc:YH},QH=Qe(jo,e=>Math.asinh(e)),e6={kernelName:jo,backendName:"cpu",kernelFunc:QH},t6=Qe(Ko,e=>Math.atan(e)),n6={kernelName:Ko,backendName:"cpu",kernelFunc:t6},r6=At((e,t)=>Math.atan2(e,t)),a6=Gt(Zo,r6),s6={kernelName:Zo,backendName:"cpu",kernelFunc:a6},i6=Qe(Xo,e=>Math.atanh(e)),o6={kernelName:Xo,backendName:"cpu",kernelFunc:i6};function Ex(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,p=a.dilationWidth,u=a.effectiveFilterHeight,h=a.effectiveFilterWidth,d=a.padInfo.top,c=a.padInfo.left,f=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Le(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let w=0;w<a.batchSize;++w){let I=w*y,N=w*r[0];for(let C=0;C<a.inChannels;++C)for(let E=0;E<a.outHeight;++E){let $=E*i-d,F=Math.max(0,$),R=Math.min(a.inHeight,u+$),S=I+E*b;for(let D=0;D<a.outWidth;++D){let W=D*o-c,U=Math.max(0,W),G=Math.min(a.inWidth,h+W),j=f,H=0,X=0;for(let Z=F;Z<R;Z+=l){let re=N+Z*r[1];for(let te=U;te<G;te+=p){let ae=re+te*r[2],oe=e[ae+C];s==="max"&&oe>j?j=oe:s==="avg"&&(H+=oe,X++)}if(isNaN(j))break}let ee=S+D*x+C;g[ee]=s==="avg"?H/X:j}}}return m}function qN(e,t,n,r,a=!1,s=!1){let i=Le(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,p=r.dilationHeight,u=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,c=r.padInfo.top,f=r.padInfo.left,m=Le(t,n,e);for(let g=0;g<r.batchSize;++g)for(let y=0;y<r.inChannels;++y)for(let b=0;b<r.outHeight;++b){let x=b*o-c,w=x;for(;w<0;)w+=p;let I=Math.min(r.inHeight,h+x);for(let N=0;N<r.outWidth;++N){let C=N*l-f,E=C;for(;E<0;)E+=u;let $=Math.min(r.inWidth,d+C),F=Number.NEGATIVE_INFINITY,R=-1;for(let S=w;S<I;S+=p){let D=S-x;for(let W=E;W<$;W+=u){let U=W-C,G=m.get(g,S,W,y);G>F&&(F=G,a?R=s?((g*r.inHeight+S)*r.inWidth+W)*r.inChannels+y:(S*r.inWidth+W)*r.inChannels+y:R=D*d+U)}}i.set(R,g,b,N,y)}}return i}function jN(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,p=a.dilationDepth,u=a.dilationHeight,h=a.dilationWidth,d=a.effectiveFilterDepth,c=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Le(a.outShape,n),w=x.values,I=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],N=a.outShape[2]*a.outShape[3]*a.outShape[4],C=a.outShape[3]*a.outShape[4],E=a.outShape[4];for(let $=0;$<a.batchSize;++$){let F=$*I,R=$*r[0];for(let S=0;S<a.inChannels;++S)for(let D=0;D<a.outDepth;++D){let W=D*i-m,U=W;for(;U<0;)U+=p;let G=Math.min(a.inDepth,d+W),j=F+D*N;for(let H=0;H<a.outHeight;++H){let X=H*o-g,ee=X;for(;ee<0;)ee+=u;let Z=Math.min(a.inHeight,c+X),re=j+H*C;for(let te=0;te<a.outWidth;++te){let ae=te*l-y,oe=ae;for(;oe<0;)oe+=h;let xe=Math.min(a.inWidth,f+ae),ge=re+te*E,he=b,Ie=0,Ne=0;for(let ze=U;ze<G;ze+=p){let Xe=R+ze*r[1];for(let Ge=ee;Ge<Z;Ge+=u){let Ke=Xe+Ge*r[2];for(let $e=oe;$e<xe;$e+=h){let et=Ke+$e*r[3],st=e[et+S];if(s==="max"&&st>he?he=st:s==="avg"&&(Ie+=st,Ne++),isNaN(he))break}if(isNaN(he))break}if(isNaN(he))break}let De=ge+S;w[De]=s==="avg"?Ie/Ne:he}}}}return x}function l6(e,t){let n=Le(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,p=t.effectiveFilterDepth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*r-d,x=b;for(;x<0;)x+=i;let w=Math.min(t.inDepth,p+b);for(let I=0;I<t.outHeight;++I){let N=I*a-c,C=N;for(;C<0;)C+=o;let E=Math.min(t.inHeight,u+N);for(let $=0;$<t.outWidth;++$){let F=$*s-f,R=F;for(;R<0;)R+=l;let S=Math.min(t.inWidth,h+F),D=Number.NEGATIVE_INFINITY,W=-1;for(let U=x;U<w;U+=i){let G=U-b;for(let j=C;j<E;j+=o){let H=j-N;for(let X=R;X<S;X+=l){let ee=X-F,Z=e.get(m,U,j,X,g);Z>=D&&(D=Z,W=G*u*h+H*u+ee)}}}n.set(W,m,y,I,$,g)}}}return n}function u6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;be(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,p=1;v.assert(T.eitherStridesOrDilationsAreOne(i,p),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let u=T.computePool2DInfo(a.shape,s,i,p,o,l),h;if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))h=Gr({inputs:{x:a},backend:n});else{let d=n.data.get(a.dataId).values,c=v.computeStrides(a.shape),f=Ex(d,a.shape,a.dtype,c,u,"avg");h=n.makeTensorInfo(u.outShape,a.dtype,f.values)}return h}var p6={kernelName:qs,backendName:"cpu",kernelFunc:u6};function h6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:p}=r;be(a,"avgPool3d");let u=T.computePool3DInfo(a.shape,s,i,1,o,l,p),h=n.data.get(a.dataId).values,d=jN(h,a.shape,a.dtype,v.computeStrides(a.shape),u,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}var d6={kernelName:up,backendName:"cpu",kernelFunc:h6};function c6(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:p}=r;be([a,s],"avgPool3DGrad");let u=T.computePool3DInfo(s.shape,i,o,1,l,p),h=u.strideDepth,d=u.strideHeight,c=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,y=u.dilationDepth,b=u.dilationHeight,x=u.dilationWidth,w=u.effectiveFilterDepth,I=u.effectiveFilterHeight,N=u.effectiveFilterWidth,C=w-1-u.padInfo.front,E=N-1-u.padInfo.left,$=I-1-u.padInfo.top,F=Le(s.shape,"float32"),R=1/(f*m*g),S=n.bufferSync(a);for(let D=0;D<u.batchSize;++D)for(let W=0;W<u.inChannels;++W)for(let U=0;U<u.inDepth;++U)for(let G=0;G<u.inHeight;++G)for(let j=0;j<u.inWidth;++j){let H=U-C,X=G-$,ee=j-E,Z=0;for(let re=0;re<w;re+=y){let te=(H+re)/h;if(!(te<0||te>=u.outDepth||Math.floor(te)!==te))for(let ae=0;ae<I;ae+=b){let oe=(X+ae)/d;if(!(oe<0||oe>=u.outHeight||Math.floor(oe)!==oe))for(let xe=0;xe<N;xe+=x){let ge=(ee+xe)/c;ge<0||ge>=u.outWidth||Math.floor(ge)!==ge||(Z+=S.get(D,te,oe,ge,W))}}}F.set(Z*R,D,U,G,j,W)}return n.makeTensorInfo(F.shape,F.dtype,F.values)}var f6={kernelName:Bd,backendName:"cpu",kernelFunc:c6};function m6(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;be([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:p}=r,u=T.computePool2DInfo(i.shape,o,l,1,p),h=u.strideHeight,d=u.strideWidth,c=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,y=u.effectiveFilterHeight,b=u.effectiveFilterWidth,x=b-1-u.padInfo.left,w=y-1-u.padInfo.top,I=Le(i.shape,"float32"),N=1/(c*f),C=n.data.get(a.dataId).values,E=Le(a.shape,"float32",C);for(let $=0;$<u.batchSize;++$)for(let F=0;F<u.inChannels;++F)for(let R=0;R<u.inHeight;++R)for(let S=0;S<u.inWidth;++S){let D=R-w,W=S-x,U=0;for(let G=0;G<y;G+=m){let j=(D+G)/h;if(!(j<0||j>=u.outHeight||Math.floor(j)!==j))for(let H=0;H<b;H+=g){let X=(W+H)/d;X<0||X>=u.outWidth||Math.floor(X)!==X||(U+=E.get($,j,X,F))}}I.set(U*N,$,R,S,F)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}var g6={kernelName:Pd,backendName:"cpu",kernelFunc:m6};function y6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;v.assert(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(s==null||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),be([a,o,l,s,i],"batchNorm");let{varianceEpsilon:p}=r;p==null&&(p=.001);let u=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,y=c.length,b=d.length,x=h.length,w=0,I=0,N=0,C=0;for(let E=0;E<u.length;++E)m[E]=f[w++]+(u[E]-h[I++])*c[N++]/Math.sqrt(d[C++]+p),w>=g&&(w=0),I>=x&&(I=0),N>=y&&(N=0),C>=b&&(C=0);return n.makeTensorInfo(a.shape,a.dtype,m)}var b6={kernelName:oi,backendName:"cpu",kernelFunc:y6};function x6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;be([a],"batchToSpaceND");let o=s.reduce((y,b)=>y*b),l=T.getReshaped(a.shape,s,o),p=T.getPermuted(l.length,s.length),u=T.getReshapedPermuted(a.shape,s,o),h=T.getSliceBeginCoords(i,s.length),d=T.getSliceSize(u,i,s.length),c=ut({inputs:{x:a},backend:n,attrs:{shape:l}}),f=$n({inputs:{x:c},backend:n,attrs:{perm:p}}),m=ut({inputs:{x:f},backend:n,attrs:{shape:u}}),g=Ps({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var w6={kernelName:Yo,backendName:"cpu",kernelFunc:x6};function v6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,p=xx(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,p)}var k6={kernelName:Wd,backendName:"cpu",kernelFunc:v6};function I6(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var S6={kernelName:Vd,backendName:"cpu",kernelFunc:I6},N6=Qe(Ga,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),T6={kernelName:Ga,backendName:"cpu",kernelFunc:N6},_6=e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(v.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let p=0;p<o.length;p++){let u=o[p],h=l[p];r[p]=Math.hypot(u,h)}return n.makeOutput(r,t.shape,"float32")},C6={kernelName:pp,backendName:"cpu",kernelFunc:_6};function Oo(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var E6={kernelName:tc,backendName:"cpu",kernelFunc:Oo};function Lo(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=v.parseAxisParam(a,t[0].shape)[0],i=t.map(m=>m.shape);T.assertParamsConsistent(i,s);let o=T.computeOutShape(t.map(m=>m.shape),s);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(m=>v.sizeFromShape(m.shape)>0);if(l.length===1)return Gr({inputs:{x:l[0]},backend:n});if(l[0].dtype==="complex64"){let m=l.map(w=>zs({inputs:{input:w},backend:n})),g=l.map(w=>Oo({inputs:{input:w},backend:n})),y=Lo({inputs:m,backend:n,attrs:{axis:s}}),b=Lo({inputs:g,backend:n,attrs:{axis:s}}),x=Pn({inputs:{real:y,imag:b},backend:n});return m.forEach(w=>n.disposeIntermediateTensorInfo(w)),g.forEach(w=>n.disposeIntermediateTensorInfo(w)),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),x}let p=l.map(m=>{let g=v.sizeFromShape(m.shape.slice(s));return ut({inputs:{x:m},backend:n,attrs:{shape:[-1,g]}})}),u=p.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));o=T.computeOutShape(p.map(m=>m.shape),1);let h=p[0].shape[0]===1,d=wx(u,o,t[0].dtype,h),c=T.computeOutShape(l.map(m=>m.shape),s),f=n.makeTensorInfo(c,t[0].dtype,d);return p.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var $6={kernelName:Jo,backendName:"cpu",kernelFunc:Lo};function KN(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:p,dimRoundingMode:u}=r;be([a,s],"conv2d");let h=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(a.shape,s.shape,i,p,o,u,!1,h),c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x=d.dataFormat==="channelsLast",w=new Ft(d.outShape,a.dtype),I=v.computeStrides(a.shape),N=v.computeStrides(s.shape),C=I[0],E=x?I[1]:I[2],$=x?I[2]:1,F=x?1:I[1],R=w.strides[0],S=x?w.strides[1]:w.strides[2],D=x?w.strides[2]:1,W=x?1:w.strides[1],U=n.data.get(a.dataId).values,G=n.data.get(s.dataId).values,j=w.values;for(let H=0;H<d.batchSize;++H){let X=H*C,ee=H*R;for(let Z=0;Z<d.outHeight;++Z){let re=ee+Z*S,te=Z*d.strideHeight-b;for(let ae=0;ae<c;++ae){let oe=te+ae*m;if(oe<0||oe>=d.inHeight)continue;let xe=ae*N[0],ge=X+oe*E;for(let he=0;he<d.outWidth;++he){let Ie=re+he*D,Ne=he*d.strideWidth-y;for(let De=0;De<f;++De){let ze=Ne+De*g;if(ze<0||ze>=d.inWidth)continue;let Xe=xe+De*N[1],Ge=ge+ze*$,Ke=Xe;for(let $e=0;$e<d.inChannels;++$e){let et=U[Ge+$e*F];for(let st=0;st<d.outChannels;++st)j[Ie+st*W]+=et*G[Ke+st];Ke+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,j)}var A6={kernelName:Zs,backendName:"cpu",kernelFunc:KN};function R6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:p,filterShape:u}=r;be([a,s],"conv2dBackpropFilter");let h=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(a.shape,u,i,1,o,p,!1,h),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=d,y=d.dataFormat==="channelsLast",b=new Ft(d.filterShape,"float32"),x=d.padInfo.left,w=d.padInfo.top,I=n.data.get(a.dataId).values,N=n.data.get(s.dataId).values,C=new Ft(a.shape,a.dtype,I),E=new Ft(s.shape,s.dtype,N);for(let $=0;$<m;++$){let F=Math.max(0,Math.ceil((w-$)/c)),R=Math.min(d.outHeight,(d.inHeight+w-$)/c);for(let S=0;S<g;++S){let D=Math.max(0,Math.ceil((x-S)/f)),W=Math.min(d.outWidth,(d.inWidth+x-S)/f);for(let U=0;U<d.inChannels;++U)for(let G=0;G<d.outChannels;++G){let j=0;for(let H=0;H<d.batchSize;++H)for(let X=F;X<R;++X){let ee=$+X*c-w;for(let Z=D;Z<W;++Z){let re=S+Z*f-x;y?j+=C.get(H,ee,re,U)*E.get(H,X,Z,G):j+=C.get(H,U,ee,re)*E.get(H,G,X,Z)}}b.set(j,$,S,U,G)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var F6={kernelName:Gd,backendName:"cpu",kernelFunc:R6};function M6(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:p,dimRoundingMode:u}=r;be([a,s],"conv2dBackpropInput");let h=v.computeStrides(s.shape),d=v.computeStrides(a.shape),c=T.convertConv2DDataFormat(p),f=T.computeConv2DInfo(i,s.shape,o,1,l,u,!1,c),m=new Ft(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,w,I]=h,{batchSize:N,filterHeight:C,filterWidth:E,inChannels:$,inHeight:F,inWidth:R,outChannels:S,outHeight:D,outWidth:W,strideHeight:U,strideWidth:G}=f;c=f.dataFormat;let j=C-1-f.padInfo.top,H=E-1-f.padInfo.left,X=c==="channelsLast",ee=m.strides[0],Z=X?m.strides[1]:m.strides[2],re=X?m.strides[2]:1,te=X?1:m.strides[1],ae=d[0],oe=X?d[1]:d[2],xe=X?d[2]:1,ge=X?1:d[1];for(let he=0;he<N;++he)for(let Ie=0;Ie<$;++Ie)for(let Ne=0;Ne<F;++Ne){let De=Ne-j,ze=Math.max(0,Math.ceil(De/U)),Xe=Math.min(D,(C+De)/U);for(let Ge=0;Ge<R;++Ge){let Ke=Ge-H,$e=Math.max(0,Math.ceil(Ke/G)),et=Math.min(W,(E+Ke)/G),st=0;for(let kt=ze;kt<Xe;++kt){let wn=kt*U-De;for(let qt=$e;qt<et;++qt){let Mn=qt*G-Ke,Kn=ae*he+oe*kt+xe*qt,Dn=x*(C-1-wn)+w*(E-1-Mn)+I*Ie;for(let vn=0;vn<S;++vn){let jt=y[Kn+ge*vn],Xn=b[Dn+vn];st+=jt*Xn}}}let Fn=ee*he+Z*Ne+re*Ge+te*Ie;g[Fn]=st}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var D6={kernelName:Ys,backendName:"cpu",kernelFunc:M6};function O6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;be([a,s],"conv3d");let p=T.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=p,y=g.front,b=g.left,x=g.top,w=new Ft(p.outShape,a.dtype),I=n.data.get(a.dataId).values,N=n.data.get(s.dataId).values,C=w.values,E=v.computeStrides(a.shape),$=v.computeStrides(s.shape);for(let F=0;F<p.batchSize;++F){let R=F*E[0],S=F*w.strides[0];for(let D=0;D<p.outDepth;++D){let W=S+D*w.strides[1],U=D*p.strideDepth-y;for(let G=0;G<u;++G){let j=U+G*c;if(j<0||j>=p.inDepth)continue;let H=G*$[0],X=R+j*E[1];for(let ee=0;ee<p.outHeight;++ee){let Z=W+ee*w.strides[2],re=ee*p.strideHeight-x;for(let te=0;te<h;++te){let ae=re+te*f;if(ae<0||ae>=p.inHeight)continue;let oe=H+te*$[1],xe=X+ae*E[2];for(let ge=0;ge<p.outWidth;++ge){let he=Z+ge*p.outChannels,Ie=ge*p.strideWidth-b;for(let Ne=0;Ne<d;++Ne){let De=Ie+Ne*m;if(De<0||De>=p.inWidth)continue;let ze=oe+Ne*$[2],Xe=xe+De*p.inChannels,Ge=ze;for(let Ke=0;Ke<p.inChannels;++Ke){let $e=I[Xe+Ke];for(let et=0;et<p.outChannels;++et)C[he+et]+=$e*N[Ge+et];Ge+=p.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var L6={kernelName:hp,backendName:"cpu",kernelFunc:O6};function z6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;be([a,s],"conv3dBackpropFilterV2");let p=v.computeStrides(a.shape),u=v.computeStrides(s.shape),h=T.computeConv3DInfo(a.shape,l,i,1,o),d=h.strideDepth,c=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Ft(h.filterShape,"float32"),x=b.values,[w,I,N,C]=b.strides,E=n.data.get(s.dataId).values,[$,F,R,S]=u,D=n.data.get(a.dataId).values,[W,U,G,j]=p,H=h.padInfo.front,X=h.padInfo.left,ee=h.padInfo.top;for(let Z=0;Z<m;++Z){let re=Math.max(0,Math.ceil((H-Z)/d)),te=Math.min(h.outDepth,(h.inDepth+H-Z)/d),ae=Z*w;for(let oe=0;oe<g;++oe){let xe=Math.max(0,Math.ceil((ee-oe)/c)),ge=Math.min(h.outHeight,(h.inHeight+ee-oe)/c),he=oe*I+ae;for(let Ie=0;Ie<y;++Ie){let Ne=Math.max(0,Math.ceil((X-Ie)/f)),De=Math.min(h.outWidth,(h.inWidth+X-Ie)/f),ze=Ie*N+he;for(let Xe=0;Xe<h.inChannels;++Xe){let Ge=Xe*C+ze;for(let Ke=0;Ke<h.outChannels;++Ke){let $e=0;for(let et=0;et<h.batchSize;++et){let st=et*W,Fn=et*$;for(let kt=re;kt<te;++kt){let wn=(Z+kt*d-H)*U+st,qt=kt*F+Fn;for(let Mn=xe;Mn<ge;++Mn){let Kn=(oe+Mn*c-ee)*G+wn,Dn=Mn*R+qt;for(let vn=Ne;vn<De;++vn){let jt=(Ie+vn*f-X)*j+Kn,Xn=vn*S+Dn;$e+=D[jt+Xe]*E[Xn+Ke]}}}}x[Ge+Ke]=$e}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var P6={kernelName:Hd,backendName:"cpu",kernelFunc:z6};function B6(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;be([a],"conv3dBackpropInputV2");let p=v.computeStrides(a.shape),u=v.computeStrides(s.shape),h=T.computeConv3DInfo(l,s.shape,o,1,i),d=new Ft(h.inShape,"float32"),c=d.values,[f,m,g,y]=d.strides,b=n.data.get(a.dataId).values,[x,w,I,N]=p,C=n.data.get(s.dataId).values,[E,$,F,R]=u,{batchSize:S,filterDepth:D,filterHeight:W,filterWidth:U,inChannels:G,inDepth:j,inHeight:H,inWidth:X,outChannels:ee,outDepth:Z,outHeight:re,outWidth:te,strideDepth:ae,strideHeight:oe,strideWidth:xe}=h,ge=D-1-h.padInfo.front,he=W-1-h.padInfo.top,Ie=U-1-h.padInfo.left;for(let Ne=0;Ne<S;++Ne)for(let De=0;De<G;++De)for(let ze=0;ze<j;++ze){let Xe=ze-ge,Ge=Math.max(0,Math.ceil(Xe/ae)),Ke=Math.min(Z,(D+Xe)/ae);for(let $e=0;$e<H;++$e){let et=$e-he,st=Math.max(0,Math.ceil(et/oe)),Fn=Math.min(re,(W+et)/oe);for(let kt=0;kt<X;++kt){let wn=kt-Ie,qt=Math.max(0,Math.ceil(wn/xe)),Mn=Math.min(te,(U+wn)/xe),Kn=0;for(let Dn=Ge;Dn<Ke;++Dn){let vn=Dn*ae-Xe;for(let jt=st;jt<Fn;++jt){let Xn=jt*oe-et;for(let ya=qt;ya<Mn;++ya){let mu=ya*xe-wn,Xr=x*Ne+w*Dn+I*jt+N*ya,gu=E*(D-1-vn)+$*(W-1-Xn)+F*(U-1-mu)+R*De;for(let Zr=0;Zr<ee;++Zr){let as=b[Xr+Zr],Kt=C[gu+Zr];Kn+=as*Kt}}}}c[f*Ne+m*ze+g*$e+y*kt+De]=Kn}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}var W6={kernelName:qd,backendName:"cpu",kernelFunc:B6},V6=Qe(Js,e=>Math.cos(e)),U6={kernelName:Js,backendName:"cpu",kernelFunc:V6},G6=Qe(Qs,e=>Math.cosh(e)),H6={kernelName:Qs,backendName:"cpu",kernelFunc:G6};function q6(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:p}=r,[u,h,d,c]=a.shape,f=s.shape[0],[m,g]=o,y=Le([f,m,g,c],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(a.dataId).values,I=v.computeStrides(a.shape),N=v.computeStrides(y.shape);for(let C=0;C<f;C++){let E=C*4,$=b[E],F=b[E+1],R=b[E+2],S=b[E+3],D=x[C];if(D>=u)continue;let W=m>1?(R-$)*(h-1)/(m-1):0,U=g>1?(S-F)*(d-1)/(g-1):0;for(let G=0;G<m;G++){let j=m>1?$*(h-1)+G*W:.5*($+R)*(h-1);if(j<0||j>h-1){for(let H=0;H<g;H++)for(let X=0;X<c;X++){let ee=X+H*N[2]+G*N[1]+C*N[0];y.values[ee]=p}continue}if(l==="bilinear"){let H=Math.floor(j),X=Math.ceil(j),ee=j-H;for(let Z=0;Z<g;Z++){let re=g>1?F*(d-1)+Z*U:.5*(F+S)*(d-1);if(re<0||re>d-1){for(let xe=0;xe<c;xe++){let ge=xe+Z*N[2]+G*N[1]+C*N[0];y.values[ge]=p}continue}let te=Math.floor(re),ae=Math.ceil(re),oe=re-te;for(let xe=0;xe<c;xe++){let ge=xe+te*I[2]+H*I[1]+D*I[0],he=w[ge];ge=xe+ae*I[2]+H*I[1]+D*I[0];let Ie=w[ge];ge=xe+te*I[2]+X*I[1]+D*I[0];let Ne=w[ge];ge=xe+ae*I[2]+X*I[1]+D*I[0];let De=w[ge],ze=he+(Ie-he)*oe,Xe=Ne+(De-Ne)*oe;ge=xe+Z*N[2]+G*N[1]+C*N[0],y.values[ge]=ze+(Xe-ze)*ee}}}else for(let H=0;H<g;++H){let X=g>1?F*(d-1)+H*U:.5*(F+S)*(d-1);if(X<0||X>d-1){for(let re=0;re<c;re++){let te=re+H*N[2]+G*N[1]+C*N[0];y.values[te]=p}continue}let ee=Math.round(X),Z=Math.round(j);for(let re=0;re<c;re++){let te=re+ee*I[2]+Z*I[1]+D*I[0],ae=re+H*N[2]+G*N[1]+C*N[0];y.values[ae]=w[te]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var j6={kernelName:el,backendName:"cpu",kernelFunc:q6};function K6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;be(a,"cumprod");let l=T.getAxesPermutation([s],a.shape.length),p=a;l!=null&&(p=$n({inputs:{x:a},backend:n,attrs:{perm:l}}));let u=T.getInnerMostAxes(1,a.shape.length)[0];if(u!==p.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${p.shape.length-1} but got axis=${u}`);let h=rr(p.dtype,"int32"),d=v.makeOnesTypedArray(v.sizeFromShape(p.shape),h),c=n.data.get(p.dataId).values,f=p.shape[p.shape.length-1],m=o?(y,b)=>y+f-b-1:(y,b)=>y+b;for(let y=0;y<c.length;y+=f)for(let b=0;b<f;b++){let x=m(y,b);if(b===0)d[x]=i?1:c[x];else{let w=m(y,b-1);d[x]=i?c[w]*d[w]:c[x]*d[w]}}let g=n.makeTensorInfo(p.shape,h,d);if(l!=null){let y=T.getUndoAxesPermutation(l),b=$n({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(p),b}return g}var X6={kernelName:Qo,backendName:"cpu",kernelFunc:K6};function Z6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;be(a,"cumsum");let l=T.getAxesPermutation([s],a.shape.length),p=a;l!=null&&(p=$n({inputs:{x:a},backend:n,attrs:{perm:l}}));let u=T.getInnerMostAxes(1,a.shape.length)[0];if(u!==p.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${p.shape.length-1} but got axis=${u}`);let h=rr(p.dtype,"int32"),d=v.makeZerosTypedArray(v.sizeFromShape(p.shape),h),c=n.data.get(p.dataId).values,f=p.shape[p.shape.length-1],m=o?(y,b)=>y+f-b-1:(y,b)=>y+b;for(let y=0;y<c.length;y+=f)for(let b=0;b<f;b++){let x=m(y,b);if(b===0)d[x]=i?0:c[x];else{let w=m(y,b-1);d[x]=i?c[w]+d[w]:c[x]+d[w]}}let g=n.makeTensorInfo(p.shape,h,d);if(l!=null){let y=T.getUndoAxesPermutation(l),b=$n({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(p),b}return g}var Y6={kernelName:ei,backendName:"cpu",kernelFunc:Z6};function J6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(a.shape.length===1){let l=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,u=xx(l,p,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}else if(a.shape.length===2){let l=n.bufferSync(a),p=n.bufferSync(s),u=aN(l,p,i,o);return n.makeTensorInfo(u.shape,s.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var Q6={kernelName:jd,backendName:"cpu",kernelFunc:J6};function eq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;v.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=a.shape[0],l=a.shape[1],p=a.shape[2],u=a.shape[3],h=l*s,d=p*s,c=u/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*h*d*c),g=0;for(let y=0;y<o;++y)for(let b=0;b<h;++b){let x=Math.floor(b/s),w=b%s;for(let I=0;I<d;++I){let N=Math.floor(I/s),C=I%s,E=(w*s+C)*c;for(let $=0;$<c;++$){let F=$+E+u*(N+p*(x+l*y));m[g++]=f[F]}}}return n.makeTensorInfo([o,h,d,c],a.dtype,m)}var tq={kernelName:tl,backendName:"cpu",kernelFunc:eq};function XN(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:p}=r;be([a,s],"depthwiseConv2DNative");let u=v.computeStrides(a.shape),h=v.computeStrides(s.shape),d=l;d==null&&(d=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let c=T.computeConv2DInfo(a.shape,s.shape,i,d,o,p,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,w=b.top,I=c.outChannels/c.inChannels,N=new Ft(c.outShape,a.dtype),C=n.data.get(a.dataId).values,E=n.data.get(s.dataId).values,$=N.values;for(let F=0;F<c.batchSize;++F){let R=F*u[0],S=F*N.strides[0];for(let D=0;D<c.outHeight;++D){let W=S+D*N.strides[1],U=D*c.strideHeight-w;for(let G=0;G<f;++G){let j=U+G*g;if(j<0||j>=c.inHeight)continue;let H=G*h[0],X=R+j*u[1];for(let ee=0;ee<c.outWidth;++ee){let Z=W+ee*N.strides[2],re=ee*c.strideWidth-x;for(let te=0;te<m;++te){let ae=re+te*y;if(ae<0||ae>=c.inWidth)continue;let oe=H+te*h[1],xe=X+ae*c.inChannels,ge=Z,he=oe;for(let Ie=0;Ie<c.inChannels;++Ie){let Ne=C[xe+Ie];for(let De=0;De<I;++De)$[ge+De]+=Ne*E[he+De];ge+=I,he+=I}}}}}}return n.makeTensorInfo(N.shape,N.dtype,N.values)}var nq={kernelName:ti,backendName:"cpu",kernelFunc:XN};function rq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:p,filterShape:u}=r;be([a,s],"depthwiseConv2dNativeBackpropFilter");let h=T.computeConv2DInfo(a.shape,u,i,o,l,p,!0),{strideHeight:d,strideWidth:c,filterHeight:f,filterWidth:m}=h,g=new Ft(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(a.dataId).values,I=new Ft(a.shape,a.dtype,w),N=n.data.get(s.dataId).values,C=new Ft(s.shape,s.dtype,N);for(let E=0;E<f;++E){let $=Math.max(0,Math.ceil((b-E)/d)),F=Math.min(h.outHeight,(h.inHeight+b-E)/d);for(let R=0;R<m;++R){let S=Math.max(0,Math.ceil((y-R)/c)),D=Math.min(h.outWidth,(h.inWidth+y-R)/c);for(let W=0;W<h.outChannels;++W){let U=Math.trunc(W/x),G=W%x,j=0;for(let H=0;H<h.batchSize;++H)for(let X=$;X<F;++X){let ee=E+X*d-b;for(let Z=S;Z<D;++Z){let re=R+Z*c-y;j+=I.get(H,ee,re,U)*C.get(H,X,Z,W)}}g.set(j,E,R,U,G)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var aq={kernelName:Kd,backendName:"cpu",kernelFunc:rq};function sq(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:p,inputShape:u}=r;be([a,s],"depthwiseConv2DNativeBackpropInput");let h=v.computeStrides(a.shape),d=v.computeStrides(s.shape),c=T.computeConv2DInfo(u,s.shape,i,o,l,p,!0),f=new Ft(c.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[w,I,N]=h,C=n.data.get(s.dataId).values,[E,$,F]=d,{batchSize:R,filterHeight:S,filterWidth:D,inChannels:W,inHeight:U,inWidth:G,outChannels:j,outHeight:H,outWidth:X,strideHeight:ee,strideWidth:Z}=c,re=S-1-c.padInfo.top,te=D-1-c.padInfo.left,ae=j/W;for(let oe=0;oe<R;++oe)for(let xe=0;xe<W;++xe)for(let ge=0;ge<U;++ge){let he=ge-re,Ie=Math.max(0,Math.ceil(he/ee)),Ne=Math.min(H,(S+he)/ee);for(let De=0;De<G;++De){let ze=De-te,Xe=Math.max(0,Math.ceil(ze/Z)),Ge=Math.min(X,(D+ze)/Z),Ke=0;for(let $e=Ie;$e<Ne;++$e){let et=$e*ee-he;for(let st=Xe;st<Ge;++st){let Fn=st*Z-ze,kt=w*oe+I*$e+N*st,wn=E*(S-1-et)+$*(D-1-Fn)+F*xe;for(let qt=0;qt<ae;++qt){let Mn=xe*ae+qt,Kn=x[kt+Mn],Dn=C[wn+qt];Ke+=Kn*Dn}}}m[g*oe+y*ge+b*De+xe]=Ke}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var iq={kernelName:Xd,backendName:"cpu",kernelFunc:sq};function oq(e){let{inputs:t,backend:n}=e,{x:r}=t,a=v.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Le([a,a],r.dtype),o=i.values;for(let p=0;p<s.length;p++)o[p*a+p]=s[p];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}var lq={kernelName:Zd,backendName:"cpu",kernelFunc:oq},uq={kernelName:dp,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,l=t,p=l.data.get(r.dataId).values,u=r.shape.length,h=l.data.get(a.dataId).values,d=a.shape.length,{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:I,filterHeight:N,filterWidth:C,dilationHeight:E,dilationWidth:$,outShape:F}=T.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),R=v.sizeFromShape(F),S=F.length,D=v.getArrayFromDType(r.dtype,R);for(let W=0;W<c;++W)for(let U=0;U<y;++U){let G=U*w-x.top;for(let j=0;j<b;++j){let H=j*I-x.left;for(let X=0;X<g;++X){let ee=Number.MIN_SAFE_INTEGER;for(let re=0;re<N;++re){let te=G+re*E;if(te>=0&&te<f)for(let ae=0;ae<C;++ae){let oe=H+ae*$;if(oe>=0&&oe<m){let xe=v.locToIndex([W,te,oe,X],u,v.computeStrides(r.shape)),ge=v.locToIndex([re,ae,X],d,v.computeStrides(a.shape)),he=p[xe]+h[ge];he>ee&&(ee=he)}}}let Z=v.locToIndex([W,U,j,X],S,v.computeStrides(F));D[Z]=ee}}}return{dataId:l.write(v.toTypedArray(D,r.dtype),F,r.dtype),shape:F,dtype:r.dtype}}},pq={kernelName:nd,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,p=t,u=v.toNestedArray(r.shape,p.data.get(r.dataId).values),h=v.toNestedArray(a.shape,p.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:I,filterWidth:N,dilationHeight:C,dilationWidth:E,outShape:$}=T.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);v.assert(s.rank===$.length,()=>`Error in ${nd}, dy must have the same rank as output ${$.length}, but got ${s.rank}`);let F=v.toNestedArray($,p.data.get(s.dataId).values),R=v.makeZerosNestedTypedArray(a.shape,a.dtype);for(let S=0;S<d;++S)for(let D=0;D<g;++D){let W=D*x-b.top;for(let U=0;U<y;++U){let G=U*w-b.left;for(let j=0;j<m;++j){let H=Number.MIN_SAFE_INTEGER,X=0,ee=0;for(let Z=0;Z<I;++Z){let re=W+Z*C;if(re>=0&&re<c)for(let te=0;te<N;++te){let ae=G+te*E;if(ae>=0&&ae<f){let oe=u[S][re][ae][j]+h[Z][te][j];oe>H&&(H=oe,X=Z,ee=te)}}}R[X][ee][j]+=F[S][D][U][j]}}}return{dataId:p.write(v.toTypedArray(R,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},hq={kernelName:td,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,p=t,u=v.toNestedArray(r.shape,p.data.get(r.dataId).values),h=v.toNestedArray(a.shape,p.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:I,filterWidth:N,dilationHeight:C,dilationWidth:E,outShape:$}=T.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);v.assert(s.rank===$.length,()=>`Error in ${td}, dy must have the same rank as output ${$.length}, but got ${s.rank}`);let F=v.toNestedArray($,p.data.get(s.dataId).values),R=v.makeZerosNestedTypedArray(r.shape,r.dtype);for(let S=0;S<d;++S)for(let D=0;D<g;++D){let W=D*x-b.top;for(let U=0;U<y;++U){let G=U*w-b.left;for(let j=0;j<m;++j){let H=Number.MIN_SAFE_INTEGER,X=W<0?0:W,ee=G<0?0:G;for(let Z=0;Z<I;++Z){let re=W+Z*C;if(re>=0&&re<c)for(let te=0;te<N;++te){let ae=G+te*E;if(ae>=0&&ae<f){let oe=u[S][re][ae][j]+h[Z][te][j];oe>H&&(H=oe,X=re,ee=ae)}}}R[S][X][ee][j]+=F[S][D][U][j]}}}return{dataId:p.write(v.toTypedArray(R,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function nh(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;be(a,"sum");let o;a.dtype==="bool"?o=za({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):o=Gr({inputs:{x:a},backend:n});let l=o.shape.length,p=v.parseAxisParam(s,o.shape),u=T.getAxesPermutation(p,l),h=p,d=o;u!=null&&(d=$n({inputs:{x:o},backend:n,attrs:{perm:u}}),h=T.getInnerMostAxes(h.length,l)),T.assertAxesAreInnerMostDims("sum",h,d.shape.length);let[c,f]=T.computeOutAndReduceShapes(d.shape,h),m=T.upcastType(d.dtype,"int32"),g=kd(n,c,m),y=v.sizeFromShape(f),b=n.data.get(g.dataId).values,x=n.data.get(d.dataId).values;for(let w=0;w<b.length;++w){let I=w*y,N=0;for(let C=0;C<y;++C)N+=x[I+C];b[w]=N}if(i){let w=T.expandShapeToKeepDim(g.shape,p),I=g;g=ut({inputs:{x:g},backend:n,attrs:{shape:w}}),n.disposeIntermediateTensorInfo(I)}return n.disposeIntermediateTensorInfo(o),u!=null&&n.disposeIntermediateTensorInfo(d),g}var dq={kernelName:Di,backendName:"cpu",kernelFunc:nh};function cq(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=T.decodeEinsumEquation(a,s.length);T.checkEinsumDimSizes(i.length,l,s);let{path:p,steps:u}=T.getEinsumComputePath(o,l),h=u.length,d=null,c=i.length,f=[];for(let m=0;m<h;++m){for(let g of u[m]){let{permutationIndices:y,expandDims:b}=T.getEinsumPermutation(c,l[g]),x;T.isIdentityPermutation(y)?x=s[g]:(x=$n({inputs:{x:s[g]},backend:n,attrs:{perm:y}}),f.push(x));let w=x.shape.slice();for(let I=0;I<b.length;++I)w.splice(b[I],0,1);v.arraysEqual(x.shape,w)||(x=ut({inputs:{x},backend:n,attrs:{shape:w}}),f.push(x)),d===null?d=x:(d=If({inputs:{a:x,b:d},backend:n}),f.push(d))}m<h-1&&(p[m]>=0&&(d=nh({inputs:{x:d},backend:n,attrs:{axis:p[m]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var fq={kernelName:Yd,backendName:"cpu",kernelFunc:cq};function mq(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;be([r,a],"eluGrad");let s=new Float32Array(v.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let l=0;l<i.length;++l){let p=i[l];p>=1?s[l]=o[l]:s[l]=o[l]*(p+1)}return n.makeTensorInfo(a.shape,"float32",s)}var gq={kernelName:Jd,backendName:"cpu",kernelFunc:mq},yq=T.ERF_P,bq=T.ERF_A1,xq=T.ERF_A2,wq=T.ERF_A3,vq=T.ERF_A4,kq=T.ERF_A5,Iq=Qe(nl,e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+yq*n);return t*(1-((((kq*r+vq)*r+wq)*r+xq)*r+bq)*r*Math.exp(-n*n))}),Sq={kernelName:nl,backendName:"cpu",kernelFunc:Iq};function Nd(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(v.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),ut({inputs:{x:a},backend:n,attrs:{shape:o}})}var Nq={kernelName:al,backendName:"cpu",kernelFunc:Nd},Tq=At((e,t)=>e/t),$x=Gt(ni,Tq),Gm={kernelName:ni,backendName:"cpu",kernelFunc:$x};function ZN(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,p=[a,s],u=v.sizeFromShape(p),h=v.getTypedArrayFromDType("float32",u),d=v.getTypedArrayFromDType("float32",u);for(let g=0;g<a;g++){let y=Ps({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),b=Ps({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,s]}}),x=Pn({inputs:{real:y,imag:b},backend:n}),{real:w,imag:I}=_q(x,t,n),N=T.mergeRealAndImagArrays(w,I);for(let C=0;C<s;C++){let E=T.getComplexWithIndex(N,C);h[g*s+C]=E.real,d[g*s+C]=E.imag}n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x)}let c=n.makeTensorInfo(p,"float32",h),f=n.makeTensorInfo(p,"float32",d),m=Pn({inputs:{real:c,imag:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}function _q(e,t,n){let r=v.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(Cq(r)){let o=Hm(s,i,r,t,n),l=[e.shape[0],e.shape[1]];if(t){let p=n.makeTensorInfo(l,"float32",o.real),u=n.makeTensorInfo(l,"float32",o.imag),h=n.makeTensorInfo([],"float32",v.createScalarValue(r,"float32")),d=Gr({inputs:{x:h},backend:n}),c=Gm.kernelFunc({inputs:{a:p,b:h},backend:n}),f=Gm.kernelFunc({inputs:{a:u,b:d},backend:n}),m=n.data.get(c.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return o}else{let o=T.mergeRealAndImagArrays(s,i),l=Eq(o,r,t);return T.splitRealAndImagArrays(l)}}function Cq(e){return(e&e-1)===0}function Hm(e,t,n,r,a){if(n===1)return{real:e,imag:t};let s=T.mergeRealAndImagArrays(e,t),i=n/2,o=T.complexWithEvenIndex(s),l=o.real,p=o.imag,u=[l.length],h=a.makeTensorInfo(u,"float32",l),d=a.makeTensorInfo(u,"float32",p),c=Pn({inputs:{real:h,imag:d},backend:a}),f=T.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),w=Pn({inputs:{real:b,imag:x},backend:a}),I=Hm(l,p,i,r,a),N=I.real,C=I.imag,E=[N.length],$=a.makeTensorInfo(E,"float32",N),F=a.makeTensorInfo(E,"float32",C),R=Pn({inputs:{real:$,imag:F},backend:a}),S=Hm(m,g,i,r,a),D=S.real,W=S.imag,U=[D.length],G=a.makeTensorInfo(U,"float32",D),j=a.makeTensorInfo(U,"float32",W),H=Pn({inputs:{real:G,imag:j},backend:a}),X=T.exponents(n,r),ee=[X.real.length],Z=a.makeTensorInfo(ee,"float32",X.real),re=a.makeTensorInfo(ee,"float32",X.imag),te=Pn({inputs:{real:Z,imag:re},backend:a}),ae=If({inputs:{a:te,b:H},backend:a}),oe=Do({inputs:{a:R,b:ae},backend:a}),xe=Cx({inputs:{a:R,b:ae},backend:a}),ge=zs({inputs:{input:oe},backend:a}),he=zs({inputs:{input:xe},backend:a}),Ie=Oo({inputs:{input:oe},backend:a}),Ne=Oo({inputs:{input:xe},backend:a}),De=Lo({inputs:[ge,he],backend:a,attrs:{axis:0}}),ze=Lo({inputs:[Ie,Ne],backend:a,attrs:{axis:0}}),Xe=a.data.get(De.dataId).values,Ge=a.data.get(ze.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(Z),a.disposeIntermediateTensorInfo(re),a.disposeIntermediateTensorInfo(te),a.disposeIntermediateTensorInfo(ae),a.disposeIntermediateTensorInfo(oe),a.disposeIntermediateTensorInfo(xe),a.disposeIntermediateTensorInfo(ge),a.disposeIntermediateTensorInfo(Ie),a.disposeIntermediateTensorInfo(he),a.disposeIntermediateTensorInfo(Ne),a.disposeIntermediateTensorInfo(De),a.disposeIntermediateTensorInfo(ze),{real:Xe,imag:Ge}}function Eq(e,t,n){let r=new Float32Array(t*2);for(let a=0;a<t;a++){let s=0,i=0;for(let o=0;o<t;o++){let l=T.exponent(a*o,t,n),p=T.getComplexWithIndex(e,o);s+=p.real*l.real-p.imag*l.imag,i+=p.real*l.imag+p.imag*l.real}n&&(s/=t,i/=t),T.assignToTypedArray(r,s,i,a)}return r}function $q(e){let{inputs:t,backend:n}=e,{input:r}=t,a=v.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=a/s,o=ut({inputs:{x:r},backend:n,attrs:{shape:[i,s]}}),l=ZN(o,!1,n),p=ut({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),p}var Aq={kernelName:Qd,backendName:"cpu",kernelFunc:$q};function Ax(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||v.inferDtype(a),o=v.getArrayFromDType(i,v.sizeFromShape(r));return Fq(o,a),t.makeTensorInfo(r,i,o)}var Rq={kernelName:cp,backendName:"cpu",kernelFunc:Ax};function Fq(e,t,n){e.fill(t)}var Mq={kernelName:il,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,a=n,s=v.getTypedArrayFromDType(r.dtype,v.sizeFromShape(r.shape)),[i,o,l,p]=r.shape,u=a.data.get(r.dataId).values;for(let h=0;h<i;h++){let d=h*l*o*p;for(let c=0;c<o;c++){let f=c*(l*p);for(let m=0;m<l;m++){let g=m*p;for(let y=0;y<p;y++){let b=Math.round(l-m-1),x=d+f+g+y,w=u[x];if(b>=0&&b<l){let I=b*p,N=d+f+I+y;w=u[N]}s[x]=w}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Dq=At((e,t)=>Math.floor(e/t)),Oq=Gt(ii,Dq,null,"int32"),Lq={kernelName:ii,backendName:"cpu",kernelFunc:Oq};function zq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:p,dataFormat:u,dilations:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=KN({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:p,dataFormat:u,dilations:h,dimRoundingMode:d}});if(i){let g=m;if(u==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){let y=ut({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Do({inputs:{a:m,b:y},backend:n}),n.disposeIntermediateTensorInfo(y)}else m=Do({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(g)}if(c){let g=m;if(u==="NCHW"&&c==="prelu"&&o.shape.length===1&&o.shape[0]!==1){let y=ut({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=Sd(n,m,c,y,f),n.disposeIntermediateTensorInfo(y)}else m=Sd(n,m,c,o,f);n.disposeIntermediateTensorInfo(g)}return m}var Pq={kernelName:Cs,backendName:"cpu",kernelFunc:zq};function Bq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:p,dataFormat:u,dilations:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=XN({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:p,dataFormat:u,dilations:h,dimRoundingMode:d}});if(i){let g=m;m=Do({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(g)}if(c){let g=m;m=Sd(n,m,c,o,f),n.disposeIntermediateTensorInfo(g)}return m}var Wq={kernelName:Es,backendName:"cpu",kernelFunc:Bq};function Vq(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=v.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,p,u,h]=T.prepareAndValidate(r,a);if(p===0)return n.makeTensorInfo(l,r.dtype,[]);let d=n.data.get(a.dataId).values,c=n.bufferSync(r),f=dN(d,c,r.dtype,p,o,u,h,r.shape,s);return n.makeTensorInfo(l,r.dtype,f.values)}var Uq={kernelName:ll,backendName:"cpu",kernelFunc:Vq};function Gq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;be([a,s],"gatherV2");let l=v.parseAxisParam(i,a.shape)[0],p=n.data.get(s.dataId).values,u=a.shape[l];for(let w=0;w<p.length;++w){let I=p[w];v.assert(I<=u-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${u-1}]`)}let h=o;o==null&&(h=0);let d=v.sizeFromShape(s.shape),c=T.segment_util.collectGatherOpShapeInfo(a,s,l,h),f=ut({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=ut({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}}),g=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize],y=n.bufferSync(m),b=n.bufferSync(f),x=cN(b,y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(c.outputShape,x.dtype,x.values)}var Hq={kernelName:ol,backendName:"cpu",kernelFunc:Gq};function qq(e){let{inputs:t,backend:n}=e,{input:r}=t,a=v.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=a/s,o=ut({inputs:{x:r},backend:n,attrs:{shape:[i,s]}}),l=ZN(o,!0,n),p=ut({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),p}var jq={kernelName:ec,backendName:"cpu",kernelFunc:qq},Kq=Qe(pl,e=>Number.isFinite(e)?1:0,"bool"),Xq={kernelName:pl,backendName:"cpu",kernelFunc:Kq},Zq=Qe(hl,e=>Math.abs(e)===1/0?1:0,"bool"),Yq={kernelName:hl,backendName:"cpu",kernelFunc:Zq},Jq=Qe(dl,e=>Number.isNaN(e)?1:0,"bool"),Qq={kernelName:dl,backendName:"cpu",kernelFunc:Jq};function ej(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=bN(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}var tj={kernelName:nc,backendName:"cpu",kernelFunc:ej},nj=Qe(ml,e=>Math.log1p(e)),rj={kernelName:ml,backendName:"cpu",kernelFunc:nj},aj=At((e,t)=>e&&t),sj=Gt(gl,aj,null,"bool"),ij={kernelName:gl,backendName:"cpu",kernelFunc:sj},oj=Qe(yl,e=>e?0:1,"bool"),lj={kernelName:yl,backendName:"cpu",kernelFunc:oj},uj=At((e,t)=>e||t),pj=Gt(bl,uj,null,"bool"),hj={kernelName:bl,backendName:"cpu",kernelFunc:pj};function dj(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;be(a,"LRN");let p=a.shape[3],u=p-1,h=n.data.get(a.dataId).values,d=v.sizeFromShape(a.shape),c=new Float32Array(d);function f(m){let g=m%p,y=m-g+Math.max(0,g-s),b=m-g+Math.min(g+s,u),x=0;for(;y<=b;y++){let w=h[y];x+=w*w}return x}for(let m=0;m<d;m++){let g=f(m),y=h[m]*Math.pow(i+o*g,-l);c[m]=y}return n.makeTensorInfo(a.shape,a.dtype,c)}var cj={kernelName:fp,backendName:"cpu",kernelFunc:dj};function fj(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:p,beta:u}=r;be(i,"LRNGrad");let h=v.sizeFromShape(i.shape),d=i.shape[3],c=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){let x=b%d,w=b-x+Math.max(0,x-o),I=b-x+Math.min(d,x+o+1),N=0;for(let C=w;C<I;C++)N+=Math.pow(f[C],2);N=p*N+l;for(let C=w;C<I;C++){let E=-2*p*u*f[C]*m[b]/N;b===C&&(E+=Math.pow(N,-u)),E*=c[b],g[C]+=E}}return n.makeTensorInfo(i.shape,a.dtype,g)}var mj={kernelName:rc,backendName:"cpu",kernelFunc:fj};function YN(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n,l=a.shape,p=l.length,u=v.parseAxisParam(s,l),h=u,d=T.getAxesPermutation(h,p),c=o.data.get(a.dataId).values;if(d!=null){let w=new Array(p);for(let I=0;I<w.length;I++)w[I]=l[d[I]];c=kx(c,l,a.dtype,d,w),h=T.getInnerMostAxes(h.length,p),l=w}be(a,"max"),T.assertAxesAreInnerMostDims("max",h,p);let[f,m]=T.computeOutAndReduceShapes(l,h),g=v.sizeFromShape(m),y=wN(c,g,f,a.dtype),b=o.write(y,f,a.dtype),x=f;return i&&(x=T.expandShapeToKeepDim(f,u)),{dataId:b,shape:x,dtype:a.dtype}}var gj={kernelName:di,backendName:"cpu",kernelFunc:YN};function yj(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;be(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,p=1;v.assert(T.eitherStridesOrDilationsAreOne(i,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let u=T.computePool2DInfo(a.shape,s,i,p,o,l),h;if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))h=Gr({inputs:{x:a},backend:n});else{let d=n.data.get(a.dataId).values,c=v.computeStrides(a.shape),f=Ex(d,a.shape,a.dtype,c,u,"max");h=n.makeTensorInfo(u.outShape,a.dtype,f.values)}return h}var bj={kernelName:fi,backendName:"cpu",kernelFunc:yj};function xj(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:p}=r;be(a,"maxPool3d");let u=T.computePool3DInfo(a.shape,s,i,1,o,l,p),h=n.data.get(a.dataId).values,d=jN(h,a.shape,a.dtype,v.computeStrides(a.shape),u,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}var wj={kernelName:mp,backendName:"cpu",kernelFunc:xj};function vj(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:p}=r;be([a,s],"maxPool3DGrad");let u=T.computePool3DInfo(s.shape,i,o,1,l,p),h=n.bufferSync(s),d=l6(h,u),c=u.strideDepth,f=u.strideHeight,m=u.strideWidth,g=u.dilationDepth,y=u.dilationHeight,b=u.dilationWidth,x=u.effectiveFilterDepth,w=u.effectiveFilterHeight,I=u.effectiveFilterWidth,N=x-1-u.padInfo.front,C=I-1-u.padInfo.left,E=w-1-u.padInfo.top,$=Le(s.shape,"float32"),F=n.bufferSync(a);for(let R=0;R<u.batchSize;++R)for(let S=0;S<u.inChannels;++S)for(let D=0;D<u.inDepth;++D)for(let W=0;W<u.inHeight;++W)for(let U=0;U<u.inWidth;++U){let G=D-N,j=W-E,H=U-C,X=0;for(let ee=0;ee<x;ee+=g){let Z=(G+ee)/c;if(!(Z<0||Z>=u.outDepth||Math.floor(Z)!==Z))for(let re=0;re<w;re+=y){let te=(j+re)/f;if(!(te<0||te>=u.outHeight||Math.floor(te)!==te))for(let ae=0;ae<I;ae+=b){let oe=(H+ae)/m;if(oe<0||oe>=u.outWidth||Math.floor(oe)!==oe)continue;let xe=x*w*I-1-d.get(R,Z,te,oe,S),ge=ee*w*I+re*I+ae,he=xe===ge?1:0;he!==0&&(X+=F.get(R,Z,te,oe,S)*he)}}}$.set(X,R,D,W,U,S)}return n.makeTensorInfo($.shape,$.dtype,$.values)}var kj={kernelName:sc,backendName:"cpu",kernelFunc:vj};function Ij(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;be([s,i],"maxPoolGrad");let{filterSize:l,strides:p,pad:u,dimRoundingMode:h}=r,d=T.computePool2DInfo(o.shape,l,p,1,u,h),c=n.data.get(o.dataId).values,f=Le(d.outShape,o.dtype,qN(c,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,I=w-1-d.padInfo.left,N=x-1-d.padInfo.top,C=Le(o.shape,"float32"),E=n.data.get(a.dataId).values,$=Le(a.shape,"float32",E);for(let F=0;F<d.batchSize;++F)for(let R=0;R<d.inChannels;++R)for(let S=0;S<d.inHeight;++S)for(let D=0;D<d.inWidth;++D){let W=S-N,U=D-I,G=0;for(let j=0;j<x;j+=y){let H=(W+j)/m;if(!(H<0||H>=d.outHeight||Math.floor(H)!==H))for(let X=0;X<w;X+=b){let ee=(U+X)/g;if(ee<0||ee>=d.outWidth||Math.floor(ee)!==ee)continue;let Z=x*w-1-f.get(F,H,ee,R),re=j*w+X,te=Z===re?1:0;te!==0&&(G+=$.get(F,H,ee,R)*te)}}C.set(G,F,S,D,R)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}var Sj={kernelName:ac,backendName:"cpu",kernelFunc:Ij};function Nj(e,t,n,r,a){let s=v.computeStrides(t),i=Ex(e,t,n,s,a,"max"),o=qN(e,t,n,a,!0,r);return[i.values,o.values]}var Tj={kernelName:ic,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;be(r,"MaxPoolWithArgmax");let p=l.data.get(r.dataId).values,u=T.computePool2DInfo(r.shape,a,s,[1,1],i),[h,d]=Nj(p,r.shape,r.dtype,o,u),c=l.write(h,u.outShape,r.dtype),f=l.write(d,u.outShape,r.dtype);return[{dataId:c,shape:u.outShape,dtype:r.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}};function _j(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=v.parseAxisParam(s,a.shape),l=T.computeOutAndReduceShapes(a.shape,o)[1],p=v.sizeFromShape(l),u=[],h=n.makeTensorInfo([],"float32",new Float32Array([p]));u.push(h);let d=za({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});u.push(d);let c=$x({inputs:{a:d,b:h},backend:n});u.push(c);let f=nh({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var Cj={kernelName:mi,backendName:"cpu",kernelFunc:_j};function Ej(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;be(a,"min");let o=v.parseAxisParam(s,a.shape),l=o,p=T.getAxesPermutation(l,a.shape.length),u=a;p!=null&&(u=$n({inputs:{x:a},backend:n,attrs:{perm:p}}),l=T.getInnerMostAxes(l.length,a.shape.length)),T.assertAxesAreInnerMostDims("min",l,u.shape.length);let[h,d]=T.computeOutAndReduceShapes(u.shape,l),c=v.sizeFromShape(d),f=v.makeZerosTypedArray(v.sizeFromShape(h),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){let b=y*c,x=m[b];for(let w=0;w<c;++w){let I=m[b+w];(Number.isNaN(I)||I<x)&&(x=I)}f[y]=x}p!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(h,u.dtype,f);if(i){let y=T.expandShapeToKeepDim(h,o),b=ut({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var $j={kernelName:gi,backendName:"cpu",kernelFunc:Ej};function Aj(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;be(a,"mirrorPad");let o=s.map((b,x)=>b[0]+a.shape[x]+b[1]),l=s.map(b=>b[0]),p=s.map((b,x)=>b[0]+a.shape[x]),u=i==="reflect"?0:1,h=n.data.get(a.dataId).values,d=a.shape.length,c=v.computeStrides(a.shape),f=v.sizeFromShape(o),m=o.length,g=v.computeStrides(o),y=v.getTypedArrayFromDType(a.dtype,f);for(let b=0;b<f;b++){let x=v.indexToLoc(b,m,g);for(let I=0;I<m;I++)x[I]<l[I]?x[I]=l[I]*2-x[I]-u:x[I]>=p[I]&&(x[I]=(p[I]-1)*2-x[I]+u);x=x.map((I,N)=>I-l[N]);let w=v.locToIndex(x,d,c);y[b]=h[w]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}var Rj={kernelName:bi,backendName:"cpu",kernelFunc:Aj},Fj=At((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),Mj=Gt(xl,Fj),Dj={kernelName:xl,backendName:"cpu",kernelFunc:Mj},Oj=Wa(Dd());function JN(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=v.parseAxisParam([o],a.shape),p=YN({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),u=T.expandShapeToKeepDim(p.shape,l),h=ut({inputs:{x:p},backend:n,attrs:{shape:u}}),d=Cx({inputs:{a,b:h},backend:n}),c=uN({inputs:{x:d},backend:n}),f=nh({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),m=ut({inputs:{x:f},backend:n,attrs:{shape:u}}),g=$x({inputs:{a:c,b:m},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var Lj={kernelName:Oi,backendName:"cpu",kernelFunc:JN};function zj(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;be(a,"multinomial");let l=o?a:JN({inputs:{logits:a},backend:n,attrs:{dim:-1}}),p=l.shape[0],u=l.shape[1],h=n.data.get(l.dataId).values,d=[p,s],c=v.makeZerosTypedArray(v.sizeFromShape(d),"int32");for(let f=0;f<p;++f){let m=f*u,g=new Float32Array(u-1);g[0]=h[m];for(let x=1;x<g.length;++x)g[x]=g[x-1]+h[m+x];let y=Oj.alea(i.toString()),b=f*s;for(let x=0;x<s;++x){let w=y();c[b+x]=g.length;for(let I=0;I<g.length;I++)if(w<g[I]){c[b+x]=I;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",c)}var Pj={kernelName:oc,backendName:"cpu",kernelFunc:zj},Bj=jr.nonMaxSuppressionV3Impl;function Wj(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;be(a,"NonMaxSuppression");let p=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,{selectedIndices:h}=Bj(p,u,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}var Vj={kernelName:kl,backendName:"cpu",kernelFunc:Wj},Uj=jr.nonMaxSuppressionV4Impl;function Gj(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:p}=r;be(a,"NonMaxSuppressionPadded");let u=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:c}=Uj(u,h,i,o,l,p);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}var Hj={kernelName:Il,backendName:"cpu",kernelFunc:Gj},qj=jr.nonMaxSuppressionV5Impl;function jj(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:p}=r;be(a,"NonMaxSuppressionWithScore");let u=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,d=i,c=o,f=l,m=p,{selectedIndices:g,selectedScores:y}=qj(u,h,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var Kj={kernelName:Sl,backendName:"cpu",kernelFunc:jj};function Xj(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r;be(a,"oneHot");let p=v.sizeFromShape(a.shape),u=new Float32Array(p*i);u.fill(l);let h=n.data.get(a.dataId).values;for(let d=0;d<p;++d)h[d]>=0&&h[d]<i&&(u[d*i+h[d]]=o);return n.makeTensorInfo([...a.shape,i],s,u)}var Zj={kernelName:wi,backendName:"cpu",kernelFunc:Xj};function Td(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(r.dtype==="complex64"){let a=zs({inputs:{input:r},backend:n}),s=Td({inputs:{x:a},backend:n}),i=Oo({inputs:{input:r},backend:n}),o=Td({inputs:{x:i},backend:n}),l=Pn({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Ax({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var Yj={kernelName:Ul,backendName:"cpu",kernelFunc:Td};function QN(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(r.dtype==="complex64"){let a=zs({inputs:{input:r},backend:n}),s=QN({inputs:{x:a},backend:n}),i=Oo({inputs:{input:r},backend:n}),o=Td({inputs:{x:i},backend:n}),l=Pn({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return Ax({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}var Jj={kernelName:Nl,backendName:"cpu",kernelFunc:QN};function e2(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(t.length===1)return Nd({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(u=>{v.assertShapesMatch(s,u.shape,"All tensors passed to stack must have matching shapes"),v.assert(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(u=>{let h=Nd({inputs:{input:u},backend:n,attrs:{dim:a}});return o.push(h),h}),p=Lo({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(u=>n.disposeIntermediateTensorInfo(u)),p}var Qj={kernelName:Tl,backendName:"cpu",kernelFunc:e2};function e5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;be(a,"pad");let o=s.map((y,b)=>y[0]+a.shape[b]+y[1]),l=s.map(y=>y[0]),p=n.data.get(a.dataId).values,u=v.sizeFromShape(a.shape),h=a.shape.length,d=v.computeStrides(a.shape),c=v.sizeFromShape(o),f=o.length,m=v.computeStrides(o),g=v.getTypedArrayFromDType(a.dtype,c);i!==0&&g.fill(i);for(let y=0;y<u;y++){let b=v.indexToLoc(y,h,d).map((w,I)=>w+l[I]),x=v.locToIndex(b,f,m);g[x]=p[y]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}var t2={kernelName:vi,backendName:"cpu",kernelFunc:e5},t5=At((e,t)=>Math.pow(e,t)),n5=Gt(ki,t5),r5={kernelName:ki,backendName:"cpu",kernelFunc:n5};function a5(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,o=a.map(g=>n.data.get(g.dataId).values),l=a.map(g=>g.shape),p=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,[h,d,c]=TN(o,l,p,s.shape,s.dtype,u,i.shape),f=h.map(g=>n.makeTensorInfo([g.length],"int32",g)),m=n.makeTensorInfo(c,s.dtype,d);return f.concat([m])}var s5={kernelName:lc,backendName:"cpu",kernelFunc:a5};function i5(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[p,u]=_N(i,r.shape,r.dtype,o,a.shape,l,s.shape),h=n.makeTensorInfo([p.length],"int32",p),d=n.makeTensorInfo([u.length],r.dtype,u);return[h,d]}var o5={kernelName:uc,backendName:"cpu",kernelFunc:i5};function l5(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,p=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,d=o.map(g=>n.data.get(g.dataId).values),c=o.map(g=>g.shape),[f,m]=CN(p,a.shape,u,s.shape,s.dtype,h,i.shape,d,c,l);return n.makeTensorInfo(f,s.dtype,m)}var u5={kernelName:pc,backendName:"cpu",kernelFunc:l5};function p5(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=Ix(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}var h5={kernelName:gp,backendName:"cpu",kernelFunc:p5},d5=Qe(_l,e=>1/e),c5={kernelName:_l,backendName:"cpu",kernelFunc:d5};function f5(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;be(a,"resizeBilinear");let l=v.computeStrides(a.shape),[p,u]=o,[h,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(v.sizeFromShape([h,p,u,f])),y=[s&&p>1?d-1:d,s&&u>1?c-1:c],b=[s&&p>1?p-1:p,s&&u>1?u-1:u],x=0,w=y[0]/b[0],I=y[1]/b[1];for(let N=0;N<h;N++)for(let C=0;C<p;C++){let E;i?E=w*(C+.5)-.5:E=w*C;let $=Math.max(0,Math.floor(E)),F=E-$,R=Math.min(d-1,Math.ceil(E)),S=N*l[0]+$*l[1],D=N*l[0]+R*l[1];for(let W=0;W<u;W++){let U;i?U=I*(W+.5)-.5:U=I*W;let G=Math.max(0,Math.floor(U)),j=U-G,H=Math.min(c-1,Math.ceil(U)),X=S+G*l[2],ee=D+G*l[2],Z=S+H*l[2],re=D+H*l[2];for(let te=0;te<f;te++){let ae=m[X+te],oe=m[ee+te],xe=m[Z+te],ge=m[re+te],he=ae+(xe-ae)*j,Ie=oe+(ge-oe)*j,Ne=he+(Ie-he)*F;g[x++]=Ne}}}return n.makeTensorInfo([h,p,u,f],"float32",g)}var m5={kernelName:_i,backendName:"cpu",kernelFunc:f5};function g5(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;be([s,a],"resizeBilinearGrad");let o=v.computeStrides(a.shape),[l,p,u,h]=a.shape,[,d,c]=s.shape,f=new Float32Array(l*p*u*h),m=[i&&d>1?p-1:p,i&&c>1?u-1:u],g=[i&&d>1?d-1:d,i&&c>1?c-1:c],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values,w=0;for(let I=0;I<l;I++){let N=I*o[0];for(let C=0;C<d;C++){let E=C*y,$=Math.floor(E),F=Math.min(Math.ceil(E),p-1),R=N+$*o[1],S=N+F*o[1],D=E-$,W=1-D;for(let U=0;U<c;U++){let G=U*b,j=Math.floor(G),H=Math.min(Math.ceil(G),u-1),X=G-j,ee=1-X,Z=R+j*o[2],re=R+H*o[2],te=S+j*o[2],ae=S+H*o[2],oe=W*ee,xe=W*X,ge=D*ee,he=D*X;for(let Ie=0;Ie<h;Ie++){let Ne=x[w++];f[Z+Ie]+=Ne*oe,f[re+Ie]+=Ne*xe,f[te+Ie]+=Ne*ge,f[ae+Ie]+=Ne*he}}}}return n.makeTensorInfo([l,u,p,h],"float32",f)}var y5={kernelName:cc,backendName:"cpu",kernelFunc:g5};function b5(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;be(a,"resizeNearestNeighbor");let l=v.computeStrides(a.shape),[p,u]=o,[h,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(h*p*u*f),y=[s&&p>1?d-1:d,s&&u>1?c-1:c],b=[s&&p>1?p-1:p,s&&u>1?u-1:u],x=y[0]/b[0],w=y[1]/b[1],I=0;for(let N=0;N<h;N++){let C=N*l[0];for(let E=0;E<p;E++){let $=i?x*(E+.5):x*E,F=Math.min(d-1,s?Math.round($):Math.floor($));i&&(F=Math.max(0,F));let R=C+F*l[1];for(let S=0;S<u;S++){let D=i?w*(S+.5):w*S,W=Math.min(c-1,s?Math.round(D):Math.floor(D));i&&(W=Math.max(0,W));let U=R+W*l[2];for(let G=0;G<f;G++){let j=m[U+G];g[I++]=j}}}}return n.makeTensorInfo([h,p,u,f],a.dtype,g)}var x5={kernelName:Ti,backendName:"cpu",kernelFunc:b5};function w5(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;be([s,a],"resizeNearestNeighborGrad");let o=v.computeStrides(a.shape),l=v.computeStrides(s.shape),[p,u,h,d]=a.shape,[,c,f]=s.shape,m=new Float32Array(p*u*h*d),g=n.data.get(s.dataId).values,y=[i&&c>1?u-1:u,i&&f>1?h-1:h],b=[i&&c>1?c-1:c,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],I=1/x,N=1/w,C=Math.ceil(I)*2+2,E=Math.ceil(N)*2+2;for(let $=0;$<p;$++){let F=$*o[0];for(let R=0;R<u;R++){let S=F+R*o[1],D=Math.floor(R*I),W=Math.floor(D-C/2);for(let U=0;U<h;U++){let G=S+U*o[2],j=Math.floor(U*N),H=Math.floor(j-E/2);for(let X=0;X<d;X++){let ee=0;for(let Z=0;Z<C;Z++){let re=Z+W;if(re<0||re>=c)continue;let te=F+re*l[1],ae=re*x,oe=Math.min(u-1,i?Math.round(ae):Math.floor(ae));if(R===oe)for(let xe=0;xe<E;xe++){let ge=xe+H;if(ge<0||ge>=f)continue;let he=te+ge*l[2],Ie=ge*w,Ne=Math.min(h-1,i?Math.round(Ie):Math.floor(Ie));U===Ne&&(ee+=g[he+X])}}m[G+X]=ee}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}var v5={kernelName:dc,backendName:"cpu",kernelFunc:w5};function k5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;be(a,"reverse");let i=a.shape.length,o=v.parseAxisParam(s,a.shape);if(i===0)return Gr({inputs:{x:a},backend:n});let l=new Ft(a.shape,a.dtype),p=n.bufferSync(a);for(let u=0;u<l.size;u++){let h=l.indexToLoc(u),d=h.slice();o.forEach(c=>d[c]=a.shape[c]-1-d[c]),l.set(p.get(...d),...h)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var I5={kernelName:Ei,backendName:"cpu",kernelFunc:k5},S5={kernelName:Gl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=v.getTypedArrayFromDType(r.dtype,v.sizeFromShape(r.shape)),[p,u,h,d]=r.shape,[c,f]=T.getImageCenter(i,u,h),m=255,g=Math.sin(a),y=Math.cos(a),b=o.data.get(r.dataId).values;for(let x=0;x<p;x++){let w=x*h*u*d;for(let I=0;I<u;I++){let N=I*(h*d);for(let C=0;C<h;C++){let E=C*d;for(let $=0;$<d;$++){let F=[p,I,C,$],R=F[2],S=F[1],D=(R-c)*y-(S-f)*g,W=(R-c)*g+(S-f)*y;D=Math.round(D+c),W=Math.round(W+f);let U=s;if(typeof s!="number"&&($===3?U=m:U=s[$]),D>=0&&D<h&&W>=0&&W<u){let j=W*(h*d),H=D*d,X=w+j+H+$;U=b[X]}let G=w+N+E+$;l[G]=U}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},N5=Qe($i,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),T5={kernelName:$i,backendName:"cpu",kernelFunc:N5};function _5(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:p,strides:u,outputSize:h}=T.calculateShapes(s,a,i),d=!0,c=n.bufferSync(a),f=n.bufferSync(s),m=uo(c,f,i,h,p,l,o,u,0,d);return n.makeTensorInfo(i,m.dtype,m.values)}var C5={kernelName:El,backendName:"cpu",kernelFunc:_5};function E5(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function $5(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}function A5(e,t,n,r,a,s){let i=v.getArrayFromDType("int32",n*a);for(let o=0;o<n;++o){let l=e.slice(o*r,(o+1)*r),p=o*a;for(let u=0;u<a;++u)i[p+u]=s==="left"?E5(l,t[u+p]):$5(l,t[u+p])}return i}function R5(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,p=A5(o,l,a.shape[0],a.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",p)}var F5={kernelName:fc,backendName:"cpu",kernelFunc:R5};function M5(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;be([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,u=rr(a.dtype,s.dtype),h=v.makeZerosTypedArray(v.sizeFromShape(a.shape),u),d=0,c=i===0||i>1||a.shape.length===1?1:v.sizeFromShape(a.shape.slice(1));for(let f=0;f<o.length;f++)for(let m=0;m<c;m++)o[f]===1?h[d++]=l[f]:h[d++]=p[f];return n.makeTensorInfo(a.shape,u,h)}var D5={kernelName:$l,backendName:"cpu",kernelFunc:M5},O5=T.SELU_SCALEALPHA,L5=T.SELU_SCALE,z5=Qe(Al,e=>e>=0?L5*e:O5*(Math.exp(e)-1)),P5={kernelName:Al,backendName:"cpu",kernelFunc:z5},B5=Qe(Ml,e=>e<0?-1:e>0?1:0),W5={kernelName:Ml,backendName:"cpu",kernelFunc:B5},V5=Qe(Ri,e=>Math.sin(e)),U5={kernelName:Ri,backendName:"cpu",kernelFunc:V5},G5=Qe(Fl,e=>Math.sinh(e)),H5={kernelName:Fl,backendName:"cpu",kernelFunc:G5},q5=11920928955078125e-23,jv=Math.log(q5)+2,j5=Qe(Dl,e=>{let t=e>-jv,n=e<jv,r=Math.exp(e),a;return n?a=r:t?a=e:a=Math.log(1+r),a}),K5={kernelName:Dl,backendName:"cpu",kernelFunc:j5};function X5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;be([a],"spaceToBatchND");let o=v.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let p=t2.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),u=T.getReshaped(p.shape,s,o,!1),h=T.getPermuted(u.length,s.length,!1),d=T.getReshapedPermuted(p.shape,s,o,!1),c=ut({inputs:{x:p},backend:n,attrs:{shape:u}}),f=$n({inputs:{x:c},backend:n,attrs:{perm:h}}),m=ut({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}var Z5={kernelName:Ol,backendName:"cpu",kernelFunc:X5};function Y5(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values[0],[h,d,c,f,m]=AN(o,r.shape,r.dtype,l,a.dtype,p,u);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}var J5={kernelName:yp,backendName:"cpu",kernelFunc:Y5};function Q5(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[p,u,h]=RN(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(u,r.dtype,p),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}var eK={kernelName:zl,backendName:"cpu",kernelFunc:Q5};function tK(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[p,u]=Sx(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(u,r.dtype,p)}var nK={kernelName:bp,backendName:"cpu",kernelFunc:tK};function rK(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[p,u]=Sx(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(u,r.dtype,p)}var aK={kernelName:xp,backendName:"cpu",kernelFunc:rK};function sK(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:p,sliceSize:u,strides:h,outputSize:d}=T.calculateShapes(s,a,o),c=!1,f=n.bufferSync(a),m;switch(s.dtype){case"bool":{let g=n.bufferSync(s),y=Boolean(n.data.get(i.dataId).values[0]);m=uo(f,g,o,d,u,p,l,h,y,c);break}case"float32":{let g=n.bufferSync(s),y=n.data.get(i.dataId).values[0];m=uo(f,g,o,d,u,p,l,h,y,c);break}case"int32":{let g=n.bufferSync(s),y=n.data.get(i.dataId).values[0];m=uo(f,g,o,d,u,p,l,h,y,c);break}case"string":{let g=n.bufferSync(s),y=v.decodeString(n.data.get(i.dataId).values[0]);m=uo(f,g,o,d,u,p,l,h,y,c);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}var iK={kernelName:mc,backendName:"cpu",kernelFunc:sK};function oK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=v.parseAxisParam(i,a.shape)[0],l=T.prepareSplitSize(a,s,o),p=new Array(a.shape.length).fill(0),u=a.shape.slice();return l.map(h=>{let d=[...u];d[o]=h;let c=Ps({inputs:{x:a},backend:n,attrs:{begin:p,size:d}});return p[o]+=h,c})}var lK={kernelName:Ll,backendName:"cpu",kernelFunc:oK},uK={kernelName:wp,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t;be(n,"square");let a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let i=0;i<a.length;++i){let o=a[i];s[i]=o*o}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},pK=Qe(qa,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),hK={kernelName:qa,backendName:"cpu",kernelFunc:pK};function dK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:p,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=r;be(a,"stridedSlice");let{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=Mt.sliceInfo(a.shape,s,i,o,l,p,u,h,d),I;if(m)I=ut({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||y){v.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let N=Mt.computeOutShape(b,x,w),C=Ps({inputs:{x:a},backend:n,attrs:{begin:b,size:N}});I=ut({inputs:{x:C},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(C)}else{let N=n.bufferSync(a),C=MN(c,N,w,b);I=n.makeTensorInfo(f,C.dtype,C.values)}return I}var cK={kernelName:Pl,backendName:"cpu",kernelFunc:dK};function fK(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:p}=r,{data:u,dataSplits:h}=t,d=n.data.get(u.dataId).values,c=n.data.get(h.dataId).values,[f,m]=Nx(d,c,a,s,i,o,l,p);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}var mK={kernelName:vp,backendName:"cpu",kernelFunc:fK};function gK(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[p,u,h]=Tx(o,l,a),d=u.length;return[n.makeTensorInfo([d,2],"int32",p),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}var yK={kernelName:kp,backendName:"cpu",kernelFunc:gK};function bK(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.data.get(s.dataId).values,o=_x(i,a);return n.makeTensorInfo(s.shape,"int32",o)}var xK={kernelName:Ip,backendName:"cpu",kernelFunc:bK},wK=Qe(Pi,e=>Math.tan(e)),vK={kernelName:Pi,backendName:"cpu",kernelFunc:wK},kK=Qe(Bi,e=>Math.tanh(e)),IK={kernelName:Bi,backendName:"cpu",kernelFunc:kK};function SK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;be(a,"tile");let i=ON(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}var NK={kernelName:Ha,backendName:"cpu",kernelFunc:SK};function TK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;be(a,"topk");let o=n.data.get(a.dataId).values,[l,p]=zN(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(p.shape,p.dtype,p.values)]}var _K={kernelName:Bl,backendName:"cpu",kernelFunc:TK};function CK(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:p}=n,[u,h,d,c]=a.shape,[f,m]=p!=null?p:[h,d],g=[u,f,m,c],y=v.computeStrides(a.shape),b=y[0],x=y[1],w=y[2],I=v.computeStrides(g),N=I[0],C=I[1],E=I[2],$=v.getTypedArrayFromDType(a.dtype,v.sizeFromShape(g));$.fill(l);let F=r.data.get(a.dataId).values,R=r.data.get(s.dataId).values;for(let S=0;S<u;++S){let D=s.shape[0]===1?R:R.subarray(S*8,S*8+8);for(let W=0;W<f;++W)for(let U=0;U<m;++U)for(let G=0;G<c;++G){let j,H=D[6]*U+D[7]*W+1;if(H===0)continue;let X=(D[0]*U+D[1]*W+D[2])/H,ee=(D[3]*U+D[4]*W+D[5])/H,Z=Kv(X,d,o),re=Kv(ee,h,o);switch(i){case"nearest":j=MK(F,h,d,b,x,w,S,re,Z,G,l);break;case"bilinear":j=DK(F,h,d,b,x,w,S,re,Z,G,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let te=S*N+W*C+U*E+G;$[te]=j}return r.makeTensorInfo(g,a.dtype,$)}return{dataId:r.write($,g,a.dtype),shape:a.shape,dtype:a.dtype}}var EK={kernelName:Wl,backendName:"cpu",kernelFunc:CK};function Kv(e,t,n){switch(n){case"reflect":return $K(e,t);case"wrap":return AK(e,t);case"nearest":return FK(e,t);case"constant":default:return RK(e)}}function $K(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let r=2*t;n<r&&(n=r*Math.trunc(-n/r)+n),n=n<-t?n+r:-n-1}else if(n>t-1)if(t<=1)n=0;else{let r=2*t;n-=r*Math.trunc(n/r),n>=t&&(n=r-n-1)}return v.clamp(0,n,t-1)}function AK(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let r=t-1;n+=t*(Math.trunc(-n/r)+1)}else if(n>t-1)if(t<=1)n=0;else{let r=t-1;n-=t*Math.trunc(n/r)}return v.clamp(0,n,t-1)}function RK(e,t){return e}function FK(e,t){return v.clamp(0,e,t-1)}function Au(e,t,n,r,a,s,i,o,l,p,u){let h=i*r+o*a+l*s+p;return 0<=o&&o<t&&0<=l&&l<n?e[h]:u}function MK(e,t,n,r,a,s,i,o,l,p,u){let h=Math.round(o),d=Math.round(l);return Au(e,t,n,r,a,s,i,h,d,p,u)}function DK(e,t,n,r,a,s,i,o,l,p,u){let h=Math.floor(o),d=Math.floor(l),c=h+1,f=d+1,m=(f-l)*Au(e,t,n,r,a,s,i,h,d,p,u)+(l-d)*Au(e,t,n,r,a,s,i,h,f,p,u),g=(f-l)*Au(e,t,n,r,a,s,i,c,d,p,u)+(l-d)*Au(e,t,n,r,a,s,i,c,f,p,u);return(c-o)*m+(o-h)*g}function OK(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;be(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:p}=PN(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([p.length],"int32",p)]}var LK={kernelName:gc,backendName:"cpu",kernelFunc:OK};function zK(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=new Array(i-1),p=0;for(let c=0;c<i;c++)c!==s&&(l[p++]=a.shape[c]);let u=new Array(i).fill(0),h=a.shape.slice();h[s]=1;let d=new Array(o);for(let c=0;c<d.length;c++){u[s]=c;let f=Ps({inputs:{x:a},backend:n,attrs:{begin:u,size:h}});d[c]=ut({inputs:{x:f},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(f)}return d}var PK={kernelName:Vl,backendName:"cpu",kernelFunc:zK};function BK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;be(a,"unsortedSegmentSum");let o=a.shape.length,l=s.shape.length,p=[],u=[],h=o-l,d=s;for(let f=0;f<h;++f){let m=Nd({inputs:{input:d},backend:n,attrs:{dim:f+1}});d=m,u.push(m)}for(let f=0;f<i;++f){let m=v.createScalarValue(f,"int32"),g=n.makeTensorInfo([],"int32",m),y=oN({inputs:{a:g,b:d},backend:n}),b=za({inputs:{x:y},backend:n,attrs:{dtype:"float32"}}),x=If({inputs:{a:b,b:a},backend:n}),w=nh({inputs:{x},backend:n,attrs:{axis:0,keepDims:!1}});p.push(w),u.push(g),u.push(y),u.push(b),u.push(x),u.push(w)}let c=e2({inputs:p,backend:n,attrs:{axis:0}});return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),c}var WK={kernelName:Sp,backendName:"cpu",kernelFunc:BK},VK=[OH,IG,zH,BH,EG,VH,GH,qH,KH,ZH,JH,e6,n6,s6,o6,p6,d6,f6,g6,MH,b6,w6,k6,S6,_G,AG,T6,SG,C6,$6,A6,F6,D6,L6,P6,W6,U6,H6,j6,X6,Y6,Q6,tq,nq,aq,iq,lq,uq,pq,hq,fq,_H,gq,RG,Sq,FG,Nq,DG,Aq,Rq,Mq,LG,Lq,Pq,Wq,Uq,Hq,PG,WG,NG,jq,E6,Xq,Yq,Qq,CH,UG,HG,tj,jG,rj,ij,lj,hj,cj,mj,gj,XG,bj,wj,kj,Sj,Tj,Cj,$j,YG,Rj,Dj,Pj,QG,tH,Vj,Hj,Kj,rH,Zj,Jj,Qj,t2,r5,$H,iH,s5,o5,u5,h5,TG,Gm,c5,AH,RH,FH,m5,y5,x5,v5,I5,S5,T5,fH,C5,F5,D5,P5,gH,W5,U5,H5,yH,Lj,K5,Z5,J5,eK,nK,aK,iK,lK,wH,uK,kH,hK,cK,mK,yK,xK,TH,dq,vK,IK,NK,_K,EK,aH,LK,PK,WK,Yj];for(let e of VK)Np(e);var n2={};Ee(n2,{assertNotComplex:()=>iu,bindCanvasToFramebuffer:()=>QK,bindColorTextureToFramebuffer:()=>jh,bindTextureToProgramUniformSampler:()=>b2,bindTextureUnit:()=>m2,bindVertexBufferToProgramAttribute:()=>qm,callAndCheck:()=>fe,canBeRepresented:()=>a2,createFragmentShader:()=>o2,createFramebuffer:()=>f2,createProgram:()=>l2,createStaticIndexBuffer:()=>h2,createStaticVertexBuffer:()=>p2,createTexture:()=>d2,createVertexShader:()=>i2,getBatchDim:()=>Bs,getExtensionOrThrow:()=>Ru,getFramebufferErrorMessage:()=>x2,getMaxTexturesInShader:()=>I2,getNumChannels:()=>YK,getProgramUniformLocation:()=>y2,getProgramUniformLocationOrThrow:()=>g2,getRowsCols:()=>Ws,getShapeAs3D:()=>Mu,getTextureShapeFromLogicalShape:()=>v2,getWebGLDisjointQueryTimerVersion:()=>S2,getWebGLErrorMessage:()=>s2,getWebGLMaxTextureSize:()=>k2,hasExtension:()=>er,isCapableOfRenderingToFloatTexture:()=>N2,isDownloadFloatTextureEnabled:()=>T2,isReshapeFree:()=>ep,isWebGLFenceEnabled:()=>_2,isWebGLVersionEnabled:()=>Km,linkProgram:()=>u2,logShaderSourceAndInfoLog:()=>Fx,resetMaxTextureSize:()=>e8,resetMaxTexturesInShader:()=>t8,unbindColorTextureFromFramebuffer:()=>jm,unbindTextureUnit:()=>JK,validateFramebuffer:()=>Fu,validateProgram:()=>qh,validateTextureSize:()=>c2});var ys={},Dh={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function r2(e,t){ys[e]=t}function Cr(e,t){if(!(e in ys)||t!=null){let r=GK(e,t);if(r!==null)ys[e]=r;else return console.log("Could not get context for WebGL version",e),null}let n=ys[e];return n==null||n.isContextLost()?(delete ys[e],Cr(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),ys[e])}function UK(e){if(typeof OffscreenCanvas<"u"&&e===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function GK(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=t==null?UK(e):t;return n.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete ys[e]},!1),q().getBool("SOFTWARE_WEBGL_ENABLED")&&(Dh.failIfMajorPerformanceCaveat=!1),e===1?n.getContext("webgl",Dh)||n.getContext("experimental-webgl",Dh):n.getContext("webgl2",Dh)}var Qu;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(Qu||(Qu={}));var Qn;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(Qn||(Qn={}));var Zt;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Zt||(Zt={}));function rh(e,t){return[t,e]}function HK(e,t){return e*t}function Oh(e){let t=v.sizeFromShape(e),n=Math.ceil(t/4);return v.sizeToSquarishShape(n)}function su(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function qK(e,t){let[n,r]=su(e,t);return n*r*4}function Rx(e,t){let n=e,r,a,s,i,o,l,p,u,h,d;return q().getNumber("WEBGL_VERSION")===2?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,p=4,u=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,p=4,u=4,h=t!=null?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:p,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}function fe(e,t){let n=t();return q().getBool("DEBUG")&&jK(e),n}function jK(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+s2(e,t))}var KK=596e-10,XK=65504;function a2(e){return!!(q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||KK<Math.abs(e)&&Math.abs(e)<XK)}function s2(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Ru(e,t){return ga(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function i2(e,t){let n=ga(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(fe(e,()=>e.shaderSource(n,t)),fe(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function o2(e,t){let n=ga(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(fe(e,()=>e.shaderSource(n,t)),fe(e,()=>e.compileShader(n)),q().get("ENGINE_COMPILE_ONLY"))return n;if(e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw Fx(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var ZK=/ERROR: [0-9]+:([0-9]+):/g;function Fx(e,t){let n=ZK.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let r=+n[1],a=e.split(`
`),s=a.length.toString().length+2,i=a.map((h,d)=>v.rightPad((d+1).toString(),s)+h),o=0;for(let h=0;h<i.length;h++)o=Math.max(i[h].length,o);let l=i.slice(0,r-1),p=i.slice(r-1,r),u=i.slice(r);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${v.rightPad(p[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function l2(e){return ga(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function u2(e,t){if(fe(e,()=>e.linkProgram(t)),!q().get("ENGINE_COMPILE_ONLY")&&e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function qh(e,t){if(fe(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function p2(e,t){let n=ga(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),fe(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function h2(e,t){let n=ga(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return fe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),fe(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function YK(){return q().getNumber("WEBGL_VERSION")===2?1:4}function d2(e){return ga(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function c2(e,t){let n=q().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let r=`[${e}x${t}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(e>n||t>n){let r=`[${e}x${t}]`,a=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+a+".")}}function f2(e){return ga(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function qm(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return o===-1?!1:(fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),fe(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),fe(e,()=>e.enableVertexAttribArray(o)),!0)}function m2(e,t,n){w2(e,n),fe(e,()=>e.activeTexture(e.TEXTURE0+n)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function JK(e,t){w2(e,t),fe(e,()=>e.activeTexture(e.TEXTURE0+t)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function g2(e,t,n){return ga(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function y2(e,t,n){return e.getUniformLocation(t,n)}function b2(e,t,n,r){fe(e,()=>m2(e,t,r)),fe(e,()=>e.uniform1i(n,r))}function QK(e){fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),fe(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),fe(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function jh(e,t,n){fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),fe(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function jm(e,t){fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),fe(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Fu(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+x2(e,t))}function x2(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function ga(e,t,n){let r=fe(e,()=>t());if(r==null)throw new Error(n);return r}function w2(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){let a=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${a}.`)}}function Bs(e,t=2){return v.sizeFromShape(e.slice(0,e.length-t))}function Ws(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Mu(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[Bs(e),...Ws(e)]),t}function v2(e,t=!1){let n=q().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=q().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&q().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n=n*2,r=r*2,e=e.map((o,l)=>l>=e.length-2?v.nearestLargerEven(e[l]):e[l]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=v.squeezeShape(e).newShape);let a=v.sizeFromShape(e),s=null;e.length<=1&&a<=n?s=[1,a]:e.length===2&&e[0]<=n&&e[1]<=n?s=e:e.length===3&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:e.length===3&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);let i=s!=null&&Math.max(...s)>r&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(s==null||i)if(t){let o=Bs(e),l=2,p=2;e.length&&([l,p]=Ws(e)),a=o*(l/2)*(p/2),s=v.sizeToSquarishShape(a).map(u=>u*2)}else s=v.sizeToSquarishShape(a);return s}function Lh(e){return e%2===0}function ep(e,t){if(e=e.slice(-2),t=t.slice(-2),v.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r||Lh(n)&&Lh(r)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&Lh(e[0])&&Lh(t[0])}var Kh,Xh;function k2(e){if(Kh==null){let t=Cr(e);Kh=t.getParameter(t.MAX_TEXTURE_SIZE)}return Kh}function e8(){Kh=null}function t8(){Xh=null}function I2(e){if(Xh==null){let t=Cr(e);Xh=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Xh)}function S2(e){if(e===0)return 0;let t,n=Cr(e);return er(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:er(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function er(e,t){return e.getExtension(t)!=null}function Km(e){try{if(Cr(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function N2(e){if(e===0)return!1;let t=Cr(e);if(e===1){if(!er(t,"OES_texture_float"))return!1}else if(!er(t,"EXT_color_buffer_float"))return!1;return Xm(t)}function T2(e){if(e===0)return!1;let t=Cr(e);if(e===1){if(!er(t,"OES_texture_float")||!er(t,"WEBGL_color_buffer_float"))return!1}else{if(er(t,"EXT_color_buffer_float"))return Xm(t);let n="EXT_color_buffer_half_float";if(er(t,n)){let r=t.getExtension(n);return n8(t,r)}return!1}return Xm(t)}function Xm(e){let t=Rx(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,r,a,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),i}function n8(e,t){let n=Rx(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);let a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}function _2(e){return e!==2?!1:Cr(e).fenceSync!=null}function iu(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&v.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var we=q();we.registerFlag("HAS_WEBGL",()=>we.getNumber("WEBGL_VERSION")>0);we.registerFlag("WEBGL_VERSION",()=>Km(2)?2:Km(1)?1:0);we.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);we.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>we.get("WEBGL_VERSION")===2);we.registerFlag("WEBGL_CPU_FORWARD",()=>!0);we.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);we.registerFlag("WEBGL_PACK",()=>we.getBool("HAS_WEBGL"));we.registerFlag("WEBGL_PACK_NORMALIZATION",()=>we.getBool("WEBGL_PACK"));we.registerFlag("WEBGL_PACK_CLIP",()=>we.getBool("WEBGL_PACK"));we.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>we.getBool("WEBGL_PACK"));we.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>we.getBool("WEBGL_PACK"));we.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>we.getBool("WEBGL_PACK"));we.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>we.getBool("WEBGL_PACK"));we.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>we.getBool("WEBGL_PACK"));we.registerFlag("WEBGL_PACK_REDUCE",()=>we.getBool("WEBGL_PACK"));we.registerFlag("WEBGL_LAZILY_UNPACK",()=>we.getBool("WEBGL_PACK"));we.registerFlag("WEBGL_CONV_IM2COL",()=>we.getBool("WEBGL_PACK"));we.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>k2(we.getNumber("WEBGL_VERSION")));we.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>I2(we.getNumber("WEBGL_VERSION")));we.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=we.getNumber("WEBGL_VERSION");return e===0?0:S2(e)});we.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>we.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Cp.isMobile());we.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>N2(we.getNumber("WEBGL_VERSION")));we.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>we.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:we.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));we.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>T2(we.getNumber("WEBGL_VERSION")));we.registerFlag("WEBGL_FENCE_API_ENABLED",()=>_2(we.getNumber("WEBGL_VERSION")));we.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>we.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);we.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});we.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Cp.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});we.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);we.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);we.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);we.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);we.registerFlag("WEBGL_EXP_CONV",()=>!1);we.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>we.getBool("IS_TEST"));we.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);we.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);we.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);function bn(){let e,t,n,r,a,s,i,o,l,p;return q().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o=q().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",p=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,p=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:p}}function Xi(e,t,n="index"){let r=v.computeStrides(t);return r.map((a,s)=>{let i=`int ${e[s]} = ${n} / ${a}`,o=s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${a}`:`index -= ${e[s]} * ${a}`;return`${i}; ${o};`}).join("")}function Sf(e,t,n="index"){let r=v.computeStrides(t);return r.map((a,s)=>{let i=`int ${e[s]} = ${n} / outShapeStrides[${s}]`,o=s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`;return`${i}; ${o};`}).join("")}function r8(e,t){let n=e.length,r=e.map(s=>`${t}[${s}]`),a=new Array(n-1);a[n-2]=r[n-1];for(let s=n-3;s>=0;--s)a[s]=`(${a[s+1]} * ${r[s+1]})`;return a}function a8(e,t,n="index"){let r=e.map((s,i)=>i),a=r8(r,t);return a.map((s,i)=>{let o=`int ${e[i]} = ${n} / ${a[i]}`,l=i===a.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${a[i]}`:`index -= ${e[i]} * ${a[i]}`;return`${o}; ${l};`}).join("")}function Mx(e){let t=v.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Dx(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var C2=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:E2}=T;function s8(e,t,n){let r=[];if(e.forEach(d=>{let c=v.sizeFromShape(d.shapeInfo.logicalShape);if(d.shapeInfo.isUniform?r.push(`uniform float ${d.name}${c>1?`[${c}]`:""};`):(r.push(`uniform sampler2D ${d.name};`),r.push(`uniform int offset${d.name};`)),n.enableShapeUniforms){let{uniformShape:f}=Ox(n.packedInputs,d.shapeInfo.logicalShape,d.shapeInfo.texShape);switch(f.length){case 1:r.push(`uniform int ${d.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${d.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${d.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${d.name}Shape;`);break}r.push(`uniform ivec2 ${d.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(d=>{r.push(`uniform ${d.type} ${d.name}${d.arrayIndex?`[${d.arrayIndex}]`:""};`)});let a=r.join(`
`),s=e.map(d=>i8(d,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),i=t.texShape,o=bn(),l=u8(o),p,u,h=d8(o);return t.isPacked?(p=o8(t.logicalShape,i,n.enableShapeUniforms),u=h8(o)):(p=l8(t.logicalShape,i,n.enableShapeUniforms),u=p8(o)),n.packedInputs&&(h+=g8),[h,l,u,a,p,s,n.userCode].join(`
`)}function ou(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return C8(e,t);case 1:return $8(e,t);case 2:return R8(e,t);case 3:return M8(e,t);case 4:return O8(e,t);case 5:return L8(e);case 6:return z8(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function $2(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return _8(e);case 1:return E8(e,t);case 2:return A8(e,t);case 3:return F8(e,t);default:return D8(e,t)}}function i8(e,t,n=!1,r){let a="";n?a+=$2(e,r):a+=ou(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(n?a+=P8(e,t):a+=B8(e,t)),a}function o8(e,t,n){switch(e.length){case 0:return A2();case 1:return y8(e,t,n);case 2:return N8(e,t,n);case 3:return x8(e,t,n);default:return v8(e,t,n)}}function l8(e,t,n){switch(e.length){case 0:return A2();case 1:return b8(e,t,n);case 2:return T8(e,t,n);case 3:return w8(e,t,n);case 4:return k8(e,t,n);case 5:return I8(e,t);case 6:return S8(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function u8(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function p8(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function h8(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function d8(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${c8}
    ${f8}
    ${m8}
  `}var c8=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,f8=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,m8=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,g8=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function A2(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function y8(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return r[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function b8(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function x8(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}function w8(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Sf(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let r=Xi(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function v8(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let p=2;p<e.length-1;p++)i*=e[e.length-p-1],o=`
      int b${p} = index / ${i};
      index -= b${p} * ${i};
    `+o,l=`b${p}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${o}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${e.length}(${l});
    }
  `}function k8(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Sf(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let r=Xi(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function I8(e,t){let n=Xi(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function S8(e,t){let n=Xi(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function N8(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(v.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;let a=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}function T8(e,t,n){return v.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function Zi(e){return`offset${e}`}function _8(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=bn();return`
    vec4 ${n}() {
      return ${r.texture2D}(${t}, halfCR);
    }
  `}function C8(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[a,s]=e.shapeInfo.texShape;if(a===1&&s===1)return`
      float ${r}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=Zi(n);if(t)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});
      return sampleTexture(${n}, uv);
    }
  `;let[o,l]=e.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${o}, ${l}, ${i});
      return sampleTexture(${n}, uv);
    }
  `}function E8(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=bn();if(t)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${n}, uv);
    }
  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${n}, uv);
    }
  `}function $8(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${lu(e)}
      }
    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(i===1&&s===1)return`
      float ${r}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=Zi(n);return i===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);
        return sampleTexture(${n}, uv);
      }
    `:s===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});
      return sampleTexture(${n}, uv);
    }
  `}function A8(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=bn();if(s!=null&&v.arraysEqual(n,s))return t?`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${l.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${l.texture2D}(${r}, uv);
      }
    `;if(t)return`
    vec4 ${a}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `;let p=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],u=Math.ceil(n[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${p[0]}, ${p[1]}, row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `}function R8(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(s!=null&&v.arraysEqual(n,s)){if(t)return`
      float ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;let d=s[0],c=s[1];return`
    float ${a}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${c}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `}let{newShape:i,keptDims:o}=v.squeezeShape(n),l=i;if(l.length<n.length){let d=uu(e,l),c=["row","col"];return`
      ${ou(d,t)}
      float ${a}(int row, int col) {
        return ${a}(${pu(c,o)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${lu(e)}
      }
    `;let p=s[0],u=s[1],h=Zi(r);return u===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${p}.0);
      return sampleTexture(${r}, uv);
    }
  `:p===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:t?`
      float ${a}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${a}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${h};
    vec2 uv = uvFromFlat(${p}, ${u}, index);
    return sampleTexture(${r}, uv);
  }
`}function F8(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(n[0]===1){let d=n.slice(1),c=[1,2],f=uu(e,d),m=["b","row","col"];return`
        ${$2(f,t)}
        vec4 ${a}(int b, int row, int col) {
          return ${a}(${pu(m,c)});
        }
      `}let o=bn();if(t)return`
    vec4 ${a}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `;let l=i[0],p=i[1],u=Math.ceil(n[2]/2),h=u*Math.ceil(n[1]/2);return`
    vec4 ${a}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${p}, ${h}, ${u}, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `}function M8(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=v.squeezeShape(n),p=o;if(p.length<n.length){let m=uu(e,p),g=["row","col","depth"];return`
        ${ou(m,t)}
        float ${a}(int row, int col, int depth) {
          return ${a}(${pu(g,l)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${lu(e)}
      }
    `;let u=e.shapeInfo.texShape,h=u[0],d=u[1],c=e.shapeInfo.flatOffset;if(d===s&&c==null)return t?`
      float ${a}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${a}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(d===i&&c==null)return t?`
      float ${a}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${a}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${r}, uv);
    }
  `;let f=Zi(r);return t?`
    float ${a}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${a}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${r}, uv);
      }
  `}function D8(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=bn();if(t)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);
    }
  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],p=l[0],u=l[1],h=Math.ceil(s[i-1]/2),d=h*Math.ceil(s[i-2]/2),c="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<i-1;m++)c=`int b${m}, `+c,d*=s[i-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${r}(${c}) {
      int index = ${f};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${p});
      return ${a.texture2D}(${n}, uv);
    }
  `}function O8(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:p}=v.squeezeShape(n);if(l.length<n.length){let b=uu(e,l),x=["row","col","depth","depth2"];return`
      ${ou(b,t)}
      float ${a}(int row, int col, int depth, int depth2) {
        return ${a}(${pu(x,p)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${i}, ${s}, 1)));
        ${lu(e)}
      }
    `;let u=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],c=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(c===o&&u==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${d}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(c===s&&u==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${d}.0);
        return sampleTexture(${r}, uv);
      }
    `;let y=Zi(r);return t?`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${d}, ${c}, index + ${y});
      return sampleTexture(${r}, uv);
    }
  `}function L8(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:p}=v.squeezeShape(t);if(l.length<t.length){let m=uu(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${ou(m)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${pu(g,p)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${s}, ${a})) +
          depth3;
        ${lu(e)}
      }
    `;let u=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],c=h[1];if(c===o&&u==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(c===a&&u==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=Zi(n);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${s} +
          depth2 * ${a} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${c}, index);
      return sampleTexture(${n}, uv);
    }
  `}function z8(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=v.squeezeShape(t);if(a.length<t.length){let g=uu(e,a),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${ou(g)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${pu(y,s)});
      }
    `}let i=t[5],o=t[4]*i,l=t[3]*o,p=t[2]*l,u=t[1]*p;if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${p}, ${l}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${lu(e)}
      }
    `;let h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,c=d[0],f=d[1];if(f===u&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${p}, ${l}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===i&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=Zi(n);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${p} + depth * ${l} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};
      vec2 uv = uvFromFlat(${c}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function lu(e){let t=e.name,n=v.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function P8(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=E2(e.shapeInfo.logicalShape,t.logicalShape),l=pt(i),p=i-s,u,h=["x","y","z","w","u","v"];s===0?u="":i<2&&o.length>=1?u="coords = 0;":u=o.map(g=>`coords.${h[g+p]} = 0;`).join(`
`);let d="";i<2&&s>0?d="coords":d=e.shapeInfo.logicalShape.map((g,y)=>`coords.${h[y+p]}`).join(", ");let c="return outputValue;",f=v.sizeFromShape(e.shapeInfo.logicalShape)===1,m=v.sizeFromShape(t.logicalShape)===1;if(s===1&&!f&&!m)c=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(f&&!m)i===1?c=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:c=`
        return vec4(outputValue.x);
      `;else if(o.length){let g=s-2,y=s-1;o.indexOf(g)>-1&&o.indexOf(y)>-1?c="return vec4(outputValue.x);":o.indexOf(g)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(y)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${a}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${r}(${d});
      ${c}
    }
  `}function B8(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&e.shapeInfo.flatOffset==null&&v.arraysEqual(i,s))return`
      float ${a}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let p=pt(l),u=E2(e.shapeInfo.logicalShape,t.logicalShape),h=l-o,d,c=["x","y","z","w","u","v"];o===0?d="":l<2&&u.length>=1?d="coords = 0;":d=u.map(m=>`coords.${c[m+h]} = 0;`).join(`
`);let f="";return l<2&&o>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${c[g+h]}`).join(", "),`
    float ${a}() {
      ${p} coords = getOutputCoords();
      ${d}
      return get${r}(${f});
    }
  `}function pt(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Ox(e,t,n){let{newShape:r,keptDims:a}=v.squeezeShape(t),s=t.length,i=e&&s===3&&t[0]===1,o=i?t.slice(1):r,l=!e&&s>1&&!v.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function uu(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function pu(e,t){return t.map(n=>e[n]).join(", ")}function W8(e,t,n,r){let a=n.map((u,h)=>{let d={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:u.isUniform?!1:u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(d.flatOffset=u.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:d}}),s=a.map(u=>u.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=s8(a,i,t),l=o2(e.gl,o),p=e.createProgram(l);return q().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:p,inShapeInfos:s,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:p,inShapeInfos:s,outShapeInfo:i},R2(e,t,p))}function R2(e,t,n){let r={},a={},s={},i=[],o,l,p,u=null,h=null;h=e.getUniformLocation(n,"NAN",!1),q().getNumber("WEBGL_VERSION")===1&&(u=e.getUniformLocation(n,"INFINITY",!1));let d=!1;for(let c=0;c<t.variableNames.length;c++){let f=t.variableNames[c];r[f]=e.getUniformLocation(n,f,d),r[`offset${f}`]=e.getUniformLocation(n,`offset${f}`,d),t.enableShapeUniforms&&(a[`${f}Shape`]=e.getUniformLocation(n,`${f}Shape`,d),s[`${f}TexShape`]=e.getUniformLocation(n,`${f}TexShape`,d))}return t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",d),p=e.getUniformLocation(n,"outShapeStrides",d),l=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach((c,f)=>{i[f]=e.getUniformLocation(n,c.name,d)}),{uniformLocations:r,customUniformLocations:i,infLoc:u,nanLoc:h,inShapesLocations:a,inTexShapesLocations:s,outShapeLocation:o,outShapeStridesLocation:p,outTexShapeLocation:l}}function Xv(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,r)=>{let a=n.logicalShape,s=t[r],i=s.shape;if(!v.arraysEqual(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(n.isUniform&&s.isUniform)return;let o=n.texShape,l=s.isUniform?null:s.texData.texShape;if(!v.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function V8(e,t,n,r,a){t.program.enableShapeUniforms||(Xv(t.inShapeInfos,n),Xv([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),q().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((l,p)=>{let u=t.program.variableNames[p],h=t.uniformLocations[u],d=t.uniformLocations[`offset${u}`],c=t.inShapesLocations[`${u}Shape`],f=t.inTexShapesLocations[`${u}TexShape`];if(c){let{uniformShape:m}=Ox(t.program.packedInputs,l.shape,l.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(c,new Int32Array(m));break;case 2:e.gl.uniform2iv(c,new Int32Array(m));break;case 3:e.gl.uniform3iv(c,new Int32Array(m));break;case 4:e.gl.uniform4iv(c,new Int32Array(m));break}}if(f&&e.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),h!=null){if(l.isUniform){if(v.sizeFromShape(l.shape)<2)e.gl.uniform1f(h,l.uniformValues[0]);else{let m=l.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(h,m)}return}l.texData.slice!=null&&d!=null&&e.gl.uniform1i(d,l.texData.slice.flatOffset),e.setInputMatrixTexture(l.texData.texture.texture,h,p)}});let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape));break}if(t.outShapeStridesLocation){let l=v.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach((l,p)=>{let u=t.customUniformLocations[p],h=a[p];if(l.type==="float")e.gl.uniform1fv(u,h);else if(l.type==="vec2")e.gl.uniform2fv(u,h);else if(l.type==="vec3")e.gl.uniform3fv(u,h);else if(l.type==="vec4")e.gl.uniform4fv(u,h);else if(l.type==="int")e.gl.uniform1iv(u,h);else if(l.type==="ivec2")e.gl.uniform2iv(u,h);else if(l.type==="ivec3")e.gl.uniform3iv(u,h);else if(l.type==="ivec4")e.gl.uniform4iv(u,h);else throw Error(`uniform type ${l.type} is not supported yet.`)}),e.executeProgram()}function U8(e,t,n){let r="";t.concat(n).forEach(i=>{let o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!i.isUniform){let l=i.texData.texShape,{useSqueezeShape:p,uniformShape:u,keptDims:h}=Ox(e.packedInputs,i.shape,l),d="",c="",f="";if(u.length===1&&e.packedInputs){let I=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${I[0]>1}_${I[1]>1}`}else if(u.length===2&&!e.packedInputs)c=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!e.packedInputs){let I=v.computeStrides(u);f=`${I[0]===l[1]}_${I[I.length-1]===l[1]}`}let m=i.shape.length,g=u.length===2&&v.arraysEqual(i.shape,l),y=v.sizeFromShape(i.shape)===1,b=T.getBroadcastDims(i.shape,n.shape),x=!e.packedInputs&&m===n.shape.length&&v.arraysEqual(l,n.texData.texShape),w=e.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;r+=`${m}_${x}_${p?h:""}_${u.length}_${y}_${b}_${g}_${d}_${c}_${f}_${w}_${o}`}else{let l=i.isUniform?"uniform":i.texData.texShape;r+=`${i.shape}_${l}_${o}`}});let a=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+a+`${q().getNumber("WEBGL_VERSION")}`,s}function xn(e){return q().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var G8=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Qu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=bn();this.outputShape=e,this.enableShapeUniforms=xn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Sf(["r","c","d"],e):Xi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},H8=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Qu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=bn();this.outputShape=e,this.enableShapeUniforms=xn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Sf(["r","c","d"],e):Xi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},q8=class{constructor(e){this.variableNames=["A"],this.outTexUsage=Qn.DOWNLOAD;let t=bn();this.outputShape=e,this.userCode=`
      ${C2}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},j8=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Qn.DOWNLOAD;let t=bn();this.outputShape=e,this.userCode=`
      ${C2}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},K8={R:0,G:1,B:2,A:3},Zv=class{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=bn();this.outputShape=e,this.enableShapeUniforms=xn(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let i=0;i<n.length;i++){let o=n[i];s+=`
          if(offset == ${i}) {
            result = values[${K8[o]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Dx():Mx(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${n.length});

        flatIndex = idiv(flatIndex, ${n.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${s}
        }
        ${r.output} = vec4(${a}, 0., 0., 0.);
      }
    `}},X8=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=bn();this.outputShape=e,this.enableShapeUniforms=xn(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let i=0;i<=1;i++){let o=s*2+i;r+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${s};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${o}] = values[0];
            } else if (offset == 1) {
              result[${o}] = values[1];
            } else if (offset == 2) {
              result[${o}] = values[2];
            } else {
              result[${o}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Dx():Mx(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${n.output} = ${a};
        }
    `}},F2={};Ee(F2,{bindVertexProgramAttributeStreams:()=>V2,createBufferFromOutputTexture:()=>H2,createFloat16MatrixTexture:()=>z2,createFloat16PackedMatrixTexture:()=>W2,createFloat32MatrixTexture:()=>L2,createIndexBuffer:()=>O2,createPackedMatrixTexture:()=>B2,createUnsignedBytesMatrixTexture:()=>P2,createVertexBuffer:()=>D2,createVertexShader:()=>M2,downloadByteEncodedFloatMatrixFromOutputTexture:()=>j2,downloadFloat32MatrixFromBuffer:()=>q2,downloadMatrixFromPackedOutputTexture:()=>X2,downloadPackedMatrixFromBuffer:()=>K2,getInternalFormatForFloat16MatrixTexture:()=>zx,getInternalFormatForFloat16PackedMatrixTexture:()=>Wx,getInternalFormatForFloat32MatrixTexture:()=>Lx,getInternalFormatForPackedMatrixTexture:()=>Bx,getInternalFormatForUnsignedBytesMatrixTexture:()=>Px,uploadDenseMatrixToTexture:()=>U2,uploadPixelDataToTexture:()=>G2});function M2(e){let t=bn(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return i2(e,n)}function D2(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return p2(e,t)}function O2(e){let t=new Uint16Array([0,1,2,2,1,3]);return h2(e,t)}function ah(e,t,n,r,a,s){c2(t,n);let i=d2(e),o=e.TEXTURE_2D;return fe(e,()=>e.bindTexture(o,i)),fe(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),fe(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),fe(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),fe(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),q().getNumber("WEBGL_VERSION")===1?fe(e,()=>e.texImage2D(o,0,r,t,n,0,a,s,null)):fe(e,()=>e.texStorage2D(o,1,r,t,n)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[n,t]}}function Lx(e){return e.internalFormatFloat}function L2(e,t,n,r){let[a,s]=rh(t,n);return ah(e,a,s,Lx(r),r.textureFormatFloat,e.FLOAT)}function zx(e){return e.internalFormatHalfFloat}function z2(e,t,n,r){let[a,s]=rh(t,n);return ah(e,a,s,zx(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function Px(e){return e.downloadTextureFormat}function P2(e,t,n,r){let[a,s]=rh(t,n);return ah(e,a,s,Px(r),e.RGBA,e.UNSIGNED_BYTE)}function Bx(e){return e.internalFormatPackedFloat}function B2(e,t,n,r){let[a,s]=su(t,n);return ah(e,a,s,Bx(r),e.RGBA,e.FLOAT)}function Wx(e){return e.internalFormatPackedHalfFloat}function W2(e,t,n,r){let[a,s]=su(t,n);return ah(e,a,s,Wx(r),e.RGBA,r.textureTypeHalfFloat)}function V2(e,t,n){return fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),qm(e,t,"clipSpacePos",n,3,20,0)&&qm(e,t,"uv",n,2,20,12)}function U2(e,t,n,r,a,s){fe(e,()=>e.bindTexture(e.TEXTURE_2D,t));let i,o,l;a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),q().getNumber("WEBGL_VERSION")===2?fe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i)):fe(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function G2(e,t,n){fe(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?q().getNumber("WEBGL_VERSION")===2?fe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):fe(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):q().getNumber("WEBGL_VERSION")===2?fe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):fe(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function H2(e,t,n,r){let a=e.createBuffer();fe(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));let s=4*4*t*n;return fe(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),fe(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),fe(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}function q2(e,t,n){let r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function j2(e,t,n,r){let[a,s]=rh(t,n),i=4,o=new Uint8Array(HK(t*n,i));return fe(e,()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function K2(e,t,n,r,a,s,i,o){let l=e,p=new Float32Array(qK(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,p),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),p}function X2(e,t,n){let r=new Float32Array(t*n*4);return fe(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}var Zh=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=q().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,r2(t,e)):this.gl=Cr(t);let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),q().getNumber("WEBGL_VERSION")===1){let a="OES_texture_float",s="OES_texture_half_float";if(this.textureFloatExtension=Ru(this.gl,a),er(this.gl,s))this.textureHalfFloatExtension=Ru(this.gl,s);else if(q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),er(this.gl,r))this.colorBufferHalfFloatExtension=Ru(this.gl,r);else if(q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",er(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(er(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=D2(this.gl),this.indexBuffer=O2(this.gl),this.framebuffer=f2(this.gl),this.textureConfig=Rx(this.gl,this.textureHalfFloatExtension)}get debug(){return q().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;fe(e,()=>e.finish()),fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),fe(e,()=>e.deleteFramebuffer(this.framebuffer)),fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),fe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),fe(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),L2(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),z2(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),P2(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),G2(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),U2(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),W2(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),B2(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(jm(this.gl,this.framebuffer),this.outputTexture=null),fe(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>j2(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return K2(this.gl,e,t,n,r,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return q2(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=H2(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(q().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let s=r.clientWaitSync(a,0,0);return s===r.ALREADY_SIGNALED||s===r.CONDITION_SATISFIED},t=a}else q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>X2(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=M2(t));let n=l2(t);return fe(t,()=>t.attachShader(n,this.vertexShader)),fe(t,()=>t.attachShader(n,e)),u2(t,n),this.debug&&qh(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=V2(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&fe(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&qh(this.gl,this.program),fe(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?g2(this.gl,e,t):y2(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),fe(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),b2(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=su(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&qh(this.gl,this.program),Fu(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),fe(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),fe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Ru(this.gl,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=n.createQuery();return n.beginQuery(r.TIME_ELAPSED_EXT,a),a}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await v.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),r=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=Z8(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in q().platform&&(n=q().platform.setTimeoutCustom.bind(q().platform)),v.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),jh(this.gl,e,this.framebuffer),this.debug&&Fu(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(jh(this.gl,this.outputTexture,this.framebuffer),this.debug&&Fu(this.gl)):jm(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;jh(r,e,this.framebuffer),this.debug&&Fu(r),this.outputTexture=e,fe(r,()=>r.viewport(0,0,t,n)),fe(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),fe(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function Z8(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:Y8,bincountImpl:Z2,bincountReduceImpl:J8,castImpl:Q8,ceilImpl:eX,concatImpl:tX,equalImpl:nX,expImpl:rX,expm1Impl:aX,floorImpl:sX,gatherNdImpl:iX,gatherV2Impl:oX,greaterImpl:lX,greaterEqualImpl:uX,lessImpl:pX,lessEqualImpl:hX,linSpaceImpl:dX,logImpl:cX,maxImpl:fX,maximumImpl:mX,minimumImpl:gX,multiplyImpl:yX,negImpl:bX,notEqualImpl:xX,prodImpl:wX,raggedGatherImpl:vX,raggedRangeImpl:kX,raggedTensorToTensorImpl:IX,rangeImpl:SX,rsqrtImpl:NX,scatterImpl:TX,sigmoidImpl:_X,simpleAbsImpl:Y2,sliceImpl:CX,sparseFillEmptyRowsImpl:EX,sparseReshapeImpl:$X,sparseSegmentReductionImpl:J2,sqrtImpl:AX,stridedSliceImpl:RX,stringNGramsImpl:FX,stringSplitImpl:MX,stringToHashBucketFastImpl:DX,subImpl:OX,tileImpl:LX,topKImpl:zX,transposeImpl:Vx,uniqueImpl:PX}=eN;function Q2(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function pn(e,t){return t===1?[e]:Q2(e,t)}function BX(e,t){if(e===1)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}var WX=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=xn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=pn("rc",this.rank),n=pt(this.rank),r=this.getOutOfBoundsCondition(t),a=this.getSetup(t),s=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${s}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${n===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let s=2;s<this.rank;s++)a=`${e[e.length-1-s]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},eT=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=xn(this.outputShape.length);let n="";for(let r=0;r<4;r++){let a="thisRC = rc;";r%2===1&&(a+="thisRC.z += 1;"),r>1&&(a+="thisRC.y += 1;"),n+=`
        ${a}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${VX(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Dx():Mx(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function VX(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?a8(["r","c","d"],"inputShape"):Xi(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var UX=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let r=Jv(t,n),a=Qv(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s=Yv(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let o=this.freeTextures[a].shift();return this.usedTextures[a].push(o),o}let i;return r===Zt.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===Zt.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===Zt.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===Zt.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===Zt.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(this.freeTextures==null)return;let a=Jv(n,r),s=Qv(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=Yv(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=q().get("WEBGL_DELETE_TEXTURE_THRESHOLD");o!==-1&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],p=l.indexOf(e);if(p<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(p,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function GX(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F||t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function Yv(e,t,n,r,a){let s=HX(t,r),i;if(a){let[l,p]=su(e[0],e[1]);i=l*p}else{let[l,p]=rh(e[0],e[1]);i=l*p}let o=GX(n,s);return i*o}function HX(e,t){switch(e){case Zt.PACKED_2X2_FLOAT32:return Bx(t);case Zt.PACKED_2X2_FLOAT16:return Wx(t);case Zt.UNPACKED_FLOAT32:return Lx(t);case Zt.UNPACKED_FLOAT16:return zx(t);case Zt.PACKED_4X1_UNSIGNED_BYTE:return Px(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function qX(e){return q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Zt.PACKED_2X2_FLOAT32:Zt.UNPACKED_FLOAT32:e?Zt.PACKED_2X2_FLOAT16:Zt.UNPACKED_FLOAT16}function Jv(e,t){if(e===Qn.UPLOAD)return Zt.PACKED_2X2_FLOAT32;if(e===Qn.RENDER||e==null)return qX(t);if(e===Qn.DOWNLOAD||e===Qn.PIXELS)return Zt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Qv(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var ia=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=xn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},br="if (isnan(x)) return x;",jX="return x;",e0="return abs(x);",KX="return (x >= 0.0) ? x : (exp(x) - 1.0);",XX=br+`
  return (x < 0.0) ? 0.0 : x;
`,ZX=br+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,ro="return x;",YX="return 1.0 / (1.0 + exp(-1.0 * x));",JX="return x;",QX=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,e7=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,t7=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,n7="return 1.0 / (1.0 + exp(-1.0 * x));",ws=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=xn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},r7=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=xn(this.outputShape.length);let t=e.length,n=pn("rc",t),r=pt(t),a=BX(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${a});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}},a7=jr.whereImpl,s7=1e-7,i7=1e-4,Yf={};function o7(e){return e in Yf||(Yf[e]={}),Yf[e]}var l7=q().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),u7=600;function p7(){return q().global.screen==null?1024:q().global.screen.height*q().global.screen.width*window.devicePixelRatio*u7/1024/1024}var Nf=class extends op{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!q().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Zh)t=e;else{let n=Cr(q().getNumber("WEBGL_VERSION"),e);t=new Zh(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=Cr(q().getNumber("WEBGL_VERSION"));t=new Zh(n),this.binaryCache=o7(q().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new UX(this.gpgpu),this.numMBBeforeWarning=p7(),this.texData=new Od(this,hr())}nextDataId(){return Nf.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,a,s){let i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,a]},o.texShape=[r,a];let l=Mu(t),p=new Zv(l,!1,s),u=this.runWebGLProgram(p,[i],n,[[r,a]]);return u.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),u.dataId}write(e,t,n){if((q().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||q().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:Qn.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,r,a){if(q().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:Qn.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(s!=null){let h;o?h=new ws(i,ro):h=new ia(i,ro);let d=this.runWebGLProgram(h,[{dataId:e,shape:i,dtype:r}],r),c=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),c}if(n!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return n;let l=this.activeTimers!=null,p;l&&(p=v.now());let u;if(r==="complex64"){let h=this.readSync(a.real.dataId),d=this.readSync(a.imag.dataId);u=T.mergeRealAndImagArrays(h,d)}else u=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=v.now()-p),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let c=this.pendingRead.get(e);return new Promise(f=>c.push(f))}let t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(a!=null){let c;o?c=new ws(r,ro):c=new ia(r,ro);let f=this.runWebGLProgram(c,[{dataId:e,shape:r,dtype:s}],s),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(n!=null)return this.convertAndCacheOnCPU(e);if(q().getBool("DEBUG")&&!q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&q().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,p;if(s!=="complex64"&&q().get("WEBGL_BUFFER_SUPPORTED")){p=this.decode(e);let c=this.texData.get(p.dataId);l=this.gpgpu.createBufferFromTexture(c.texture.texture,...Oh(r))}this.pendingRead.set(e,[]),s!=="complex64"&&await this.gpgpu.createAndWaitForFence();let u;if(s==="complex64"){let c=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),f=c[0],m=c[1];u=T.mergeRealAndImagArrays(f,m)}else if(l==null)u=this.getValuesFromTexture(e);else{let c=v.sizeFromShape(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(l,c)}if(p!=null&&this.disposeIntermediateTensorInfo(p),l!=null){let c=this.gpgpu.gl;fe(c,()=>c.deleteBuffer(l))}let h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(c=>c(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&hr().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){let n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:i,isPacked:o,texture:l}=n;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(s!=null){let d;o?d=new ws(a,ro):d=new ia(a,ro);let c=this.runWebGLProgram(d,[{dataId:e,shape:a,dtype:i}],i),f=this.readToGPU(c,t);return this.disposeIntermediateTensorInfo(c),f}if(l==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let p=this.decode(e,t.customTexShape),u=hr().makeTensorFromTensorInfo(p),h=this.texData.get(p.dataId);return Object.assign({tensorRef:u},h.texture)}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(r=>v.decodeString(r));return Le(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!a2(n))throw q().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=v.sizeFromShape(t);if(q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let h=this.decode(e),d=this.texData.get(h.dataId),c=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...Oh(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(h),c}let s=q().getBool("WEBGL_PACK")&&r===!0,i=s?Mu(t):t,o=s?new j8(i):new q8(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),p=this.texData.get(l.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture.texture,p.texShape[0],p.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),u}timerAvailable(){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],r=!1;this.programTimersStack==null?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let a=v.flatten(this.activeTimers.map(o=>o.query)).filter(o=>o!=null),s=v.flatten(this.activeTimers.map(o=>o.name)).filter(o=>o!=null);this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let o=await Promise.all(a);i.kernelMs=v.sum(o),i.getExtraProfileInfo=()=>o.map((l,p)=>({name:s[p],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:v.now(),endMs:null}}endTimer(e){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=v.now(),e)}async getQueryTime(e){if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));let p=this.texData.get(e);p.texture=null,p.texShape=null,p.isPacked=!1,p.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=l7){return q().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&v.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){T.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return a7(e.shape,t)}packedUnaryOp(e,t,n){let r=new ws(e.shape,t),a=this.compileAndRun(r,[e],n);return hr().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let r=Y2(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,e0,e.dtype);let t=new ia(e.shape,e0),n=this.compileAndRun(t,[e]);return hr().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let a=n.map(s=>v.encodeString(s));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return hr().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new r7(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new WX(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[Bs(e.shape),...Ws(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[Bs(t),...Ws(t)],s=new eT(a,n),i=!0,o=[n],l=this.runWebGLProgram(s,[r],e.dtype,o,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;if(t!=null){let h=v.sizeFromShape(a),d=t[0]*t[1]*4;v.assert(h<=d,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let i=Mu(a),o;r?o=new H8(i):o=new G8(i);let l=!0,p=[t!=null?t:Oh(i)],u=this.runWebGLProgram(o,[{shape:i,dtype:s,dataId:e}],s,p,l,t);return{dtype:s,shape:a,dataId:u.dataId}}runWebGLProgram(e,t,n,r,a=!1,s){let i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===Qu.DENSE){let g=s!=null?s:Oh(e.outputShape);o.texShape=g.map(y=>y*2)}if(e.outTexUsage!=null&&(o.usage=e.outTexUsage),v.sizeFromShape(i.shape)===0)return o.values=v.getTypedArrayFromDType(i.dtype,0),i;let l=[],p=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(g.dataId);if(y.texture==null){if(!e.packedInputs&&v.sizeFromShape(g.shape)<=q().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!y.isPacked!=!!e.packedInputs)g=y.isPacked?this.unpackTensor(g):this.packTensor(g),l.push(g),y=this.texData.get(g.dataId);else if(y.isPacked&&!ep(y.shape,g.shape)){let b=g,x=g.shape;g.shape=y.shape,g=this.packedReshape(g,x),l.push(g),y=this.texData.get(g.dataId),b.shape=x}return{shape:g.shape,texData:y,isUniform:!1}});this.uploadToGPU(i.dataId);let u={shape:i.shape,texData:o,isUniform:!1},h=U8(e,p,u),d=this.getAndSaveBinary(h,()=>W8(this.gpgpu,e,p,u)),c=this.activeTimers!=null,f;c&&(f=this.startTimer()),q().get("ENGINE_COMPILE_ONLY")||V8(this.gpgpu,d,p,u,r),l.forEach(g=>this.disposeIntermediateTensorInfo(g)),c&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));let m=q().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let g=v.now();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!q().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&a===!1){let g=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),g}return i}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(q().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=B(()=>{if(!q().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=q().getBool("DEBUG");q().set("DEBUG",!1);let t=this.abs(ve(1e-8)).dataSync()[0];if(q().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?s7:i7}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(s!=null)return;let l=this.activeTimers!=null,p;l&&(p=v.now());let u=t.texShape;if(u==null&&(u=v2(n,o),t.texShape=u),a!=null){let h=Mu(n),d,c=u[1],f=u[0],m=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(o||!m)&&([c,f]=su(u[0],u[1])),o?d=new X8(h,m):d=new Zv(h,m);let g=m?[f,c]:u,y=this.makeTensorInfo(g,r),b=this.texData.get(y.dataId);m?b.usage=Qn.PIXELS:b.usage=Qn.UPLOAD,b.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),c,f,a);let x=[[f,c]],w=!0,I=this.runWebGLProgram(d,[y],r,x,w),N=this.texData.get(I.dataId);t.texShape=N.texShape,t.isPacked=N.isPacked,t.usage=N.usage,q().get("ENGINE_COMPILE_ONLY")?this.disposeData(I.dataId):(t.texture=N.texture,t.values=null,this.texData.delete(I.dataId)),this.disposeIntermediateTensorInfo(y),l&&(this.uploadWaitMs+=v.now()-p)}else{let h=this.acquireTexture(u,i,r,o);t.texture=h}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),t!=null&&(n.values=h7(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${a} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*v.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise(r=>{try{this.checkCompletion_(t),r(!0)}catch(a){throw a}});e.push(n)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Dy(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Fx(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:p}=R2(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.inShapesLocations=s,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=p}}createTensorFromTexture(e,t,n){let{texture:r,height:a,width:s,channels:i}=e,o=hr().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let l=o.writeTexture(r,t,n,a,s,i);return hr().makeTensorFromDataId(l,t,n,o)}};Nf.nextDataId=0;function h7(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let r=0;r<n.length;++r)n[r]=Math.round(e[r]);return n}else throw new Error(`Unknown dtype ${t}`)}var d7="4.0.0";function tT(){q().set("WEBGL_FORCE_F16_TEXTURES",!0)}Cp.isBrowser()&&xc("webgl",()=>new Nf,2);var c7={forceHalfFloat:tT},Ux=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,zo=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=xn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},sh=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`,ih=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=T.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length;this.enableShapeUniforms=xn(a);let s="";if(r)if(a===0||v.sizeFromShape(this.outputShape)===1)s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(s=`
          ${pt(a)} coords = getOutputCoords();
        `,a===1)this.enableShapeUniforms?s+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=pn("coords",a);this.enableShapeUniforms?s+=`
            bool nextRowOutOfBounds =
              (${i[a-2]} + 1) >= outShape[${a} - 2];
            bool nextColOutOfBounds =
              (${i[a-1]} + 1) >= outShape[${a} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:s+=`
            bool nextRowOutOfBounds =
              (${i[a-2]} + 1) >= ${this.outputShape[a-2]};
            bool nextColOutOfBounds =
              (${i[a-1]} + 1) >= ${this.outputShape[a-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}};function jn(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var f7={kernelName:ui,backendName:"webgl",kernelFunc:jn};function Qa(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=jn({inputs:{x:r},backend:n}),l=jn({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var m7={kernelName:Ud,backendName:"webgl",kernelFunc:Qa},nT="return (a < 0.) ? b * a : a;",rT=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function g7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",v.createScalarValue(s,"float32")),o=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ih(rT,a.shape,i.shape):new zo(nT,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}var y7={kernelName:pi,backendName:"webgl",kernelFunc:g7},aT="return (a < 0.) ? b * a : a;",sT=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function b7(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ih(sT,r.shape,a.shape):new zo(aT,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}var x7={kernelName:Ii,backendName:"webgl",kernelFunc:b7},hu="if (isnan(x)) return x;";function qe({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{let{x:i}=a,o=s,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&n!=null){let h=o.texData.get(i.dataId),d=n(h.values,l);return o.makeTensorInfo(i.shape,l,d)}let p=q().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,u;return p?u=new ws(i.shape,t):u=new ia(i.shape,e),o.runWebGLProgram(u,[i],l)}}function en({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:p}=i,u=o;if(r&&l.dtype==="complex64"){let f=u.texData.get(l.dataId),m=u.texData.get(p.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(x=>{let[w,I]=x,N={dataId:w.dataId,dtype:w.dtype,shape:l.shape},C={dataId:I.dataId,dtype:I.dtype,shape:p.shape},E=new zo(e,l.shape,p.shape);return u.runWebGLProgram(E,[N,C],rr(w.dtype,I.dtype))}),b=Qa({inputs:{real:g,imag:y},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(y),b}let h=s||rr(l.dtype,p.dtype);if((l.dtype==="string"||p.dtype==="string"||u.shouldExecuteOnCPU([l,p]))&&a!=null){let f=u.texData.get(l.dataId).values,m=u.texData.get(p.dataId).values,g=l.dtype==="string"?T.fromUint8ToStringArray(f):f,y=l.dtype==="string"?T.fromUint8ToStringArray(m):m,[b,x]=a(l.shape,p.shape,g,y,h),w=u.makeTensorInfo(x,h),I=u.texData.get(w.dataId);return I.values=b,w}let d=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,c;return d?c=new ih(t,l.shape,p.shape,n):c=new zo(e,l.shape,p.shape),u.runWebGLProgram(c,[l,p],h)}}function tp(e,t=!1){if(e==="linear")return t?JX:jX;if(e==="relu")return t?e7:XX;if(e==="elu")return t?QX:KX;if(e==="relu6")return t?t7:ZX;if(e==="prelu")return t?sT:aT;if(e==="leakyrelu")return t?rT:nT;if(e==="sigmoid")return t?n7:YX;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var iT=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=xn(this.outputShape.length);let p=r?e[1]:e[2],u=Math.ceil(p/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(o?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:m=`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${u}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${u}; i++) {
          int batchA = ${b};
          int batchB = ${x};
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${c[0]} * ${f[0]});
          result += (${c[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},t0={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},n0=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},r0="return a * b;";function Gx(e){let{inputs:t,backend:n}=e,{a:r,b:a}=t,s=T.upcastType(r.dtype,a.dtype);if(r.dtype==="complex64"){let o=n.texData.get(r.dataId),l=n.texData.get(a.dataId),p=new n0(t0.REAL,r.shape,a.shape),u=new n0(t0.IMAG,r.shape,a.shape),h=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:r.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:a.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:a.shape}],d=n.runWebGLProgram(p,h,"float32"),c=n.runWebGLProgram(u,h,"float32"),f=Qa({inputs:{real:d,imag:c},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),f}if(n.shouldExecuteOnCPU([r,a])){let o=n.texData.get(r.dataId),l=n.texData.get(a.dataId),[p,u]=yX(r.shape,a.shape,o.values,l.values,s),h=n.makeTensorInfo(u,s),d=n.texData.get(h.dataId);return d.values=p,h}let i;return q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new ih(r0,r.shape,a.shape):i=new zo(r0,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}var w7={kernelName:xi,backendName:"webgl",kernelFunc:Gx};function v7(e,t,n){let r=[Bs(e.shape),...Ws(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[Bs(t),...Ws(t)],i=new eT(s,r),o=!0,l=[r],p=n.runWebGLProgram(i,[a],e.dtype,l,o);return{dataId:p.dataId,shape:t,dtype:p.dtype}}function ue(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=v.sizeFromShape(a.shape),l=v.inferFromImplicitShape(s,o),p=v.sizeFromShape(l);v.assert(o===p,()=>`The new shape (${l}) has ${p} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let u=i.texData.get(a.dataId);return u.isPacked&&!ep(a.shape,l)&&!(u.texture!==null&&ep(u.shape,l))?v7(a,l,i):(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype})}var k7={kernelName:Cl,backendName:"webgl",kernelFunc:ue},a0=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=Math.floor(n/4)*4,o=n%4,l="sumValue += dot(values, ones);";if(t!=null){let u=1/t;l=`sumValue += dot(values * ${v.isInt(u)?u.toPrecision(2):u}, ones);`}let p="";a%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${o===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${o===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${o===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},I7=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",o="min"):t==="max"&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let p=Math.floor(n/4)*4,u=n%4,h=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";t==="all"?(i="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):t==="any"&&(i="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let c="";a%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${p};
        if (${u===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${u===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${u===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${l});
      }
    `}};function S7(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],r=T.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}function Yi(e,t,n,r){let a=S7(e.shape),s=e;for(let i=0;i<a.length;i++){let{inSize:o,windowSize:l,outSize:p}=a[i],u,h;n==="mean"?u=i===0?new a0({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:p},o):new a0({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:p}):u=new I7({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:p},n),h=s,s=r.runWebGLProgram(u,[s],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return s}var N7=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;let r=pt(this.rank),a=T7(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${a}));
    }
    `}};function T7(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}var _7=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let p=0;p<n.length;p++)n[p]=e[t[p]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=pt(this.rank),a=Q2("rc",this.rank),s=new Array(this.rank);for(let p=0;p<t.length;p++)s[t[p]]=a[p];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${o}) {
        result[1] = ${l};
      }
      --${a[this.rank-1]};
      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${o}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function Tf(e,t,n){let r=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _7(e.shape,t):new N7(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function C7(e,t,n,r){let a=t,s=e.shape.length,i=v.parseAxisParam(a,e.shape),o=i,l=T.getAxesPermutation(o,s),p=l!=null,u=e;p&&(u=Tf(e,l,r),o=T.getInnerMostAxes(o.length,s)),T.assertAxesAreInnerMostDims("sum",o,s);let[h,d]=T.computeOutAndReduceShapes(u.shape,o),c=h;n&&(c=T.expandShapeToKeepDim(h,i));let f=v.sizeFromShape(d),m=v.sizeFromShape(e.shape)/f,g=ue({inputs:{x:u},attrs:{shape:[m,f]},backend:r}),y=bc(e.dtype),b=Yi(g,y,"sum",r),x=ue({inputs:{x:b},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(b),p&&r.disposeIntermediateTensorInfo(u),x}function _f(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return C7(a,s,i,n)}var E7={kernelName:Di,backendName:"webgl",kernelFunc:_f};function cn(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,l=new Array(o);for(let u=0;u<l.length;u++)l[u]=a.shape[s[u]];let p;if(i.shouldExecuteOnCPU([a])){let u=i.texData.get(a.dataId).values,h=Vx(u,a.shape,a.dtype,s,l);p=i.makeTensorInfo(l,a.dtype);let d=i.texData.get(p.dataId);d.values=h}else p=Tf(a,s,i);return p}var $7={kernelName:oa,backendName:"webgl",kernelFunc:cn},oT=1e3;function _d({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let p=e.shape.length,u=t.shape.length,h=n?e.shape[p-2]:e.shape[p-1],d=r?t.shape[u-1]:t.shape[u-2],c=n?e.shape[p-1]:e.shape[p-2],f=r?t.shape[u-2]:t.shape[u-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=v.sizeFromShape(m),b=v.sizeFromShape(g),x=Hl.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);v.assert(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);let w=n?[y,h,c]:[y,c,h],I=r?[b,f,d]:[b,d,f],N=ue({inputs:{x:e},backend:a,attrs:{shape:w}}),C=ue({inputs:{x:t},backend:a,attrs:{shape:I}}),E=[N,C],$=Math.max(y,b),F=n?N.shape[1]:N.shape[2],R=s!=null,S=i!=null,D=l==="leakyrelu",W=l!=null?tp(l,!0):null,U=R||S||D||W!=null,G;if((c===1||f===1)&&F>oT&&U===!1){let H=N,X=C;n&&(H=cn({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),E.push(H)),r&&(X=cn({inputs:{x:C},backend:a,attrs:{perm:[0,2,1]}}),E.push(X));let ee=f!==1,Z=f===1,re=H;ee&&(re=ue({inputs:{x:H},backend:a,attrs:{shape:[$,F,1]}}),E.push(re));let te=f===1?2:1,ae=X;Z&&(ae=ue({inputs:{x:X},backend:a,attrs:{shape:[$,1,F]}}),E.push(ae));let oe=Gx({inputs:{a:re,b:ae},backend:a});G=_f({inputs:{x:oe},backend:a,attrs:{axis:te,keepDims:!0}}),E.push(oe)}else{let H=rr(e.dtype,t.dtype),X=new iT(w,I,[$,c,f],n,r,R,W,S,D),ee=[N,C];if(s!=null&&ee.push(s),S&&ee.push(i),D){let Z=a.makeTensorInfo([],"float32",v.createScalarValue(o,"float32"));ee.push(Z),E.push(Z)}G=a.runWebGLProgram(X,ee,H)}let j=ue({inputs:{x:G},backend:a,attrs:{shape:x}});E.push(G);for(let H of E)a.disposeIntermediateTensorInfo(H);return j}function A7(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:p,activation:u,leakyreluAlpha:h}=r;return _d({a,b:s,transposeA:l,transposeB:p,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:u})}var R7={kernelName:_s,backendName:"webgl",kernelFunc:A7},s0="return abs(x);";function F7(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){let s=n.texData.get(r.dataId),i=Y2(s.values);return n.makeTensorInfo(r.shape,r.dtype,i)}let a;return q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new ws(r.shape,s0):a=new ia(r.shape,s0),n.runWebGLProgram(a,[r],r.dtype)}var M7={kernelName:Wo,backendName:"webgl",kernelFunc:F7},D7=br+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,O7=qe({opSnippet:D7}),L7={kernelName:Vo,backendName:"webgl",kernelFunc:O7},z7=br+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,P7=qe({opSnippet:z7}),B7={kernelName:Uo,backendName:"webgl",kernelFunc:P7},i0="return a + b;",W7=en({opSnippet:i0,packedOpSnippet:i0,supportsComplex:!0,cpuKernelImpl:Y8}),V7={kernelName:Ua,backendName:"webgl",kernelFunc:W7},U7=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((a,s)=>`T${s}`);let n=[];this.variableNames.forEach(a=>{n.push(`float v${a} = get${a}AtOutCoords();`)});let r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}},G7=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((a,s)=>`T${s}`);let n=[];this.variableNames.forEach(a=>{n.push(`vec4 v${a} = get${a}AtOutCoords();`)});let r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}};function Yh(e){let{inputs:t,backend:n}=e,r=t;if(r.length===1)return jn({inputs:{x:r[0]},backend:n});if(r.length>q().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let o=Math.floor(r.length/2),l=Yh({inputs:r.slice(0,o),backend:n}),p=Yh({inputs:r.slice(o),backend:n});return Yh({inputs:[l,p],backend:n})}let a=r.map(o=>o.dtype).reduce((o,l)=>rr(o,l)),s=r.map(o=>o.shape),i=q().getBool("WEBGL_PACK")?new G7(r[0].shape,s):new U7(r[0].shape,s);return n.runWebGLProgram(i,r,a)}var H7={kernelName:Gs,backendName:"webgl",kernelFunc:Yh};function q7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=v.parseAxisParam(s,a.shape),p=l,u=T.getAxesPermutation(p,o),h=a;u!=null&&(h=cn({inputs:{x:a},backend:n,attrs:{perm:u}}),p=T.getInnerMostAxes(p.length,o)),T.assertAxesAreInnerMostDims("all",p,o);let[d,c]=T.computeOutAndReduceShapes(h.shape,p),f=v.sizeFromShape(c),m=ue({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),g=Yi(m,m.dtype,"all",n),y;if(i){let b=T.expandShapeToKeepDim(d,l);y=ue({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=ue({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(h),y}var j7={kernelName:Go,backendName:"webgl",kernelFunc:q7};function K7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=v.parseAxisParam(s,a.shape),p=l,u=T.getAxesPermutation(p,o),h=a;u!=null&&(h=cn({inputs:{x:a},backend:n,attrs:{perm:u}}),p=T.getInnerMostAxes(p.length,o)),T.assertAxesAreInnerMostDims("any",p,o);let[d,c]=T.computeOutAndReduceShapes(h.shape,p),f=v.sizeFromShape(c),m=ue({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),g=Yi(m,m.dtype,"any",n),y;if(i){let b=T.expandShapeToKeepDim(d,l);y=ue({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=ue({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(h),y}var X7={kernelName:Ho,backendName:"webgl",kernelFunc:K7},Z7=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i=t==="max"?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${o};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},Y7=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,v.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i=this.outputShape,o=i.length,l=pt(o),p=pn("coords",o),u,h;if(s===1){h=o+1;let C=pt(h);u=`
        ${C} sourceLocR = ${C}(${p.join()}, 0);
        ++${p[o-1]};
        ${C} sourceLocG = ${C}(${p.join()}, 0);
        ++${p[o-2]};
        ${C} sourceLocA = ${C}(${p.join()}, 0);
        --${p[o-1]};
        ${C} sourceLocB = ${C}(${p.join()}, 0);
        --${p[o-2]};`}else h=o,u=`
        ${l} sourceLocR = coords;
        ++${p[o-1]};
        ${l} sourceLocG = coords;
        ++${p[o-2]};
        ${l} sourceLocA = coords;
        --${p[o-1]};
        ${l} sourceLocB = coords;
        --${p[o-2]};`;let d=["x","y","z","w","u","v"].slice(0,h),c="."+d[h-1],f=d.map(C=>"int "+C),m=pn("sourceLocR",h-1).concat("inIdx.r"),g=pn("sourceLocG",h-1).concat("inIdx.g"),y=pn("sourceLocB",h-1).concat("inIdx.b"),b=pn("sourceLocA",h-1).concat("inIdx.a"),x=n==="max"?"greaterThan":"lessThan",w=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()})));`,I=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,N=r?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${N}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${p[o-1]} < ${i[o-1]-1};
        bool hasNextRow = ${p[o-2]} < ${i[o-2]-1};
        ${u}
        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},
          sourceLocB${c}, sourceLocA${c}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${I};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${w}
          vec4 candidate = ${I};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function lT(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];r!=null&&(a=r.shape[0],s=r.shape[1]);let i=T.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new Z7(o,n,r==null),p=[t];r!=null&&p.push(r);let u=e.runWebGLProgram(l,p,"int32");if(u.shape[1]===1)return u;let h=lT(e,t,n,u);return e.disposeIntermediateTensorInfo(u),h}function uT(e,t,n,r=null){let a=r!=null?r.shape:t.shape,s=a[a.length-1],i=T.computeOptimalWindowSize(s),o=new Y7(a,i,n,r==null),l=r==null?[t]:[t,r],p=e.runWebGLProgram(o,l,"int32");if(p.shape.length===t.shape.length){let u=uT(e,t,n,p);return e.disposeIntermediateTensorInfo(p),u}return p}function pT(e,t,n,r){let a=[n];if(T.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!q().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],i=e.texData.get(t.dataId),o=i!==null&&i.isPacked,l=t;o&&(l=e.unpackTensor(t),s.push(l));let[p,u]=T.computeOutAndReduceShapes(l.shape,a),h=v.sizeFromShape(u),d=ue({inputs:{x:l},backend:e,attrs:{shape:[-1,h]}});s.push(d);let c=lT(e,d,r);s.push(c);let f=ue({inputs:{x:c},backend:e,attrs:{shape:p}});return s.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return uT(e,t,r)}function J7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=v.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,p=[];o!=null&&(l=cn({inputs:{x:a},backend:n,attrs:{perm:o}}),p.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let u=pT(n,l,i[0],"max");return p.forEach(h=>n.disposeIntermediateTensorInfo(h)),u}var Q7={kernelName:Hs,backendName:"webgl",kernelFunc:J7};function eZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=v.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,p=[];o!=null&&(l=cn({inputs:{x:a},backend:n,attrs:{perm:o}}),p.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let u=pT(n,l,i[0],"min");return p.forEach(h=>n.disposeIntermediateTensorInfo(h)),u}var tZ={kernelName:lp,backendName:"webgl",kernelFunc:eZ},nZ=br+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,rZ=qe({opSnippet:nZ}),aZ={kernelName:qo,backendName:"webgl",kernelFunc:rZ},sZ=br+"return log(x + sqrt(x * x + 1.0));",iZ=qe({opSnippet:sZ}),oZ={kernelName:jo,backendName:"webgl",kernelFunc:iZ},lZ=br+`
  return atan(x);
`,uZ=qe({opSnippet:lZ}),pZ={kernelName:Ko,backendName:"webgl",kernelFunc:uZ},hZ=Ux+`
  return atan(a, b);
`,dZ=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+sh+`
  return result;
`,cZ=en({opSnippet:hZ,packedOpSnippet:dZ}),fZ={kernelName:Zo,backendName:"webgl",kernelFunc:cZ},mZ=br+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,gZ=qe({opSnippet:mZ}),yZ={kernelName:Xo,backendName:"webgl",kernelFunc:gZ},np=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,p=e.dilationWidth,u=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let C=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${d}, ${c});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${u};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${p}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${C} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?a?m:g:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(x="avgValue / count");let w=Math.floor(s/4)*4,I=s%4,N=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${d}, ${c});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${u};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${w}; wC += 4) {
            int xC = xCCorner + wC * ${p};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              getValue(batch, xR, xC + 3 * ${p}, d)
            );

            ${N}
          }

          int xC = xCCorner + ${w};
          if (${I===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${I===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${I===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              initializationValue
            );

            ${N}
          }
        }
        setOutput(${x});
      }
    `}},Hx=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,p=e.dilationDepth,u=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b=t==="avg",x="0.0";if(b||(x="-1.0 / 1e-20"),n){let $=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${p}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${c};
                wR += ${u}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${$} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let w="max",I=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(I="avgValue / count");let N=Math.floor(s/4)*4,C=s%4,E=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${p}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c};
            wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${N}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${N};
            if (${C===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${C===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${C===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${E}
            }
          }
          setOutput(${I});
        }
      }
    `}};function bZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;iu(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,p=1;v.assert(T.eitherStridesOrDilationsAreOne(i,p),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let u=T.computePool2DInfo(a.shape,s,i,p,o,l);if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))return jn({inputs:{x:a},backend:n});let h=new np(u,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}var xZ={kernelName:qs,backendName:"webgl",kernelFunc:bZ};function wZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:p}=r,u=[1,1,1],h=T.computePool3DInfo(a.shape,s,i,u,o,l,p),d=new Hx(h,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}var vZ={kernelName:up,backendName:"webgl",kernelFunc:wZ},kZ=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,p=o-1-e.padInfo.top,u=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${p}, ${u});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},IZ=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,p=e.dilationWidth,u=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,c=u-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`
      const ivec3 pads = ivec3(${c}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${a}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${p}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function SZ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:p,dimRoundingMode:u}=r,h=[1,1,1],d=T.computePool3DInfo(i.shape,o,l,h,p,u),c=new IZ(d);return n.runWebGLProgram(c,[a],i.dtype)}var NZ={kernelName:Bd,backendName:"webgl",kernelFunc:SZ};function TZ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;iu([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:p}=r,u=T.computePool2DInfo(i.shape,o,l,1,p),h=new kZ(u);return n.runWebGLProgram(h,[a],i.dtype)}var _Z={kernelName:Pd,backendName:"webgl",kernelFunc:TZ};function CZ(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return _d({a,b:s,transposeA:i,transposeB:o,backend:n})}var EZ={kernelName:js,backendName:"webgl",kernelFunc:CZ},$Z=class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let i="0.0";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";a!=null&&(T.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},AZ=class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";a!=null&&(T.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}},RZ=({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:a,variance:s,offset:i,scale:o}=e;v.assert(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);let p=[r,a,s],u=null;i!=null&&(u=i.shape,p.push(i));let h=null;o!=null&&(h=o.shape,p.push(o));let d=q().getBool("WEBGL_PACK_NORMALIZATION")?new AZ(r.shape,a.shape,s.shape,u,h,l):new $Z(r.shape,a.shape,s.shape,u,h,l);return t.runWebGLProgram(d,p,p[0].dtype)},FZ={kernelName:oi,backendName:"webgl",kernelFunc:RZ},MZ=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=pt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=DZ(this.rank),r,a=e.map((s,i)=>`sourceLoc.${Zm[i]} = start[${i}] + coords.${Zm[i]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${a.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${n}));
      }
    `}},Zm=["x","y","z","w","u","v"];function DZ(e){if(e===1)return"sourceLoc";if(e<=6)return Zm.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var OZ=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=pt(this.rank),n=pn("coords",this.rank),r=pn("sourceLoc",this.rank),a=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`
      result.x = ${s};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${s};
        --${r[this.rank-1]};
      }
    `,o=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${s};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${s};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((p,u)=>`start[${u}]`).join()});`:e.map((p,u)=>`${r[u]} = ${n[u]} + start[${u}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}};function LZ(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Mt.computeFlatOffset(t,v.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}function du(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=Mt.parseSliceParams(a,s,i);if(Mt.assertParamsValid(a,o,l),v.sizeFromShape(l)===0)return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||a.dtype==="string"){let h=n.texData.get(a.dataId),d=CX(h.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,d)}let{isPacked:p}=n.texData.get(a.dataId),u=Mt.isSliceContinous(a.shape,o,l);if(p||!u){let h=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new OZ(l):new MZ(l),d=[o];return n.runWebGLProgram(h,[a],a.dtype,d)}return n.uploadToGPU(a.dataId),LZ(a,o,l,n)}var zZ={kernelName:Rl,backendName:"webgl",kernelFunc:du},PZ=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;v.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((b,x)=>b*x),l=T.getReshaped(a.shape,s,o),p=T.getPermuted(l.length,s.length),u=T.getReshapedPermuted(a.shape,s,o),h=T.getSliceBeginCoords(i,s.length),d=T.getSliceSize(u,i,s.length),c=[],f=ue({inputs:{x:a},backend:n,attrs:{shape:l}}),m=cn({inputs:{x:f},backend:n,attrs:{perm:p}}),g=ue({inputs:{x:m},backend:n,attrs:{shape:u}}),y=du({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return c.push(f),c.push(m),c.push(g),c.forEach(b=>n.disposeIntermediateTensorInfo(b)),y},BZ={kernelName:Yo,backendName:"webgl",kernelFunc:PZ};function WZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),p=Z2(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,p)}var VZ={kernelName:Wd,backendName:"webgl",kernelFunc:WZ};function UZ(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var GZ={kernelName:Vd,backendName:"webgl",kernelFunc:UZ},HZ="return float(a != b);",hT=en({opSnippet:HZ,cpuKernelImpl:xX,dtype:"bool"}),qZ={kernelName:vl,backendName:"webgl",kernelFunc:hT};function oh(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return jn({inputs:{x:a.complexTensorInfos.real},backend:n})}var jZ={kernelName:hc,backendName:"webgl",kernelFunc:oh},KZ="return float(int(x));";function XZ(e,t){let n=new ia(e.shape,KZ),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function Ym(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if(s==="complex64"){if(a.dtype==="complex64")return jn({inputs:{x:a},backend:n});let i=bt(a.shape),o=Ym({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),l=Qa({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeIntermediateTensorInfo(o),l}if(a.dtype==="complex64"){let i=oh({inputs:{input:a},backend:n}),o=Ym({inputs:{x:i},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(i),o}if(!v.hasEncodingLoss(a.dtype,s)){let i=jn({inputs:{x:a},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(n.shouldExecuteOnCPU([a])){let i=n.texData.get(a.dataId).values,[o,l,p]=Q8(i,a.shape,a.dtype,s);return n.makeTensorInfo(o,l,p)}if(s==="int32")return XZ(a,n);if(s==="bool"){let i=n.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),o=hT({inputs:{a,b:i},backend:n});return n.disposeIntermediateTensorInfo(i),o}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var ZZ={kernelName:Ks,backendName:"webgl",kernelFunc:Ym},o0="return ceil(x);",YZ=qe({opSnippet:o0,packedOpSnippet:o0,cpuKernelImpl:eX}),JZ={kernelName:Xs,backendName:"webgl",kernelFunc:YZ},QZ=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},eY=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function tY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o;q().getBool("WEBGL_PACK_CLIP")?o=new eY(a.shape):o=new QZ(a.shape);let l=[[s],[i]];return n.runWebGLProgram(o,[a],a.dtype,l)}var nY={kernelName:Ga,backendName:"webgl",kernelFunc:tY},rY=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function l0(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function aY(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new rY(r.shape),i=[l0(r,a.complexTensorInfos.real),l0(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}var sY={kernelName:pp,backendName:"webgl",kernelFunc:aY},iY=class{constructor(e){this.outputShape=[],this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((s,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){let i=t[s-1];n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${i}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},oY=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=T.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=pt(r),s=pn("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((f,m)=>`T${m}`);let o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];let l=i[t],p=i.slice(-2),u=i.join(),h=`if (${l} < ${o[0]}) {
        return getChannel(
            getT0(${u}), vec2(${p.join()}));
        }`;for(let f=1;f<o.length;f++){let m=o[f-1];h+=`
        if (${l} < ${o[f]}  && ${l} >= ${o[f-1]}) {
          return getChannel(
            getT${f}(${zh(i,l,m)}),
            vec2(${zh(p,l,m)}));
        }`}let d=o.length,c=o[o.length-1];h+=`
        return getChannel(
          getT${d}(${zh(i,l,c)}),
          vec2(${zh(p,l,c)}));`,this.userCode=`
      float getValue(${i.map(f=>"int "+f)}) {
        ${h}
      }

      void main() {
        ${a} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[r-1]} = ${s[r-1]} + 1;
        if (${s[r-1]} < ${n[r-1]}) {
          result.g = getValue(${s});
        }

        ${s[r-2]} = ${s[r-2]} + 1;
        if (${s[r-2]} < ${n[r-2]}) {
          result.a = getValue(${s});
        }

        ${s[r-1]} = ${s[r-1]} - 1;
        if (${s[r-2]} < ${n[r-2]} &&
            ${s[r-1]} < ${n[r-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}};function zh(e,t,n){let r=e.indexOf(t);return e.map((a,s)=>s===r?`${a} - ${n}`:a).join()}function Cf(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return jn({inputs:{x:a.complexTensorInfos.imag},backend:n})}var lY={kernelName:tc,backendName:"webgl",kernelFunc:Cf};function Du(e,t,n){let r=e[0].dtype;if(r==="complex64"){let h=e.map(g=>oh({inputs:{input:g},backend:n})),d=e.map(g=>Cf({inputs:{input:g},backend:n})),c=Du(h,t,n),f=Du(d,t,n),m=Qa({inputs:{real:c,imag:f},backend:n});return h.forEach(g=>n.disposeIntermediateTensorInfo(g)),d.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}let a=n.shouldExecuteOnCPU(e);if(r==="string"&&(a=!0),a){let h=e.map(b=>{let x=v.sizeFromShape(b.shape.slice(t));return ue({inputs:{x:b},backend:n,attrs:{shape:[-1,x]}})}),d=h.map(b=>({vals:n.readSync(b.dataId),shape:b.shape})),c=T.computeOutShape(h.map(b=>b.shape),1),f=h[0].shape[0]===1,m=tX(d,c,r,f),g=T.computeOutShape(e.map(b=>b.shape),t),y=n.makeTensorInfo(g,r,m);return h.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}let s=q().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(e.length>s){let h=[];for(let c=0;c<e.length;c+=s){let f=e.slice(c,c+s);h.push(Du(f,t,n))}let d=Du(h,t,n);for(let c of h)n.disposeIntermediateTensorInfo(c);return d}if(q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let h=new oY(e.map(d=>d.shape),t);return n.runWebGLProgram(h,e,r)}let{tensors2D:i,outShape:o}=uY(e,t,n),l=new iY(i.map(h=>h.shape)),p=n.runWebGLProgram(l,i,r);i.forEach(h=>n.disposeIntermediateTensorInfo(h));let u=ue({inputs:{x:p},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(p),u}function uY(e,t,n){let r=T.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>ue({inputs:{x:a},attrs:{shape:[-1,v.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:r}}function dT(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=v.parseAxisParam(a,t[0].shape)[0],i=t.map(p=>p.shape);T.assertParamsConsistent(i,s);let o=T.computeOutShape(t.map(p=>p.shape),s);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(p=>v.sizeFromShape(p.shape)>0);return l.length===1?jn({inputs:{x:l[0]},backend:n}):Du(l,s,n)}var pY={kernelName:Jo,backendName:"webgl",kernelFunc:dT},cT=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,p=e.dilationHeight,u=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,c=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,y=m?2:3,b=m?3:1,x="",w="";n&&(r?x=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?x=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:x=`
          float activation(float x) {
            ${n}
          }
        `,w="result = activation(result);");let I=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${b}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${p};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${u};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${c}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${c}) *
                    getW(wR, wC, ${c}, d2);
              } else {
                dotProd +=
                    getX(batch, ${c}, xR, xC) *
                    getW(wR, wC, ${c}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2),
                getW(wR, wC, ${c} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1),
                  getX(batch, xR, xC, ${c} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC),
                  getX(batch, ${c} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${I}
        ${w}
        setOutput(result);
      }
    `}},hY=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,p=e.dilationWidth,u=e.filterDepth,h=e.filterHeight,d=e.filterWidth,c=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${a}, ${s}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${u}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${p};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${c}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${c}) *
                  getW(wF, wR, wC, ${c}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1),
                  getX(batch, xF, xR, xC, ${c} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2),
                  getW(wF, wR, wC, ${c} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},fT=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=xn(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,p=e.filterWidth,u=p,h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let m=0;m<p;m++)h+=`
           vec4 xTexelC${m*2};
           int xTexelC${m*2}Ready;
           vec4 xTexelC${m*2+1};
           int xTexelC${m*2+1}Ready;
           vec4 xC${m};`;h+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let m=0;m<p;m++)h+=`
           xTexelC${m*2} = vec4(0.0);
           xTexelC${m*2}Ready = 0;
           xTexelC${m*2+1} = vec4(0.0);
           xTexelC${m*2+1}Ready = 0;
           xC${m} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let m=0;m<(u+1)/2;m++){let g=m*2;if(h+=`
           xC = xCCorner + ${g*o};
           `,i===1){if(g<p&&(s%2===1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }
               `,o===1&&g>0?h+=`
                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);
                   } else {
                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xC${g} = xTexelC${g};
                 `,g+1<p)){let y=s%2===0?v.nearestLargerEven(o):o;o%2===0&&s%2===1||o%2!==0&&s%2!==1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${y};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${g+1}.zw = vec2(0.0);
                     }
                     xTexelC${g+1}Ready = 1;
                   }
                   `,o>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);
                     } else {
                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);
                     }
                     `:h+=`
                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);
                     `):y===1?h+=`
                     xC${g+1} = xTexelC${g};
                     `:h+=`
                     xCOffset = xC + ${y};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${g+1}.zw = vec2(0.0);
                       }
                       xTexelC${g+1}Ready = 1;
                     }

                     xC${g+1} = xTexelC${g+1};
                     `}}else g<p&&(s%2===1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.0);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
               `,g+1<p&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(
                   xTexelC${g}.xy, xTexelC${g+1}.xy);
               `,g+1<p&&(h+=`
                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
                 `)));g<p&&(h+=`
             wTexel = getW(r, ${g}, d1, d2);
             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,g+1<p&&(h+=`
               wTexel = getW(r, ${g+1}, d1, d2);
               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   `,h+=`
     }
   `,h+=`
     }
   `;let d="",c="";n&&(r?d=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:a?d=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:d=`vec4 activation(vec4 x) {
           ${n}
         }`,c="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${d}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${f}
         ${c}
         setOutput(result);
       }
     `}},dY=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=xn(this.outputShape.length);let{dataFormat:n}=t,r=bn(),a=n==="channelsLast",s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let p=0;p<=1;p++)for(let u=0;u<=1;u++)l+=`
          blockIndex = rc.z + ${u};
          pos = rc.y + ${p};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${s}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${a}) {
                  innerDims = vec2(d1, ch);
                  result[${p*2+u}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${p*2+u}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${r.output} = result;
      }
    `}};function Cd(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&n===1&&e[0]>1?[e[0],1]:null}function mT({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=e.shape,p=r.texData.get(e.dataId),u=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,c=n.dataFormat==="channelsLast",f=!1,m=!1,g,y=[];if(s!=null){let b=Cd(s.shape,c);b!=null&&(s=ue({inputs:{x:s},backend:r,attrs:{shape:b}}),y.push(s))}if(a!=null){let b=Cd(a.shape,c);b!=null&&(a=ue({inputs:{x:a},backend:r,attrs:{shape:b}}),y.push(a))}if(!((h===1||d===1)&&u>oT)&&p.isPacked&&c&&p.texture!=null&&l[2]%2!==0&&v.arraysEqual(p.shape.slice(-3),l.slice(-3))){let b=l[0]*l[1]*(l[2]+1),x={dataId:e.dataId,shape:[1,b,n.inChannels],dtype:e.dtype},w=p.shape;p.shape=p.shape.slice(),p.shape[p.shape.length-2]++,v.assert(ep(p.shape,x.shape),()=>`packed reshape ${p.shape} to ${x.shape} isn't free`);let I=ue({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(I);let N=_d({a:x,b:I,backend:r,transposeA:f,transposeB:m,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),C=r.texData.get(N.dataId);v.assert(C.isPacked,()=>"batchMatMul result is expected to be packed"),p.shape=w,C.shape=n.outShape,g=jn({inputs:{x:N},backend:r}),g.shape=n.outShape,y.push(N)}else{let b=n.outHeight*n.outWidth,x=ue({inputs:{x:e},backend:r,attrs:{shape:c?[n.batchSize,b,n.inChannels]:[n.batchSize,n.inChannels,b]}}),w=ue({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),I=_d({a:c?x:w,b:c?w:x,transposeA:!c,transposeB:m,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});g=ue({inputs:{x:I},backend:r,attrs:{shape:n.outShape}}),y.push(x),y.push(w),y.push(I)}for(let b of y)r.disposeIntermediateTensorInfo(b);return g}function gT({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:p,inChannels:u,outWidth:h,outHeight:d,dataFormat:c}=n,f=c==="channelsLast",m=l*p*u,g=d*h,y=[n.batchSize,m,g],b=!0,x=!1,w=[];if(s!=null){let H=Cd(s.shape,f);H!=null&&(s=ue({inputs:{x:s},backend:r,attrs:{shape:H}}),w.push(s))}if(a!=null){let H=Cd(a.shape,f);H!=null&&(a=ue({inputs:{x:a},backend:r,attrs:{shape:H}}),w.push(a))}let I=ue({inputs:{x:t},backend:r,attrs:{shape:[1,m,v.sizeFromShape(t.shape)/m]}});w.push(I);let N=new dY(y,n),C=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],E=r.runWebGLProgram(N,[e],"float32",C),$=ue({inputs:{x:E},backend:r,attrs:{shape:y}});w.push(E),w.push($);let F=a!=null,R=s!=null,S=o==="leakyrelu",D=o?tp(o,!0):null,W=new iT(f?$.shape:I.shape,f?I.shape:$.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],b,x,F,D,R,S),U=f?[$,I]:[I,$];if(a&&U.push(a),R&&U.push(s),S){let H=r.makeTensorInfo([],"float32",v.createScalarValue(i,"float32"));U.push(H),w.push(H)}let G=r.runWebGLProgram(W,U,"float32"),j=ue({inputs:{x:G},backend:r,attrs:{shape:n.outShape}});w.push(G);for(let H of w)r.disposeIntermediateTensorInfo(H);return j}function cY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:p,dimRoundingMode:u}=r,h=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(a.shape,s.shape,i,p,o,u,!1,h),c;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))c=mT({x:a,filter:s,convInfo:d,backend:n});else if(d.strideWidth<=2&&h==="channelsLast"&&q().getBool("WEBGL_EXP_CONV")){let m=new fT(d),g=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];c=n.runWebGLProgram(m,[a,s],"float32",g)}else if(q().getBool("WEBGL_CONV_IM2COL"))c=gT({x:a,filter:s,convInfo:d,backend:n});else{let m=new cT(d);c=n.runWebGLProgram(m,[a,s],"float32")}let f=ue({inputs:{x:c},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(c),f}var fY={kernelName:Zs,backendName:"webgl",kernelFunc:cY},mY=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${s}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},gY=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,p=s?2:3,u=s?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${u}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${p}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},yY=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${a};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},bY=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,p=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${l}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${a}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function xY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:p,filterShape:u}=r,h=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(a.shape,u,i,1,o,p,!1,h),c=new mY(d);return n.runWebGLProgram(c,[a,s],"float32")}var wY={kernelName:Gd,backendName:"webgl",kernelFunc:xY};function vY(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:p,dimRoundingMode:u}=r,h=T.convertConv2DDataFormat(p),d=T.computeConv2DInfo(i,s.shape,o,1,l,u,!1,h),c=new gY(d);return n.runWebGLProgram(c,[a,s],"float32")}var kY={kernelName:Ys,backendName:"webgl",kernelFunc:vY};function IY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,p=T.computeConv3DInfo(a.shape,s.shape,i,l,o),u=new hY(p);return n.runWebGLProgram(u,[a,s],"float32")}var SY={kernelName:hp,backendName:"webgl",kernelFunc:IY};function NY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,p=T.computeConv3DInfo(a.shape,l,i,1,o),u=new yY(p);return n.runWebGLProgram(u,[a,s],"float32")}var TY={kernelName:Hd,backendName:"webgl",kernelFunc:NY};function _Y(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,p=T.computeConv3DInfo(l,s.shape,o,1,i),u=new bY(p);return n.runWebGLProgram(u,[a,s],"float32")}var CY={kernelName:qd,backendName:"webgl",kernelFunc:_Y},EY=hu+`
  return cos(x);
`,$Y=qe({opSnippet:EY}),AY={kernelName:Js,backendName:"webgl",kernelFunc:$Y},RY=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,FY=qe({opSnippet:RY}),MY={kernelName:Qs,backendName:"webgl",kernelFunc:FY},DY=class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[p]=t,[u,h]=n;this.outputShape=[p,u,h,l];let d=r==="bilinear"?1:0,[c,f]=[`${i-1}.0`,`${o-1}.0`],[m,g,y]=u>1?[`${(i-1)/(u-1)}`,"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[b,x,w]=h>1?[`${(o-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${b});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${x};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${c} ) {
          setOutput(float(${a}));
          return;
        }
        float in_x = ${w};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${a}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},OY=e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:p}=r,u=new DY(a.shape,s.shape,o,l,p);return n.runWebGLProgram(u,[a,s,i],"float32")},LY={kernelName:el,backendName:"webgl",kernelFunc:OY},rp;(function(e){e.Prod="*",e.Sum="+"})(rp||(rp={}));var u0=class{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,s=this.op===rp.Prod?"1.0":"0.0",i=n?s:`getX(${p0(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",p="";n?(l=r?`end != ${o-1}`:"end != 0",p=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",p=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${pt(a)} coords = getOutputCoords();
        int end = ${h0(a,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${p};
          ${h0(a,"coords",this.op)} = idx;
          val ${this.op}= getX(${p0(a,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function p0(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function h0(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function yT(e,t,n,r,a,s){let i=t.shape.length,o=T.getAxesPermutation([r],i),l=t;o!=null&&(l=cn({inputs:{x:t},backend:n,attrs:{perm:o}}));let p=T.getInnerMostAxes(1,i)[0];if(p!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);let u=l.shape[p],h=jn({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){let c=new u0(e,l.shape,!1,s),f=[[d]],m=h;h=n.runWebGLProgram(c,[h],h.dtype,f),n.disposeIntermediateTensorInfo(m)}if(a){let d=new u0(e,l.shape,a,s),c=h;h=n.runWebGLProgram(d,[h],h.dtype),n.disposeIntermediateTensorInfo(c)}if(o!=null){let d=T.getUndoAxesPermutation(o),c=cn({inputs:{x:h},backend:n,attrs:{perm:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),c}return h}function zY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return yT(rp.Prod,a,n,s,i,o)}var PY={kernelName:Qo,backendName:"webgl",kernelFunc:zY};function BY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return yT(rp.Sum,a,n,s,i,o)}var WY={kernelName:ei,backendName:"webgl",kernelFunc:BY};function VY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(a.shape.length===1){let l=n.readSync(a.dataId),p=n.readSync(s.dataId),u=Z2(l,p,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}else if(a.shape.length===2){let l=n.bufferSync(a),p=n.bufferSync(s),u=J8(l,p,i,o);return n.makeTensorInfo(u.shape,s.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var UY={kernelName:jd,backendName:"webgl",kernelFunc:VY},GY=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function HY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=i==="NHWC"?a.shape[1]:a.shape[2],p=i==="NHWC"?a.shape[2]:a.shape[3],u=i==="NHWC"?a.shape[3]:a.shape[1],h=l*s,d=p*s,c=u/(s*s),f=i==="NHWC"?[o,h,d,c]:[o,c,h,d],m=new GY(f,s,i);return n.runWebGLProgram(m,[a],a.dtype)}var qY={kernelName:tl,backendName:"webgl",kernelFunc:HY},bT=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=xn(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",p="";n&&(r?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,p="result = activation(result);");let u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${u}
        ${p}
        setOutput(result);
      }
    `}},xT=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=xn(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,p=e.filterHeight,u=e.filterWidth,h=u,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)d+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;d+=`
    for (int r = 0; r < ${p}; r++) {
      `;for(let g=0;g<u;g++)d+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(h+1)/2;g++){let y=g*2;if(d+=`
          xC = xCCorner + ${y*l};
          `,o===1){if(y<u&&(i%2===1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,l===1&&y>0?d+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<u)){let b=i%2===0?v.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${b};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,l>1?d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                    } else {
                     xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                    }
                    `:d+=`
                    xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                    `):b===1?d+=`
                    xC${y+1} = xTexelC${y};
                    `:d+=`
                    xCOffset = xC + ${b};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<u&&(i%2===1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<u&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<u&&(d+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<u&&(d+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<u&&(d+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let c="",f="";n&&(r?c=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?c=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:c=`vec4 activation(vec4 x) {
          ${n}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function jY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:p}=r,u=l;u==null&&(u=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let h=T.computeConv2DInfo(a.shape,s.shape,i,u,o,p,!0),d;q().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new xT(h):d=new bT(h);let c=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[a,s],"float32",c)}var KY={kernelName:ti,backendName:"webgl",kernelFunc:jY},XY=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},ZY=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function YY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:p,filterShape:u}=r,h=T.computeConv2DInfo(a.shape,u,i,o,l,p,!0),d=new XY(h);return n.runWebGLProgram(d,[a,s],"float32")}var JY={kernelName:Kd,backendName:"webgl",kernelFunc:YY};function QY(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:p,inputShape:u}=r,h=T.computeConv2DInfo(u,s.shape,i,o,l,p,!0),d=new ZY(h);return n.runWebGLProgram(d,[a,s],"float32")}var eJ={kernelName:Xd,backendName:"webgl",kernelFunc:QY},tJ=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function nJ(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=v.sizeFromShape(r.shape),i=ue({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new tJ(s),l=n.runWebGLProgram(o,[i],i.dtype),p=ue({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),p}var rJ={kernelName:Zd,backendName:"webgl",kernelFunc:nJ},aJ=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:p}=e,{top:u,left:h}=r;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${s});
      const ivec2 pads = ivec2(${u}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${p};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function sJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,p=T.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",l),u,h=new aJ(p);u=n.runWebGLProgram(h,[a,s],"float32");let d=ue({inputs:{x:u},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(u),d}var iJ={kernelName:dp,backendName:"webgl",kernelFunc:sJ};function oJ(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=T.decodeEinsumEquation(a,s.length);T.checkEinsumDimSizes(i.length,l,s);let{path:p,steps:u}=T.getEinsumComputePath(o,l),h=u.length,d=null,c=i.length,f=[];for(let m=0;m<h;++m){for(let g of u[m]){let{permutationIndices:y,expandDims:b}=T.getEinsumPermutation(c,l[g]),x;T.isIdentityPermutation(y)?x=s[g]:(x=cn({inputs:{x:s[g]},backend:n,attrs:{perm:y}}),f.push(x));let w=x.shape.slice();for(let I=0;I<b.length;++I)w.splice(b[I],0,1);v.arraysEqual(x.shape,w)||(x=ue({inputs:{x},backend:n,attrs:{shape:w}}),f.push(x)),d===null?d=x:(d=Gx({inputs:{a:x,b:d},backend:n}),f.push(d))}m<h-1&&(p[m]>=0&&(d=_f({inputs:{x:d},backend:n,attrs:{axis:p[m]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var lJ={kernelName:Yd,backendName:"webgl",kernelFunc:oJ},uJ="return (x >= 0.0) ? x : (exp(x) - 1.0);",pJ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,hJ=qe({opSnippet:uJ,packedOpSnippet:pJ}),dJ={kernelName:ri,backendName:"webgl",kernelFunc:hJ},cJ="return (b >= 1.0) ? a : a * (b + 1.0);",fJ=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,mJ=e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ih(fJ,r.shape,a.shape):new zo(cJ,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)},gJ={kernelName:Jd,backendName:"webgl",kernelFunc:mJ},yJ=`
  return vec4(equal(a, b));
`,bJ="return float(a == b);",xJ=en({opSnippet:bJ,packedOpSnippet:yJ,dtype:"bool",cpuKernelImpl:nX}),wJ={kernelName:rl,backendName:"webgl",kernelFunc:xJ},vJ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${T.ERF_P};
  float a1 = ${T.ERF_A1};
  float a2 = ${T.ERF_A2};
  float a3 = ${T.ERF_A3};
  float a4 = ${T.ERF_A4};
  float a5 = ${T.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,kJ=qe({opSnippet:vJ}),IJ={kernelName:nl,backendName:"webgl",kernelFunc:kJ},SJ=hu+`
  return exp(x);
`,NJ=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,wT=qe({opSnippet:SJ,packedOpSnippet:NJ,cpuKernelImpl:rX,dtype:"float32"}),TJ={kernelName:ai,backendName:"webgl",kernelFunc:wT};function Jm(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(v.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+a+1),o.splice(l,0,1),ue({inputs:{x:s},backend:r,attrs:{shape:o}})}var _J={kernelName:al,backendName:"webgl",kernelFunc:Jm},d0="return exp(x) - 1.0;",CJ=qe({opSnippet:d0,packedOpSnippet:d0,cpuKernelImpl:aX}),EJ={kernelName:sl,backendName:"webgl",kernelFunc:CJ},c0=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${a};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function vT(e,t,n){let r=n.texData.get(e.dataId),a=v.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=a/s,o=ue({inputs:{x:e},backend:n,attrs:{shape:[i,s]}}),l=o.shape,p=new c0("real",l,t),u=new c0("imag",l,t),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(p,h,"float32"),c=n.runWebGLProgram(u,h,"float32"),f=Qa({inputs:{real:d,imag:c},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c);let m=ue({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}function $J(e){let{inputs:t,backend:n}=e,{input:r}=t;return vT(r,!1,n)}var AJ={kernelName:Qd,backendName:"webgl",kernelFunc:$J},RJ=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function lh(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||v.inferDtype(a),s==="string"){let i=v.getArrayFromDType(s,v.sizeFromShape(r));return i.fill(a),t.makeTensorInfo(r,s,i)}else{let i=new RJ(r,a),o=[[a]];return t.runWebGLProgram(i,[],s,o)}}var FJ={kernelName:cp,backendName:"webgl",kernelFunc:lh},MJ=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},DJ={kernelName:il,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,a=new MJ(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},f0="return floor(x);",OJ=qe({opSnippet:f0,packedOpSnippet:f0,cpuKernelImpl:sX}),LJ={kernelName:si,backendName:"webgl",kernelFunc:OJ},zJ=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,PJ=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,BJ=en({opSnippet:zJ,packedOpSnippet:PJ,dtype:"int32"}),WJ={kernelName:ii,backendName:"webgl",kernelFunc:BJ},VJ=class{constructor(e){this.variableNames=["A"];let t=bn(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},UJ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=bn(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},GJ={kernelName:rd,backendName:"webgl",kernelFunc:HJ},ao,Jf=q().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function HJ(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i=typeof HTMLVideoElement<"u"&&a instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,[l,p]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],u=[p,l],h=[p,l,s];if(o||i){let m=q().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(ao==null||m!==Jf)&&(Jf=m,ao=document.createElement("canvas").getContext("2d",{willReadFrequently:Jf})),ao.canvas.width=l,ao.canvas.height=p,ao.drawImage(a,0,0,l,p),a=ao.canvas}let d=n.makeTensorInfo(u,"int32");n.texData.get(d.dataId).usage=Qn.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),a);let c=q().getBool("WEBGL_PACK")?new UJ(h):new VJ(h),f=n.runWebGLProgram(c,[d],"int32");return n.disposeData(d.dataId),f}function qJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:p,dataFormat:u,dilations:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=T.convertConv2DDataFormat(u),g=T.computeConv2DInfo(a.shape,s.shape,l,h,p,d,!1,m),y,b=[],x=i!=null,w=o!=null,I=c==="leakyrelu",N=()=>{let E=[a,s],$=(F,R)=>{if(R==="NCHW"&&F.shape.length===1&&F.shape[0]!==1){let S=ue({inputs:{x:F},backend:n,attrs:{shape:[F.shape[0],1,1]}});return b.push(S),S}return F};if(x&&E.push($(i,u)),w&&E.push($(o,u)),I){let F=n.makeTensorInfo([],"float32",v.createScalarValue(f,"float32"));E.push(F),b.push(F)}return E};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=mT({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&q().getBool("WEBGL_EXP_CONV")){let E=c?tp(c,!0):null,$=new fT(g,x,E,w,I),F=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=N();y=n.runWebGLProgram($,R,"float32",F)}else if(q().getBool("WEBGL_CONV_IM2COL"))y=gT({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:f});else{let E=c?tp(c,!1):null,$=new cT(g,x,E,w,I),F=N();y=n.runWebGLProgram($,F,"float32")}let C=ue({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach(E=>n.disposeIntermediateTensorInfo(E)),C}var jJ={kernelName:Cs,backendName:"webgl",kernelFunc:qJ};function KJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:p,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:c}=r,f=[],m=u;m==null&&(m=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g=T.computeConv2DInfo(a.shape,s.shape,l,m,p,h,!0),y=q().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?tp(d,y):null,x=[a,s],w=i!=null,I=o!=null,N=d==="leakyrelu";if(w&&x.push(i),I&&x.push(o),N){let F=n.makeTensorInfo([],"float32",v.createScalarValue(c,"float32"));x.push(F),f.push(F)}let C;y?C=new xT(g,w,b,I,N):C=new bT(g,w,b,I,N);let E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],$=n.runWebGLProgram(C,x,"float32",E);return f.forEach(F=>n.disposeIntermediateTensorInfo(F)),$}var XJ={kernelName:Es,backendName:"webgl",kernelFunc:KJ},ZJ=class{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;let a=pt(n.length),s=`
    int index;`;for(let i=0;i<this.sliceDim;i++)s+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${s}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function YJ(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=v.sizeFromShape(r.shape),[l,p,u,h]=T.prepareAndValidate(r,a),d=ue({inputs:{x:a},backend:n,attrs:{shape:[p,i]}}),c=ue({inputs:{x:r},backend:n,attrs:{shape:[v.sizeFromShape(r.shape)/u,u]}});if(n.shouldExecuteOnCPU([r,a])||r.dtype==="string"){let y=n.readSync(a.dataId),b=n.bufferSync(r),x=iX(y,b,r.dtype,p,i,u,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,x.values)}let f=new ZJ(i,h,[p,u],r.shape),m=n.runWebGLProgram(f,[c,d],c.dtype),g=ue({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),g}var JJ={kernelName:ll,backendName:"webgl",kernelFunc:YJ},QJ=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=pt(this.rank),r=eQ(e);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}};function eQ(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e.length;a++)a===2?r.push("index"):r.push(`${n[a]}`);return r.join()}function kT(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=v.parseAxisParam(i,a.shape)[0];if(q().get("DEBUG")){let b=n.readSync(s.dataId),x=a.shape[l];for(let w=0;w<b.length;++w){let I=b[w];v.assert(I<=x-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${x-1}]`)}}let p=T.segment_util.collectGatherOpShapeInfo(a,s,l,o),u=v.sizeFromShape(s.shape),h=[],d=ue({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),c=ue({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,u/p.batchSize]}});h.push(d),h.push(c);let f=[p.batchSize,p.outerSize,u/p.batchSize,p.sliceSize];if(n.shouldExecuteOnCPU([a,s])||a.dtype==="string"){let b=n.bufferSync(c),x=n.bufferSync(d),w=oX(x,b,f);return h.forEach(I=>n.disposeIntermediateTensorInfo(I)),n.makeTensorInfo(p.outputShape,w.dtype,w.values)}let m=new QJ(d.shape,f),g=n.runWebGLProgram(m,[d,c],d.dtype);h.push(g);let y=ue({inputs:{x:g},backend:n,attrs:{shape:p.outputShape}});return h.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}var tQ={kernelName:ol,backendName:"webgl",kernelFunc:kT},nQ="return float(a > b);",rQ=`
  return vec4(greaterThan(a, b));
`,aQ=en({opSnippet:nQ,packedOpSnippet:rQ,cpuKernelImpl:lX,dtype:"bool"}),sQ={kernelName:ul,backendName:"webgl",kernelFunc:aQ},iQ="return float(a >= b);",oQ=`
  return vec4(greaterThanEqual(a, b));
`,lQ=en({opSnippet:iQ,packedOpSnippet:oQ,dtype:"bool",cpuKernelImpl:uX}),uQ={kernelName:li,backendName:"webgl",kernelFunc:lQ};function pQ(e){let{inputs:t,backend:n}=e,{input:r}=t;return vT(r,!0,n)}var hQ={kernelName:ec,backendName:"webgl",kernelFunc:pQ},dQ="return float(!isnan(x) && !isinf(x));",cQ=qe({opSnippet:dQ,dtype:"bool"}),fQ={kernelName:pl,backendName:"webgl",kernelFunc:cQ},mQ="return float(isinf(x));",gQ=qe({opSnippet:mQ,dtype:"bool"}),yQ={kernelName:hl,backendName:"webgl",kernelFunc:gQ},bQ="return float(isnan(x));",xQ=qe({opSnippet:bQ,dtype:"bool"}),wQ={kernelName:dl,backendName:"webgl",kernelFunc:xQ},vQ="return float(a < b);",kQ=`
  return vec4(lessThan(a, b));
`,IQ=en({opSnippet:vQ,packedOpSnippet:kQ,cpuKernelImpl:pX,dtype:"bool"}),SQ={kernelName:cl,backendName:"webgl",kernelFunc:IQ},NQ="return float(a <= b);",TQ=`
  return vec4(lessThanEqual(a, b));
`,_Q=en({opSnippet:NQ,packedOpSnippet:TQ,cpuKernelImpl:hX,dtype:"bool"}),CQ={kernelName:fl,backendName:"webgl",kernelFunc:_Q};function EQ(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=dX(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}var $Q={kernelName:nc,backendName:"webgl",kernelFunc:EQ},AQ=hu+`
  return x < 0.0 ? 0./0. : log(x);
`,RQ=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,FQ=qe({opSnippet:AQ,packedOpSnippet:RQ,cpuKernelImpl:cX}),MQ={kernelName:hi,backendName:"webgl",kernelFunc:FQ},DQ=hu+`
  return log(1.0 + x);
`,OQ=qe({opSnippet:DQ}),LQ={kernelName:ml,backendName:"webgl",kernelFunc:OQ},zQ="return float(a >= 1.0 && b >= 1.0);",PQ=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,BQ=en({opSnippet:zQ,packedOpSnippet:PQ,dtype:"bool"}),WQ={kernelName:gl,backendName:"webgl",kernelFunc:BQ},VQ="return float(!(x >= 1.0));",UQ=qe({opSnippet:VQ}),GQ={kernelName:yl,backendName:"webgl",kernelFunc:UQ},HQ="return float(a >= 1.0 || b >= 1.0);",qQ=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,jQ=en({opSnippet:HQ,packedOpSnippet:qQ,dtype:"bool"}),KQ={kernelName:bl,backendName:"webgl",kernelFunc:jQ},XQ=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;a===.5?o=`inversesqrt(${l})`:a===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${s}; j <= ${s}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${o};
        setOutput(val);
      }
    `}},ZQ=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;a===.5?o=`inversesqrt(${l})`:a===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${s};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${s}; j <= ${s}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${o};
        setOutput(result);
      }
    `}},YQ=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,p=q().getBool("WEBGL_PACK_NORMALIZATION")?new ZQ(a.shape,s,i,o,l):new XQ(a.shape,s,i,o,l);return n.runWebGLProgram(p,[a],a.dtype)},JQ={kernelName:fp,backendName:"webgl",kernelFunc:YQ},QQ=class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${a})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${a});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},e9=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:p,beta:u}=r,h=new QQ(a.shape,o,l,p,u);return n.runWebGLProgram(h,[a,s,i],a.dtype)},t9={kernelName:rc,backendName:"webgl",kernelFunc:e9};function n9(e,t,n,r){let a=v.sizeFromShape(t),s=v.sizeFromShape(e.shape)/a,i=ue({inputs:{x:e},attrs:{shape:[s,a]},backend:r}),o=Yi(i,e.dtype,"max",r),l=ue({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}function IT(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=v.parseAxisParam(s,a.shape),p=l,u=T.getAxesPermutation(p,o),h=u!=null,d=n.shouldExecuteOnCPU([a]),c=a;if(h){if(d){let b=n.texData.get(c.dataId).values,x=new Array(o);for(let N=0;N<x.length;N++)x[N]=a.shape[u[N]];let w=Vx(b,a.shape,a.dtype,u,x);c=n.makeTensorInfo(x,a.dtype);let I=n.texData.get(c.dataId);I.values=w}else c=Tf(a,u,n);p=T.getInnerMostAxes(p.length,o)}T.assertAxesAreInnerMostDims("max",p,o);let[f,m]=T.computeOutAndReduceShapes(c.shape,p),g=f;i&&(g=T.expandShapeToKeepDim(f,l));let y;if(d){let b=n.texData.get(c.dataId).values,x=fX(b,v.sizeFromShape(m),g,a.dtype);y=n.makeTensorInfo(g,a.dtype);let w=n.texData.get(y.dataId);w.values=x}else y=n9(c,m,g,n);return h&&n.disposeIntermediateTensorInfo(c),y}var r9={kernelName:di,backendName:"webgl",kernelFunc:IT},a9=Ux+`
  return max(a, b);
`,s9=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+sh+`
  return result;
`,i9=en({opSnippet:a9,packedOpSnippet:s9,cpuKernelImpl:mX}),o9={kernelName:ci,backendName:"webgl",kernelFunc:i9};function l9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;iu(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,p=1;v.assert(T.eitherStridesOrDilationsAreOne(i,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let u=T.computePool2DInfo(a.shape,s,i,p,o,l);if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))return jn({inputs:{x:a},backend:n});let h=new np(u,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}var u9={kernelName:fi,backendName:"webgl",kernelFunc:l9};function p9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:p}=r,u=[1,1,1],h=T.computePool3DInfo(a.shape,s,i,u,o,p,l),d=new Hx(h,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}var h9={kernelName:mp,backendName:"webgl",kernelFunc:p9},d9=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${a};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},c9=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,p=e.effectiveFilterWidth,u=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=p-1-e.padInfo.left,c=o*l*p-1;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${h}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${a}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${c} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${p} +
                  wR * ${p} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function f9(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:p,dimRoundingMode:u}=r,h=[1,1,1],d=T.computePool3DInfo(i.shape,o,l,h,p,u),c=new Hx(d,"max",!0),f=n.runWebGLProgram(c,[i],i.dtype),m=new c9(d),g=n.runWebGLProgram(m,[a,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}var m9={kernelName:sc,backendName:"webgl",kernelFunc:f9};function g9(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;iu([s,i],"maxPoolGrad");let{filterSize:l,strides:p,pad:u,dimRoundingMode:h}=r,d=T.computePool2DInfo(o.shape,l,p,1,u,h),c=!0,f=new np(d,"max",c),m=n.runWebGLProgram(f,[o],o.dtype),g=new d9(d),y=n.runWebGLProgram(g,[a,m],o.dtype);return n.disposeIntermediateTensorInfo(m),y}var y9={kernelName:ac,backendName:"webgl",kernelFunc:g9};function b9(e,t,n,r){let a=new np(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");a=new np(n,"max",!0,!0,t);let i=r.runWebGLProgram(a,[e],"float32");return[s,i]}var x9={kernelName:ic,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;v.assert(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let p=[1,1];v.assert(T.eitherStridesOrDilationsAreOne(s,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${p}'`);let u=T.computePool2DInfo(r.shape,a,s,p,i),[h,d]=b9(r,o,u,l);return[h,d]}};function w9(e,t,n,r){let a=v.sizeFromShape(t),s=v.sizeFromShape(e.shape)/a,i=ue({inputs:{x:e},attrs:{shape:[s,a]},backend:r}),o=Yi(i,"float32","mean",r),l=ue({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}var v9={kernelName:mi,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,l=v.parseAxisParam(s,r.shape),p=l,u=T.getAxesPermutation(p,o),h=u!=null,d=i.shouldExecuteOnCPU([r]),c=[],f=r;if(h){if(d){let x=i.texData.get(f.dataId).values,w=new Array(o);for(let C=0;C<w.length;C++)w[C]=r.shape[u[C]];let I=Vx(x,r.shape,r.dtype,u,w);f=i.makeTensorInfo(w,r.dtype);let N=i.texData.get(f.dataId);N.values=I}else f=Tf(r,u,i);c.push(f),p=T.getInnerMostAxes(p.length,o)}T.assertAxesAreInnerMostDims("sum",p,o);let[m,g]=T.computeOutAndReduceShapes(f.shape,p),y=m;a&&(y=T.expandShapeToKeepDim(m,l));let b=w9(f,g,y,i);for(let x of c)i.disposeIntermediateTensorInfo(x);return b}};function k9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=v.parseAxisParam(s,a.shape),p=l,u=T.getAxesPermutation(p,o),h=a;u!=null&&(h=cn({inputs:{x:a},backend:n,attrs:{perm:u}}),p=T.getInnerMostAxes(p.length,a.shape.length)),T.assertAxesAreInnerMostDims("min",p,o);let[d,c]=T.computeOutAndReduceShapes(h.shape,p),f=v.sizeFromShape(c),m=ue({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),g=Yi(m,m.dtype,"min",n),y;if(i){let b=T.expandShapeToKeepDim(d,l);y=ue({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=ue({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(h),y}var I9={kernelName:gi,backendName:"webgl",kernelFunc:k9},S9=Ux+`
  return min(a, b);
`,N9=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+sh+`
  return result;
`,T9=en({opSnippet:S9,packedOpSnippet:N9,cpuKernelImpl:gX}),_9={kernelName:yi,backendName:"webgl",kernelFunc:T9},C9=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((p,u)=>p[0]+e[u]+p[1]);let r=e.length,a=pt(r),s=t.map(p=>p[0]).join(","),i=t.map((p,u)=>p[0]+e[u]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l=n==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${a} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}},E9=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((c,f)=>c[0]+e[f]+c[1]);let r=e.length,a=pt(r),s=t.map(c=>c[0]).join(","),i=t.map((c,f)=>c[0]+e[f]).join(","),o=pn("rc",r),l=pn("source",r),p=`${o[r-1]} < ${this.outputShape[r-1]}`,u=r===1?"source":`vec2(${l.slice(-2).join()})`,h=n==="reflect"?0:1,d="";if(r===1){let c=`
        ${a} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;d=`
        ${a} rc = outputLoc;
        ${c}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${o[r-1]} += 1;
        if(${p}) {
          ${c}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
      `}else{let c=`
        ${a} source = rc;
        ${a} lt = ${a}(lessThan(source, start));
        ${a} gte = ${a}(greaterThanEqual(source, end));
        ${a} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;d=`
        ${a} rc = outputLoc;
        ${c}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${o[r-1]} += 1;
        if(${p}) {
          ${c}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
        rc = outputLoc;
        ${o[r-2]} += 1;
        if(${o[r-2]} < ${this.outputShape[r-2]}) {
          ${c}
          result[2] = getChannel(getX(${l.join()}), ${u});
          ${o[r-1]} += 1;
          if(${p}) {
            ${c}
            result[3] = getChannel(getX(${l.join()}), ${u});
          }
        }
      `}this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}},$9=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:a,mode:s}=n,i=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new E9(r.shape,a,s):new C9(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)},A9={kernelName:bi,backendName:"webgl",kernelFunc:$9},R9=`if (b == 0.0) return NAN;
  return mod(a, b);`,F9=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+sh+`
  return result;
`,M9=en({opSnippet:R9,packedOpSnippet:F9}),D9={kernelName:xl,backendName:"webgl",kernelFunc:M9},O9=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},L9=`
if (a == b) {
  return 1.0;
};
return a / b;`,z9=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,ST=en({opSnippet:L9,packedOpSnippet:z9,checkOutOfBounds:!0}),P9={kernelName:ni,backendName:"webgl",kernelFunc:ST},m0="return a - b;",NT=en({opSnippet:m0,packedOpSnippet:m0,supportsComplex:!0,cpuKernelImpl:OX}),B9={kernelName:zi,backendName:"webgl",kernelFunc:NT};function TT(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=v.parseAxisParam([s],a.shape),o=IT({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=T.expandShapeToKeepDim(o.shape,i),p=ue({inputs:{x:o},backend:n,attrs:{shape:l}}),u=NT({inputs:{a,b:p},backend:n}),h=wT({inputs:{x:u},backend:n}),d=_f({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),c=ue({inputs:{x:d},backend:n,attrs:{shape:l}}),f=ST({inputs:{a:h,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),f}var W9={kernelName:Oi,backendName:"webgl",kernelFunc:TT};function V9(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:TT({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),p=l.shape[0],u=l.shape[1],h=new O9(p,u,s),d=[[i]],c=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),c}var U9={kernelName:oc,backendName:"webgl",kernelFunc:V9},G9=br+`
  return -x;
`,H9=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function q9(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){let s=n.texData.get(r.dataId),[i,o]=bX(s.values,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,i)}let a;return q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new ws(r.shape,H9):a=new ia(r.shape,G9),n.runWebGLProgram(a,[r],r.dtype)}var j9={kernelName:wl,backendName:"webgl",kernelFunc:q9},K9=jr.nonMaxSuppressionV3Impl;function X9(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,p=n.readSync(a.dataId),u=n.readSync(s.dataId),{selectedIndices:h}=K9(p,u,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}var Z9={kernelName:kl,backendName:"webgl",kernelFunc:X9},Y9=jr.nonMaxSuppressionV4Impl;function J9(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:p}=r,u=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:c}=Y9(u,h,i,o,l,p);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}var Q9={kernelName:Il,backendName:"webgl",kernelFunc:J9},eee=jr.nonMaxSuppressionV5Impl;function tee(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:p}=r,u=n.readSync(a.dataId),h=n.readSync(s.dataId),d=i,c=o,f=l,m=p,{selectedIndices:g,selectedScores:y}=eee(u,h,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var nee={kernelName:Sl,backendName:"webgl",kernelFunc:tee},ree=class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${n}),
                      float(index == coords.y)));
      }
    `}},aee=e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,p=v.sizeFromShape(a.shape),u=new ree(p,i,o,l),h=ue({inputs:{x:a},backend:n,attrs:{shape:[p]}}),d=n.runWebGLProgram(u,[h],s);n.disposeIntermediateTensorInfo(h);let c=[...a.shape,i],f=ue({inputs:{x:d},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(d),f},see={kernelName:wi,backendName:"webgl",kernelFunc:aee};function Ed(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="complex64"){let a=oh({inputs:{input:r},backend:n}),s=Ed({inputs:{x:a},backend:n}),i=Cf({inputs:{input:r},backend:n}),o=Ed({inputs:{x:i},backend:n}),l=Qa({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return lh({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:n})}var iee={kernelName:Ul,backendName:"webgl",kernelFunc:Ed};function _T(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){let a=oh({inputs:{input:r},backend:n}),s=_T({inputs:{x:a},backend:n}),i=Cf({inputs:{input:r},backend:n}),o=Ed({inputs:{x:i},backend:n}),l=Qa({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}else return lh({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}var oee={kernelName:Nl,backendName:"webgl",kernelFunc:_T};function lee(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(t.length===1)return Jm({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(u=>{v.assertShapesMatch(s,u.shape,"All tensors passed to stack must have matching shapes"),v.assert(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(u=>{let h=Jm({inputs:{input:u},backend:n,attrs:{dim:a}});return o.push(h),h}),p=dT({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(u=>n.disposeIntermediateTensorInfo(u)),p}var uee={kernelName:Tl,backendName:"webgl",kernelFunc:lee},pee=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,p)=>l[0]+e[p]+l[1]);let r=e.length,a=pt(r),s=t.map(l=>l[0]).join(","),i=t.map((l,p)=>l[0]+e[p]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${a} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}},hee=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let r=e.length,a=pt(r),s=t.map(f=>f[0]).join(","),i=t.map((f,m)=>f[0]+e[m]).join(","),o=pn("rc",r),l=pn("source",r),p=`${o[r-1]} < ${this.outputShape[r-1]}`,u=r===1?"source":`vec2(${l.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;
       if(${p}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${o[r-2]} += 1;
       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${o[r-1]} += 1;
         if(${p}) {`],d=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let f=0,m=r===1?2:4;f<m;f++)c+=`
        ${h[f]}
        if (${d}) {
          result[${f}] = float(value);
        } else {
          ${a} source = rc - start;
          result[${f}] = getChannel(getX(${l.join()}), ${u});
        }
      `;c+=r===1?"} ":"}}",this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${c}
        setOutput(result);
      }
    `}},CT=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(v.sizeFromShape(a.shape)===0){let p=s.map((u,h)=>u[0]+a.shape[h]+u[1]);return lh({backend:n,attrs:{shape:p,value:i,dtype:a.dtype}})}let o=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new hee(a.shape,s,i):new pee(a.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},dee={kernelName:vi,backendName:"webgl",kernelFunc:CT},cee=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,fee=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+sh+`
  return result;
`,mee=en({opSnippet:cee,packedOpSnippet:fee}),gee={kernelName:ki,backendName:"webgl",kernelFunc:mee};function yee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=[],p=v.parseAxisParam(s,a.shape),u=p,h=T.getAxesPermutation(u,o),d=a;h!=null&&(d=cn({inputs:{x:a},backend:n,attrs:{perm:h}}),u=T.getInnerMostAxes(u.length,o),l.push(d)),T.assertAxesAreInnerMostDims("prod",u,o);let c;if(n.shouldExecuteOnCPU([d])){let f=n.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:y}=wX(d.shape,d.dtype,f,u);c=n.makeTensorInfo(g,y,m)}else{let[f,m]=T.computeOutAndReduceShapes(d.shape,u),g=v.sizeFromShape(m),y=ue({inputs:{x:d},backend:n,attrs:{shape:[-1,g]}}),b=bc(a.dtype),x=Yi(y,b,"prod",n);c=ue({inputs:{x},backend:n,attrs:{shape:f}}),l.push(y),l.push(x)}if(i){l.push(c);let f=T.expandShapeToKeepDim(c.shape,p);c=ue({inputs:{x:c},backend:n,attrs:{shape:f}})}return l.forEach(f=>n.disposeIntermediateTensorInfo(f)),c}var bee={kernelName:Si,backendName:"webgl",kernelFunc:yee};function xee(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map(y=>n.readSync(y.dataId)),p=a.map(y=>y.shape),u=n.readSync(s.dataId),h=n.readSync(i.dataId),[d,c,f]=vX(l,p,u,s.shape,s.dtype,h,i.shape,o),m=d.map(y=>n.makeTensorInfo([y.length],"int32",y)),g=n.makeTensorInfo(f,s.dtype,c);return m.concat([g])}var wee={kernelName:lc,backendName:"webgl",kernelFunc:xee};function vee(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[p,u]=kX(i,r.shape,r.dtype,o,a.shape,l,s.shape),h=n.makeTensorInfo([p.length],"int32",p),d=n.makeTensorInfo([u.length],r.dtype,u);return[h,d]}var kee={kernelName:uc,backendName:"webgl",kernelFunc:vee};function Iee(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,p=n.readSync(a.dataId),u=n.readSync(s.dataId),h=n.readSync(i.dataId),d=o.map(g=>n.readSync(g.dataId)),c=o.map(g=>g.shape),[f,m]=IX(p,a.shape,u,s.shape,s.dtype,h,i.shape,d,c,l);return n.makeTensorInfo(f,s.dtype,m)}var See={kernelName:pc,backendName:"webgl",kernelFunc:Iee},ET=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=SX(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},Nee={kernelName:gp,backendName:"webgl",kernelFunc:ET},Tee="return 1.0 / x;",_ee=qe({opSnippet:Tee}),Cee={kernelName:_l,backendName:"webgl",kernelFunc:_ee},Eee=br+`
  return (x < 0.0) ? 0.0 : x;
`,$ee=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Aee=qe({opSnippet:Eee,packedOpSnippet:$ee}),Ree={kernelName:Ni,backendName:"webgl",kernelFunc:Aee},Fee=br+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Mee=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Dee=qe({opSnippet:Fee,packedOpSnippet:Mee}),Oee={kernelName:Ci,backendName:"webgl",kernelFunc:Dee},Lee=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let p=[r&&t>1?i-1:i,r&&n>1?o-1:o],u=[r&&t>1?t-1:t,r&&n>1?n-1:n],h;a?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/u[0]},
          ${p[1]/u[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},zee=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let p=[r&&t>1?i-1:i,r&&n>1?o-1:o],u=[r&&t>1?t-1:t,r&&n>1?n-1:n],h;a?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/u[0]},
          ${p[1]/u[1]},
          ${p[1]/u[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function Pee(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,p]=o,u=q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new zee(a.shape,l,p,s,i):new Lee(a.shape,l,p,s,i);return n.runWebGLProgram(u,[a],"float32")}var Bee={kernelName:_i,backendName:"webgl",kernelFunc:Pee},Wee=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],p=o[0]/l[0],u=o[1]/l[1],h=1/p,d=1/u,c=Math.ceil(h)*2+2,f=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${u});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${d});

        const int winHeight = int(${c});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Vee(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Wee(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var Uee={kernelName:cc,backendName:"webgl",kernelFunc:Vee},Gee=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let p=[r&&t>1?i-1:i,r&&n>1?o-1:o],u=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0",d;a?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/u[0]},
          ${p[1]/u[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},Hee=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let p=[r&&t>1?i-1:i,r&&n>1?o-1:o],u=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0",d;a?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/u[0]},
          ${p[1]/u[1]},
          ${p[1]/u[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function qee(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,p]=o,u=q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Hee(a.shape,l,p,s,i):new Gee(a.shape,l,p,s,i);return n.runWebGLProgram(u,[a],a.dtype)}var jee={kernelName:Ti,backendName:"webgl",kernelFunc:qee},Kee=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],p=o[0]/l[0],u=o[1]/l[1],h=1/p,d=1/u,c=Math.ceil(h)*2+2,f=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${u});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${d});

        const int winHeight = int(${c});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${a}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Xee(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Kee(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var Zee={kernelName:dc,backendName:"webgl",kernelFunc:Xee},Yee=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let r=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,a=e.map((i,o)=>r(o)).join(","),s=pt(n);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}},Jee=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=pn("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=pt(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${a}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(r.slice())};
          if(${a}){
            result.g = ${l(r.slice())};
          }
          if(${s}) {
            result.b = ${p(r.slice())};
            if(${a}) {
              result.a = ${u(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function o(c){return h(c)}function l(c){return c[n-1]="("+c[n-1]+" + 1)",h(c)}function p(c){return c[n-2]="("+c[n-2]+" + 1)",h(c)}function u(c){return c[n-1]="("+c[n-1]+" + 1)",c[n-2]="("+c[n-2]+" + 1)",h(c)}function h(c){let f=e.map((y,b)=>d(b,c)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function d(c,f){return t.indexOf(c)!==-1&&e[c]!==1?`${e[c]} - ${f[c]} - 1`:`${f[c]}`}}};function Qee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=v.parseAxisParam(s,a.shape);if(i===0)return jn({inputs:{x:a},backend:n});let l=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Jee(a.shape,o):new Yee(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}var ete={kernelName:Ei,backendName:"webgl",kernelFunc:Qee},tte=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let a="";typeof t=="number"?a=`float outputValue = ${t.toFixed(2)};`:a=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${a}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},nte={kernelName:Gl,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=new tte(r.shape,s),[p,u]=T.getImageCenter(i,r.shape[1],r.shape[2]),h=[[p,u,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},rte=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,ate=qe({opSnippet:rte}),ste={kernelName:$i,backendName:"webgl",kernelFunc:ate},ite="return inversesqrt(x);",ote=qe({opSnippet:ite,cpuKernelImpl:NX}),lte={kernelName:Ai,backendName:"webgl",kernelFunc:ote},$T=class{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let o=pt(a.length),l=pt(s.length),p="";n===1?p="i":n===2&&(p="i, j");let u=`getIndices(${p})`,h="";r===1?h="i":r===2&&(h="i, coords[1]");let d=`getUpdates(${h})`,c=t>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${a});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${u});
              flattenedIndex += index * ${c};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function ute(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:p,strides:u,outputSize:h}=T.calculateShapes(s,a,i),d=[h/p,p];if(h===0)return n.makeTensorInfo(i,a.dtype);let c=ue({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=ue({inputs:{x:s},backend:n,attrs:{shape:[l,p]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new $T(l,o,c.shape.length,f.shape.length,u,d),y=n.runWebGLProgram(g,[f,c,m],f.dtype),b=ue({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}var pte={kernelName:El,backendName:"webgl",kernelFunc:ute},hte=class{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let a="while (left < right) {",s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=q().getNumber("WEBGL_VERSION")===2?a:s,o=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${o} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function dte(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new hte(a.shape[0],a.shape[1],s.shape[1],i),l=[[a.shape[1]]];return n.runWebGLProgram(o,[a,s],"int32",l)}var cte={kernelName:fc,backendName:"webgl",kernelFunc:dte},fte=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let r,a;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)a="resRC",r="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],l=[];for(let p=0;p<t.length;p++)l.push(`${i[p]}`),p<e&&o.push(`${i[p]}`);r=o.join(),a=l.join()}let s=pt(n);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${a}));
        } else {
          setOutput(getB(${a}));
        }
      }
    `}};function mte(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new fte(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],rr(a.dtype,s.dtype))}var gte={kernelName:$l,backendName:"webgl",kernelFunc:mte},yte=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${T.SELU_SCALEALPHA};
  float scale = ${T.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,bte=qe({opSnippet:yte}),xte={kernelName:Al,backendName:"webgl",kernelFunc:bte},wte=hu+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,vte=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,kte=qe({opSnippet:wte,packedOpSnippet:vte,cpuKernelImpl:_X}),Ite={kernelName:Fi,backendName:"webgl",kernelFunc:kte},Ste=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Nte=qe({opSnippet:Ste}),Tte={kernelName:Ml,backendName:"webgl",kernelFunc:Nte},_te=hu+`
  return sin(x);
`,Cte=qe({opSnippet:_te}),Ete={kernelName:Ri,backendName:"webgl",kernelFunc:Cte},$te=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Ate=qe({opSnippet:$te}),Rte={kernelName:Fl,backendName:"webgl",kernelFunc:Ate},Fte=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Mte=qe({opSnippet:Fte}),Dte={kernelName:Dl,backendName:"webgl",kernelFunc:Mte},Ote=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;v.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((y,b)=>y*b),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<a.shape.length;++y)l.push([0,0]);let p=[],u=CT({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=T.getReshaped(u.shape,s,o,!1),d=T.getPermuted(h.length,s.length,!1),c=T.getReshapedPermuted(u.shape,s,o,!1),f=ue({inputs:{x:u},backend:n,attrs:{shape:h}}),m=cn({inputs:{x:f},backend:n,attrs:{perm:d}}),g=ue({inputs:{x:m},backend:n,attrs:{shape:c}});return p.push(u),p.push(f),p.push(m),p.forEach(y=>n.disposeIntermediateTensorInfo(y)),g},Lte={kernelName:Ol,backendName:"webgl",kernelFunc:Ote};function zte(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.readSync(r.dataId),l=n.readSync(a.dataId),p=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[h,d,c,f,m]=EX(o,r.shape,r.dtype,l,a.dtype,p,u);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}var Pte={kernelName:yp,backendName:"webgl",kernelFunc:zte};function Bte(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[p,u,h]=$X(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(u,r.dtype,p),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}var Wte={kernelName:zl,backendName:"webgl",kernelFunc:Bte};function Vte(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[p,u]=J2(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(u,r.dtype,p)}var Ute={kernelName:bp,backendName:"webgl",kernelFunc:Vte};function Gte(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[p,u]=J2(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(u,r.dtype,p)}var Hte={kernelName:xp,backendName:"webgl",kernelFunc:Gte};function qte(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:p,sliceSize:u,strides:h,outputSize:d}=T.calculateShapes(s,a,o),c=!1;if(s.dtype==="string"){let y=n.bufferSync(a),b=n.bufferSync(s),x=v.decodeString(n.readSync(i.dataId)[0]),w=TX(y,b,o,d,u,p,l,h,x,c);return n.makeTensorInfo(o,w.dtype,w.values)}let f=new $T(p,l,a.shape.length,s.shape.length,h,[d,1],c),m=n.runWebGLProgram(f,[s,a,i],s.dtype),g=ue({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}var jte={kernelName:mc,backendName:"webgl",kernelFunc:qte};function Kte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=v.parseAxisParam(i,a.shape)[0],l=T.prepareSplitSize(a,s,o),p=a.shape.length,u=new Array(p).fill(0),h=a.shape.slice();return l.map(d=>{let c=[...h];c[o]=d;let f=du({inputs:{x:a},backend:n,attrs:{begin:u,size:c}});return u[o]+=d,f})}var Xte={kernelName:Ll,backendName:"webgl",kernelFunc:Kte},g0="return sqrt(x);",Zte=qe({opSnippet:g0,packedOpSnippet:g0,cpuKernelImpl:AX}),Yte={kernelName:Mi,backendName:"webgl",kernelFunc:Zte},Jte="return x * x;",Qte=qe({opSnippet:Jte}),ene={kernelName:wp,backendName:"webgl",kernelFunc:Qte},y0="return (a - b) * (a - b);",tne=en({opSnippet:y0,packedOpSnippet:y0}),nne={kernelName:Li,backendName:"webgl",kernelFunc:tne};function rne({inputs:e,attrs:t,backend:n}){let{x:r}=e,a=br+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new ia(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}var ane={kernelName:qa,backendName:"webgl",kernelFunc:rne},sne=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=pt(n.length),s=pt(n.length),i="";if(r===1)i="coords * strides + begin";else{let o=0;i=n.map((l,p)=>(o++,n.length===1?`coords * strides[${p}] + begin[${p}]`:`coords[${o-1}] * strides[${p}] + begin[${p}]`)).join(",")}this.userCode=`
      ${a} begin = ${a}(${e});
      ${a} strides = ${a}(${t});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function ine(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:p,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=Mt.sliceInfo(a.shape,s,i,o,l,p,u,h,d),I;if(m)I=ue({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||y){v.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let C=Mt.computeOutShape(b,x,w),E=du({inputs:{x:a},backend:n,attrs:{begin:b,size:C}});I=ue({inputs:{x:E},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(E)}else if(n.shouldExecuteOnCPU([a])){let C=n.readSync(a.dataId),E=Le(a.shape,a.dtype,C),$=RX(c,E,w,b);I=n.makeTensorInfo(f,a.dtype,$.values)}else{let C=new sne(b,w,c);I=n.runWebGLProgram(C,[a],a.dtype)}let N=ue({inputs:{x:I},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(I),N}var one={kernelName:Pl,backendName:"webgl",kernelFunc:ine};function lne(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:p}=r,{data:u,dataSplits:h}=t,d=n.readSync(u.dataId),c=n.readSync(h.dataId),[f,m]=FX(d,c,a,s,i,o,l,p);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}var une={kernelName:vp,backendName:"webgl",kernelFunc:lne};function pne(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[p,u,h]=MX(o,l,a),d=u.length;return[n.makeTensorInfo([d,2],"int32",p),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}var hne={kernelName:kp,backendName:"webgl",kernelFunc:pne};function dne(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(s.dataId),o=DX(i,a);return n.makeTensorInfo(s.shape,"int32",o)}var cne={kernelName:Ip,backendName:"webgl",kernelFunc:dne},fne="return tan(x);",mne=qe({opSnippet:fne}),gne={kernelName:Pi,backendName:"webgl",kernelFunc:mne},yne=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,bne=qe({opSnippet:yne}),xne={kernelName:Bi,backendName:"webgl",kernelFunc:bne},wne=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;let r=pt(this.rank),a=vne(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}};function vne(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}function AT(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if(a.dtype==="string"||a.shape.length>5){let o=n.readSync(a.dataId),l=a.dtype==="string"?o.map(h=>v.decodeString(h)):o,p=Le(a.shape,a.dtype,l),u=LX(p,s);return n.makeTensorInfo(u.shape,u.dtype,u.values)}let i=new wne(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var kne={kernelName:Ha,backendName:"webgl",kernelFunc:AT},Ine=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Sne=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function ls(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function b0(e){let t=1;for(;t<e;)t*=2;return t}function Nne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=q().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=q().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),p=a.shape,u=p[p.length-1];if(n.shouldExecuteOnCPU([a])||u<o||s>l){let $=n.readSync(a.dataId),[F,R]=zX($,p,a.dtype,s,i);return[n.makeTensorInfo(F.shape,F.dtype,F.values),n.makeTensorInfo(R.shape,R.dtype,R.values)]}if(s===0)return p[p.length-1]=0,[n.makeTensorInfo(p,a.dtype,[]),n.makeTensorInfo(p,"int32",[])];if(u===1)return[a,lh({attrs:{shape:p,dtype:"int32",value:0},backend:n})];let h=n.texData.get(a.dataId),d=h!==null&&h.isPacked,c=d?n.unpackTensor(a):a,f=v.sizeFromShape(p)/u,m=ue({inputs:{x:c},attrs:{shape:[f,u]},backend:n});d&&ls(n,c);let g=b0(s),y=b0(u),b=null,x=()=>b===null?[m,m]:[m,b],w=($,F,R)=>{let S=x(),D=new Ine(R),W=[[u],[b===null?1:0],[Number.NEGATIVE_INFINITY],[$],[F]],U=b;b=n.runWebGLProgram(D,S,"int32",W),ls(n,U)};for(let $=1;$<g;$*=2){let F=$*2;for(let R=$;R>=1;R/=2)w(F,R,[f,y])}for(let $=y;$>g;$/=2){let F=x(),R=new Sne([f,$/2]),S=[[u],[b===null?1:0],[g]],D=b;b=n.runWebGLProgram(R,F,"int32",S),ls(n,D);let W=g/2,U=W*2;for(let G=W;G>=1;G/=2)w(U,G,b.shape)}let I=b;b=du({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),ls(n,I);let N=kT({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});ls(n,m);let C=p.slice(0,-1);C.push(s),I=b,b=ue({inputs:{x:b},attrs:{shape:C},backend:n}),ls(n,I);let E=N;return N=ue({inputs:{x:N},attrs:{shape:C},backend:n}),ls(n,E),[N,b]}var Tne={kernelName:Bl,backendName:"webgl",kernelFunc:Nne},_ne=class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i=n==="nearest"?1:2,o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${o} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${a});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${a});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Cne(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:p}=r,[u,h,d,c]=a.shape,[f,m]=p!=null?p:[h,d],g=[u,f,m,c],y=new _ne(h,d,i,o,l,g);return n.runWebGLProgram(y,[a,s],"float32")}var Ene={kernelName:Wl,backendName:"webgl",kernelFunc:Cne};function $ne(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;iu(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:p}=PX(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([p.length],"int32",p)]}var Ane={kernelName:gc,backendName:"webgl",kernelFunc:$ne};function Rne(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],p=new Array(o-1),u=0;for(let m=0;m<o;m++)m!==s&&(p[u++]=i.shape[m]);let h=[],d=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let m=0;m<f.length;m++){d[s]=m;let g=du({inputs:{x:i},backend:n,attrs:{begin:d,size:c}}),y=ue({inputs:{x:g},backend:n,attrs:{shape:p}});f[m]=y,h.push(g)}return h.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var Fne={kernelName:Vl,backendName:"webgl",kernelFunc:Rne},Mne=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o="0.0",l="sumValue",p=Math.floor(n/4)*4,u=n%4,h=`
        sumValue += dot(values, segFilter);
    `,d="";a%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `);let c="";a%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${o};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${c}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${p};
        if (${u===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${l});
      }
    `}};function Dne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],p=0,u=T.getAxesPermutation([p],o),h=a;u!=null&&(h=cn({inputs:{x:a},backend:n,attrs:{perm:u}}),l.push(h),p=T.getInnerMostAxes(1,o)[0]);let d=T.segment_util.computeOutShape(h.shape,p,i),c=v.sizeFromShape([h.shape[p]]),f=ue({inputs:{x:h},backend:n,attrs:{shape:[-1,c]}});l.push(f);let m=bc(a.dtype),g=(w,I,N,C,E)=>{let $=w.shape[0],F=w.shape[1],R=T.segment_util.segOpComputeOptimalWindowSize(F,E),S={windowSize:R,inSize:F,batchSize:$,numSegments:E},D=new Mne(S,I),W=n.compileAndRun(D,[w,N],C);if(l.push(W),W.shape[1]===E)return W;let U=ET({backend:n,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),G=AT({inputs:{x:U},backend:n,attrs:{reps:[F/R]}});return l.push(U),l.push(G),g(W,I,G,C,E)},y=g(f,"unsortedSegmentSum",s,m,i),b=ue({inputs:{x:y},backend:n,attrs:{shape:d}}),x=b;if(u!=null){l.push(b);let w=T.getUndoAxesPermutation(u);x=cn({inputs:{x},backend:n,attrs:{perm:w}})}return l.forEach(w=>n.disposeIntermediateTensorInfo(w)),x}var One={kernelName:Sp,backendName:"webgl",kernelFunc:Dne},Lne=[R7,M7,L7,B7,V7,H7,j7,X7,Q7,tZ,aZ,oZ,pZ,fZ,yZ,xZ,vZ,NZ,_Z,EZ,FZ,BZ,VZ,GZ,ZZ,JZ,nY,m7,sY,pY,fY,wY,kY,SY,TY,CY,AY,MY,LY,PY,WY,UY,qY,KY,JY,eJ,rJ,iJ,lJ,dJ,gJ,wJ,IJ,TJ,_J,EJ,AJ,FJ,DJ,LJ,WJ,GJ,jJ,XJ,JJ,tQ,sQ,uQ,f7,hQ,lY,fQ,yQ,wQ,y7,SQ,CQ,$Q,MQ,LQ,WQ,GQ,KQ,JQ,t9,r9,o9,u9,h9,m9,y9,x9,v9,I9,_9,A9,D9,U9,w7,j9,Z9,Q9,nee,qZ,see,oee,uee,dee,gee,x7,bee,wee,kee,See,Nee,jZ,P9,Cee,Ree,Oee,k7,Bee,Uee,jee,Zee,ete,nte,ste,lte,pte,cte,gte,xte,Ite,Tte,Ete,Rte,zZ,W9,Dte,Lte,Pte,Wte,Ute,Hte,jte,Xte,Yte,ene,nne,ane,one,une,hne,cne,B9,E7,gne,xne,kne,Tne,Ene,$7,Ane,Fne,One,iee];for(let e of Lne)Np(e);var vt;(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(vt||(vt={}));var ap;(function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"})(ap||(ap={}));var RT;function zne(e){RT=e.wasm.cwrap(_s,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Pne(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if(a.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:p,activation:u,leakyreluAlpha:h}=r,d=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=0;if(i!=null){let E=n.dataIdMap.get(i.dataId);if(E.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${E.shape.length}.`);f=E.id}let m=o==null?0:n.dataIdMap.get(o.dataId).id,g=ap[u];if(g==null)throw new Error(`${u} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?a.shape[2]:a.shape[1],b=p?s.shape[1]:s.shape[2],x=Hl.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),w=n.makeOutput([...x,y,b],a.dtype),I=n.dataIdMap.get(w.dataId).id,N=new Uint8Array(new Int32Array(a.shape).buffer),C=new Uint8Array(new Int32Array(s.shape).buffer);return RT(d,N,a.shape.length,c,C,s.shape.length,l,p,g,f,m,h||0,I),w}var Bne={kernelName:_s,backendName:"wasm",setupFunc:zne,kernelFunc:Pne};function Ht(e,t){let n;function r(s){n=s.wasm.cwrap(e,null,["number","number","number"])}function a(s){let{backend:i,inputs:{x:o}}=s,l=i.dataIdMap.get(o.dataId).id,p=i.makeOutput(o.shape,t||o.dtype),u=i.dataIdMap.get(p.dataId).id;return v.sizeFromShape(p.shape)===0||n(l,vt[o.dtype],u),p}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var Wne=Ht(Wo);function tn(e,t,n){let r;function a(i){r=i.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function s(i){let{backend:o,inputs:l}=i,{a:p,b:u}=l,h=o.dataIdMap.get(p.dataId).id,d=o.dataIdMap.get(u.dataId).id,c=n!=null?n:p.dtype,f=T.assertAndGetBroadcastShape(p.shape,u.shape),m=o.makeOutput(f,c);if(v.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(p.shape).buffer),y=new Uint8Array(new Int32Array(u.shape).buffer),b=o.dataIdMap.get(m.dataId).id;return r(h,g,p.shape.length,d,y,u.shape.length,vt[p.dtype],b),m}return{kernelName:e,backendName:"wasm",setupFunc:a,kernelFunc:s}}var Vne=tn(Ua),FT;function Une(e){FT=e.wasm.cwrap(Gs,null,["array","number","number","number"])}function Gne(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(v.sizeFromShape(r.shape)===0)return r;let a=t.map(o=>n.dataIdMap.get(o.dataId).id),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return FT(s,a.length,vt[r.dtype],i),r}var Hne={kernelName:Gs,backendName:"wasm",setupFunc:Une,kernelFunc:Gne};function Ef(e){let{inputs:{x:t},backend:n}=e;if(t.dtype==="string")return Tn(n.readSync(t.dataId),t.shape,t.dtype);let r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var qne={kernelName:ui,backendName:"wasm",kernelFunc:Ef},MT;function jne(e){MT=e.wasm.cwrap(oa,null,["number","array","number","number","number","array","number"])}function Pa(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=Xne(t.x.shape,r.perm),i=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(i=!1);let o=Kne(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let f=Ef({inputs:t,backend:n});return f.shape=o,f}let p=n.makeOutput(o,l.dtype),u=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(p.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return MT(u,c,l.shape.length,vt[l.dtype],h,d,s.length),p}function Kne(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}function Xne(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)e[a]!==1&&n.push(e[a]),e[t[a]]!==1&&r.push(t[a]);for(let a=0;a<r.length;++a){let s=-1;for(let i=0;i<r.length;++i)r[i]>=a&&(s===-1||r[s]>r[i])&&(s=i);r[s]=a}return[n,r]}var Zne={kernelName:oa,backendName:"wasm",kernelFunc:Pa,setupFunc:jne};function es(e,t,n){let r=e.shape,a=e.shape.length,s=v.parseAxisParam(t,r),i=s,o=T.getAxesPermutation(i,a),l=null,p=!1;if(o!=null){let u=new Array(a);for(let d=0;d<u.length;d++)u[d]=r[o[d]];i=T.getInnerMostAxes(i.length,a),l=Pa({inputs:{x:e},attrs:{perm:o},backend:n});let h=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==h&&(p=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:p}}var DT;function Yne(e){DT=e.wasm.cwrap(Go,null,["number, number, number"])}function Jne(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:p,axes:u,originalAxes:h,inputWasTransposed:d}=es(i,a,t);if(d){let b=t.dataIdMap.get(p.dataId).id;l=p,o=b}let c=l.shape.length;T.assertAxesAreInnerMostDims("all",u,c);let[f,m]=T.computeOutAndReduceShapes(l.shape,u),g=v.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(v.sizeFromShape(l.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;DT(o,g,b)}if(d&&t.disposeData(p.dataId),s){let b=T.expandShapeToKeepDim(y.shape,h);y.shape=b}return y}var Qne={kernelName:Go,backendName:"wasm",setupFunc:Yne,kernelFunc:Jne},OT;function ere(e){OT=e.wasm.cwrap(Ho,null,["number, number, number"])}function tre(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:p,axes:u,originalAxes:h,inputWasTransposed:d}=es(i,a,t);if(d){let b=t.dataIdMap.get(p.dataId).id;l=p,o=b}let c=l.shape.length;T.assertAxesAreInnerMostDims("any",u,c);let[f,m]=T.computeOutAndReduceShapes(l.shape,u),g=v.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(v.sizeFromShape(l.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;OT(o,g,b)}if(d&&t.disposeData(p.dataId),s){let b=T.expandShapeToKeepDim(y.shape,h);y.shape=b}return y}var nre={kernelName:Ho,backendName:"wasm",setupFunc:ere,kernelFunc:tre},LT;function rre(e){LT=e.wasm.cwrap(Hs,null,["number","number","number","number","number"])}function are(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=i,l=s,{transposed:p,axes:u,inputWasTransposed:h}=es(s,a,t);if(h){let y=t.dataIdMap.get(p.dataId).id;y!==i&&(l=p,o=y)}let d=l.shape.slice(0,-1),c=t.makeOutput(d,"int32"),f=t.dataIdMap.get(c.dataId).id,m=v.sizeFromShape(c.shape),g=l.shape[u[0]];return LT(o,vt[l.dtype],m,g,f),h&&t.disposeData(p.dataId),c}var sre={kernelName:Hs,backendName:"wasm",kernelFunc:are,setupFunc:rre},zT;function ire(e){zT=e.wasm.cwrap(qs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ore(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:p}=n,u=T.computePool2DInfo(a.shape,i,o,1,l,p),h=u.filterHeight,d=u.filterWidth,c=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,y=u.strideHeight,b=u.strideWidth,x=u.inChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);if(u.dilationWidth!==1||u.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${u.dilationHeight}, ${u.dilationWidth}].`);let w=r.makeOutput(u.outShape,"float32"),I=r.dataIdMap.get(w.dataId).id;return zT(s,a.shape[0],a.shape[1],a.shape[2],h,d,c,f,m,g,y,b,x,I),w}var lre={kernelName:qs,backendName:"wasm",setupFunc:ire,kernelFunc:ore};function Cn(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=v.sizeFromShape(r.shape),i=v.inferFromImplicitShape(a,s);return v.assert(s===v.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var ure={kernelName:Cl,backendName:"wasm",kernelFunc:Cn},PT;function pre(e){PT=e.wasm.cwrap(js,null,["number","array","number","number","array","number","number","number","number"])}function hre(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;if(a.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,p=s.shape.length,u=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[p-1]:s.shape[p-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[p-2]:s.shape[p-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=v.sizeFromShape(f),y=v.sizeFromShape(m),b=Hl.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);v.assert(u===h,()=>`Error in matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,u,d]:[g,d,u],w=o?[y,c,h]:[y,h,c],I=Cn({inputs:{x:a},backend:n,attrs:{shape:x}}),N=Cn({inputs:{x:s},backend:n,attrs:{shape:w}}),C=n.dataIdMap.get(I.dataId).id,E=n.dataIdMap.get(N.dataId).id,$=i?I.shape[2]:I.shape[1],F=o?N.shape[1]:N.shape[2],R=Math.max(g,y),S=n.makeOutput([R,$,F],I.dtype),D=n.dataIdMap.get(S.dataId).id,W=new Uint8Array(new Int32Array(I.shape).buffer),U=new Uint8Array(new Int32Array(N.shape).buffer);return PT(C,W,I.shape.length,E,U,N.shape.length,i,o,D),n.disposeData(I.dataId),n.disposeData(N.dataId),S.shape=b,S}var dre={kernelName:js,backendName:"wasm",setupFunc:pre,kernelFunc:hre};function Vs(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=Mt.parseSliceParams(t,n,r),o=Mt.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),p=a.makeOutput(i,t.dtype),u=v.computeStrides(t.shape),h=a.dataIdMap.get(p.dataId);if(o){let f=Mt.computeFlatOffset(s,u);return t.dtype==="string"?h.stringBytes=l.slice(f,f+v.sizeFromShape(i)):a.typedArrayFromHeap(p).set(l.subarray(f,f+v.sizeFromShape(i))),p}if(t.dtype==="string"){let f=Id(l,s,i,t.shape,t.dtype);return h.stringBytes=f,p}let d=a.typedArrayFromHeap(p),c=t.shape.length;if(c===2)cre(l,u[0],d,s,i);else if(c===3)fre(l,u[0],u[1],d,s,i);else if(c===4)mre(l,u[0],u[1],u[2],d,s,i);else{let f=Id(l,s,i,t.shape,t.dtype);d.set(f)}return p}function cre(e,t,n,r,a){let s=0,i=r[0],o=r[1],l=i+a[0];for(let p=i;p<l;p++){let u=p*t+o;n.set(e.subarray(u,u+a[1]),s),s+=a[1]}}function fre(e,t,n,r,a,s){let i=0,o=a[0],l=a[1],p=a[2],u=o+s[0],h=l+s[1];for(let d=o;d<u;d++)for(let c=l;c<h;c++){let f=d*t+c*n+p;r.set(e.subarray(f,f+s[2]),i),i+=s[2]}}function mre(e,t,n,r,a,s,i){let o=0,l=s[0],p=s[1],u=s[2],h=l+i[0],d=p+i[1],c=u+i[2],f=s[3];for(let m=l;m<h;m++)for(let g=p;g<d;g++)for(let y=u;y<c;y++){let b=m*t+g*n+y*r+f;a.set(e.subarray(b,b+i[3]),o),o+=i[3]}}var gre={kernelName:Rl,backendName:"wasm",kernelFunc:Vs};function yre(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce((y,b)=>y*b),l=T.getReshaped(a.shape,s,o),p=T.getPermuted(l.length,s.length),u=T.getReshapedPermuted(a.shape,s,o),h=T.getSliceBeginCoords(i,s.length),d=T.getSliceSize(u,i,s.length),c=Cn({inputs:{x:a},backend:n,attrs:{shape:l}}),f=Pa({inputs:{x:c},backend:n,attrs:{perm:p}}),m=Cn({inputs:{x:f},backend:n,attrs:{shape:u}}),g=Vs({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(c.dataId),g}var bre={kernelName:Yo,backendName:"wasm",kernelFunc:yre};function cu(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var xre={kernelName:Ks,backendName:"wasm",kernelFunc:cu},wre=Ht(Xs),BT;function vre(e){BT=e.wasm.cwrap(Ga,null,["number","number","number","number"])}function kre(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),p=n.dataIdMap.get(l.dataId).id;return BT(o,s,i,p),l}var Ire={kernelName:Ga,backendName:"wasm",setupFunc:vre,kernelFunc:kre};function WT(e){let{inputs:t,backend:n}=e,r=v.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=t.map(c=>c.shape);T.assertParamsConsistent(a,r);let s=T.computeOutShape(t.map(c=>c.shape),r),i=t.filter(c=>v.sizeFromShape(c.shape)>0);if(i.length===1)return Ef({inputs:{x:i[0]},backend:n});let o=n.makeOutput(s,t[0].dtype);if(v.sizeFromShape(s)===0)return o;if(i[0].dtype==="string"){let c=i.map(x=>{let w=v.sizeFromShape(x.shape.slice(r));return Cn({inputs:{x},backend:n,attrs:{shape:[-1,w]}})}),f=c.map(x=>({vals:n.readSync(x.dataId),shape:x.shape}));s=T.computeOutShape(c.map(x=>x.shape),1);let m=c[0].shape[0]===1,g=wx(f,s,t[0].dtype,m),y=T.computeOutShape(i.map(x=>x.shape),r);o.shape=y;let b=n.dataIdMap.get(o.dataId);return b.stringBytes=T.fromStringArrayToUint8(g),c.forEach(x=>n.disposeData(x.dataId)),o}let l=v.sizeFromShape(i[0].shape.slice(0,r)),p=0,u=i.map(c=>{let f=v.sizeFromShape(c.shape.slice(r));return p+=f,f}),h=i.map(c=>n.typedArrayFromHeap(c)),d=n.typedArrayFromHeap(o);for(let c=0;c<l;c++){let f=c*p;for(let m=0;m<h.length;m++){let g=u[m],y=c*g,b=h[m].subarray(y,y+g);d.set(b,f),f+=g}}return o}var Sre={kernelName:Jo,backendName:"wasm",kernelFunc:WT},VT;function Nre(e){VT=e.wasm.cwrap(Zs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Tre(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:p,pad:u,dimRoundingMode:h,dataFormat:d}=n,c=T.convertConv2DDataFormat(d),f=T.computeConv2DInfo(a.shape,s.shape,l,p,u,h,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,w=f.padInfo.left,I=f.dilationHeight,N=f.dilationWidth,C=f.strideHeight,E=f.strideWidth,$=f.inChannels,F=f.outChannels,R=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let S=r.makeOutput(f.outShape,"float32"),D=r.dataIdMap.get(S.dataId).id;return VT(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,x,w,R,I,N,C,E,$,F,D),S}var _re={kernelName:Zs,backendName:"wasm",setupFunc:Nre,kernelFunc:Tre},UT;function Cre(e){UT=e.wasm.cwrap(Ys,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ere(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:p,inputShape:u}=r,h=1,d=T.convertConv2DDataFormat(l),c=T.computeConv2DInfo(u,s.shape,i,h,o,p,!1,d),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:b,inWidth:x,outChannels:w,outHeight:I,outWidth:N,strideHeight:C,strideWidth:E}=c,$=m-1-c.padInfo.top,F=g-1-c.padInfo.left,R=c.dataFormat==="channelsLast",S=v.computeStrides(c.inShape),D=v.computeStrides(a.shape),[W,U,G]=v.computeStrides(s.shape),j=S[0],H=R?S[1]:S[2],X=R?S[2]:1,ee=R?1:S[1],Z=D[0],re=R?D[1]:D[2],te=R?D[2]:1,ae=R?1:D[1],oe=t.makeOutput(c.inShape,"float32"),xe=t.dataIdMap.get(oe.dataId).id,ge=t.dataIdMap.get(a.dataId).id,he=t.dataIdMap.get(s.dataId).id;return UT(ge,he,f,m,g,b,x,y,I,N,w,C,E,$,F,W,U,G,j,H,X,ee,Z,re,te,ae,xe),oe}var $re={kernelName:Ys,backendName:"wasm",setupFunc:Cre,kernelFunc:Ere},Are=Ht(Js),Rre=Ht(Qs),Qm;(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(Qm||(Qm={}));var GT;function Fre(e){GT=e.wasm.cwrap(el,null,["number","number","number","number","array","number","number","number","number","number"])}function Mre(e){let{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:l,boxInd:p}=n,u=l.shape[0],[h,d]=i,c=[u,h,d,o.shape[3]],f=t.dataIdMap.get(o.dataId),m;o.dtype!=="float32"&&(m=cu({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,y=t.dataIdMap.get(l.dataId).id,b=t.dataIdMap.get(p.dataId).id,x=t.makeOutput(c,"float32"),w=t.dataIdMap.get(x.dataId).id,I=new Uint8Array(new Int32Array(o.shape).buffer);return GT(g,y,b,u,I,h,d,Qm[a],s,w),m!=null&&t.disposeData(m.dataId),x}var Dre={kernelName:el,backendName:"wasm",setupFunc:Fre,kernelFunc:Mre},HT;function Ore(e){HT=e.wasm.cwrap(Qo,null,["number","number","number","number","number","number"])}function Lre(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;v.assert(a.dtype==="float32"||a.dtype==="int32",()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`);let p=T.getAxesPermutation([s],l),u=a;p!==null&&(u=Pa({inputs:{x:a},attrs:{perm:p},backend:n}));let h=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumprod",[h],l);let d=n.makeOutput(u.shape,u.dtype),c=u.shape[h],f=n.dataIdMap.get(u.dataId).id,m=n.dataIdMap.get(d.dataId).id;HT(f,i?1:0,o?1:0,c,m,vt[a.dtype]);let g=d;if(p!==null){let y=T.getUndoAxesPermutation(p);g=Pa({inputs:{x:d},attrs:{perm:y},backend:n}),n.disposeData(u.dataId),n.disposeData(d.dataId)}return g}var zre={kernelName:Qo,backendName:"wasm",setupFunc:Ore,kernelFunc:Lre},qT;function Pre(e){qT=e.wasm.cwrap(ei,null,["number","number","number","number","number","number"])}function Bre(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;v.assert(a.dtype==="float32"||a.dtype==="int32",()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`);let p=T.getAxesPermutation([s],l),u=a;p!==null&&(u=Pa({inputs:{x:a},attrs:{perm:p},backend:n}));let h=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumsum",[h],l);let d=n.makeOutput(u.shape,u.dtype),c=u.shape[h],f=n.dataIdMap.get(u.dataId).id,m=n.dataIdMap.get(d.dataId).id;qT(f,i?1:0,o?1:0,c,m,vt[a.dtype]);let g=d;if(p!==null){let y=T.getUndoAxesPermutation(p);g=Pa({inputs:{x:d},attrs:{perm:y},backend:n}),n.disposeData(u.dataId),n.disposeData(d.dataId)}return g}var Wre={kernelName:ei,backendName:"wasm",setupFunc:Pre,kernelFunc:Bre},jT;function Vre(e){jT=e.wasm.cwrap(tl,null,["number","number","number","array","number","array","array","number","number"])}function Ure(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=i==="NHWC"?a.shape[1]:a.shape[2],p=i==="NHWC"?a.shape[2]:a.shape[3],u=i==="NHWC"?a.shape[3]:a.shape[1],h=l*s,d=p*s,c=u/(s*s),f=i==="NHWC"?[o,h,d,c]:[o,c,h,d],m=t.makeOutput(f,"float32"),g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(v.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(f).buffer),x=new Uint8Array(new Int32Array(v.computeStrides(f)).buffer),w=t.dataIdMap.get(m.dataId).id;return jT(g,s,i==="NHWC"?1:0,y,a.shape.length-1,b,x,f.length,w),m}var Gre={kernelName:tl,backendName:"wasm",setupFunc:Vre,kernelFunc:Ure},KT;function Hre(e){KT=e.wasm.cwrap(ti,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function qre(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:p,pad:u,dimRoundingMode:h}=n,d=p==null?[1,1]:p,c=T.computeConv2DInfo(a.shape,s.shape,l,d,u,h,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,b=c.padInfo.bottom,x=c.padInfo.left,w=c.dilationHeight,I=c.dilationWidth,N=c.strideHeight,C=c.strideWidth,E=c.inChannels,$=c.outChannels,F=c.padInfo.type==="SAME"?1:0;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let R=r.makeOutput(c.outShape,"float32"),S=r.dataIdMap.get(R.dataId).id;return KT(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,x,F,w,I,N,C,E,$,S),R}var jre={kernelName:ti,backendName:"wasm",setupFunc:Hre,kernelFunc:qre},Kre=Ht(ri),Xre=!1,Zre=tn(rl,Xre,"bool"),Yre=Ht(ai,"float32");function eg(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(v.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),Cn({inputs:{x:a},backend:r,attrs:{shape:o}})}var Jre={kernelName:al,backendName:"wasm",kernelFunc:eg};function XT(e){let{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}var Qre={kernelName:cp,backendName:"wasm",kernelFunc:XT},ZT;function eae(e){ZT=e.wasm.cwrap(il,null,["number","number","number","number","number","number"])}function tae(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,p,u]=r.shape;return ZT(s,o,l,p,u,i),a}var nae={kernelName:il,backendName:"wasm",kernelFunc:tae,setupFunc:eae},rae=Ht(si),aae=tn(ii),YT;function sae(e){YT=e.wasm.cwrap(oi,null,["number","number","number","number","number","number","number"])}function iae(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:p}=n,u=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,c=l!=null?t.dataIdMap.get(l.dataId).id:0,f=p!=null?t.dataIdMap.get(p.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(v.sizeFromShape(s.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return YT(u,h,d,c,f,a,g),m}var oae={kernelName:oi,backendName:"wasm",setupFunc:sae,kernelFunc:iae},JT;function lae(e){JT=e.wasm.cwrap(Cs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function uae(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:p,dilations:u,dataFormat:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=T.computeConv2DInfo(a.shape,s.shape,l,u,p,d),g=ap[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,w=0;if(i!=null){let te=r.dataIdMap.get(i.dataId);if(te.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${te.shape.length}.`);if(te.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${te.shape}) does not match the number of output channels (${x})`);w=te.id}let I=m.filterHeight,N=m.filterWidth,C=m.padInfo.top,E=m.padInfo.right,$=m.padInfo.bottom,F=m.padInfo.left,R=m.dilationHeight,S=m.dilationWidth,D=m.strideHeight,W=m.strideWidth,U=m.inChannels,G=m.padInfo.type==="SAME"?1:0,j=m.batchSize,H=m.inHeight,X=m.inWidth;if(h!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let ee=r.makeOutput(m.outShape,"float32"),Z=r.dataIdMap.get(ee.dataId).id,re=o==null?0:r.dataIdMap.get(o.dataId).id;return JT(y,j,H,X,b,I,N,w,C,E,$,F,G,R,S,D,W,U,x,g,re,f||0,Z),ee}var pae={kernelName:Cs,backendName:"wasm",setupFunc:lae,kernelFunc:uae},QT;function hae(e){QT=e.wasm.cwrap(Es,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function dae(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:p,dilations:u,dataFormat:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=T.computeConv2DInfo(a.shape,s.shape,l,u,p,d,!0),g=ap[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,w=0;if(i!=null){let te=r.dataIdMap.get(i.dataId);if(te.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${te.shape.length}.`);if(te.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${te.shape}) does not match the number of output channels (${x})`);w=te.id}let I=m.filterHeight,N=m.filterWidth,C=m.padInfo.top,E=m.padInfo.right,$=m.padInfo.bottom,F=m.padInfo.left,R=m.dilationHeight,S=m.dilationWidth,D=m.strideHeight,W=m.strideWidth,U=m.inChannels,G=m.padInfo.type==="SAME"?1:0,j=m.batchSize,H=m.inHeight,X=m.inWidth;if(h!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let ee=r.makeOutput(m.outShape,"float32"),Z=r.dataIdMap.get(ee.dataId).id,re=o==null?0:r.dataIdMap.get(o.dataId).id;return QT(y,j,H,X,b,I,N,w,C,E,$,F,G,R,S,D,W,U,x,g,re,f||0,Z),ee}var cae={kernelName:Es,backendName:"wasm",setupFunc:hae,kernelFunc:dae},e_;function fae(e){e_=e.wasm.cwrap(ll,null,["number","number","number","number","number","number","array","number"])}function mae(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=Tg.prepareAndValidate(r,a),p=t.makeOutput(s,r.dtype);if(i===0)return p;let u=a.shape,h=u[u.length-1],d=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(p.dataId).id;return e_(d,vt[r.dtype],c,i,h,o,f,m),p}var gae={kernelName:ll,backendName:"wasm",setupFunc:fae,kernelFunc:mae},t_;function yae(e){t_=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function bae(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,l=v.parseAxisParam(i,a.shape)[0],p=t.readSync(s.dataId),u=a.shape[l];for(let C=0;C<p.length;++C){let E=p[C];v.assert(E<=u-1&&E>=0,()=>`GatherV2: the index value ${E} is not in [0, ${u-1}]`)}let h=T.segment_util.collectGatherOpShapeInfo(a,s,l,o),d=Cn({inputs:{x:a},attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]},backend:t}),c=v.sizeFromShape(s.shape),f=Cn({inputs:{x:s},attrs:{shape:[h.batchSize,c/h.batchSize]},backend:t}),m=[h.batchSize,h.outerSize,c/h.batchSize,h.sliceSize],g=t.makeOutput(m,a.dtype);if(v.sizeFromShape(a.shape)===0)return g;let y=d.shape.length-1,b=t.dataIdMap.get(d.dataId).id,x=t.dataIdMap.get(f.dataId).id,w=t.dataIdMap.get(g.dataId).id,I=new Uint8Array(new Int32Array(v.computeStrides(d.shape)).buffer),N=new Uint8Array(new Int32Array(v.computeStrides(m)).buffer);return t_(b,vt[a.dtype],I,y,x,h.batchSize,N,w),t.disposeData(d.dataId),t.disposeData(f.dataId),g.shape=h.outputShape,g}var xae={kernelName:ol,backendName:"wasm",setupFunc:yae,kernelFunc:bae},wae=!1,vae=tn(ul,wae,"bool"),kae=!1,Iae=tn(li,kae,"bool"),n_;function Sae(e){n_=e.wasm.cwrap(pi,null,["number","number","number","number"])}function Nae(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(v.sizeFromShape(t.shape)!==0){let i=r.dataIdMap.get(s.dataId).id;n_(a,vt[t.dtype],n,i)}return s}var Tae={kernelName:pi,backendName:"wasm",setupFunc:Sae,kernelFunc:Nae},_ae=!1,Cae=tn(cl,_ae,"bool"),Eae=!1,$ae=tn(fl,Eae,"bool"),Aae=Ht(hi),Rae=!1,Fae=tn(gl,Rae,"bool"),Mae=Ht(yl),Dae=!1,Oae=tn(bl,Dae,"bool"),Lae=!1,zae=tn(j0,Lae,"bool"),r_;function Pae(e){r_=e.wasm.cwrap(di,null,["number","number","number","number"])}function Bae(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:p,axes:u,originalAxes:h,inputWasTransposed:d}=es(i,a,t);if(d){let b=t.dataIdMap.get(p.dataId).id;l=p,o=b}let c=l.shape.length;T.assertAxesAreInnerMostDims("max",u,c);let[f,m]=T.computeOutAndReduceShapes(l.shape,u),g=v.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(v.sizeFromShape(l.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;r_(o,vt[i.dtype],g,b)}if(d&&t.disposeData(p.dataId),s){let b=T.expandShapeToKeepDim(y.shape,h);y.shape=b}return y}var Wae={kernelName:di,backendName:"wasm",setupFunc:Pae,kernelFunc:Bae},Vae=tn(ci),a_;function Uae(e){a_=e.wasm.cwrap(fi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Gae(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;v.assert(a.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`);let{filterSize:i,strides:o,pad:l,dimRoundingMode:p}=n,u=T.computePool2DInfo(a.shape,i,o,1,l,p),h=u.filterHeight,d=u.filterWidth,c=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,y=u.dilationHeight,b=u.dilationWidth,x=u.strideHeight,w=u.strideWidth,I=u.inChannels,N=u.outChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);let C=r.makeOutput(u.outShape,"float32"),E=r.dataIdMap.get(C.dataId).id;return a_(s,a.shape[0],a.shape[1],a.shape[2],h,d,c,f,m,g,y,b,x,w,I,N,E),C}var Hae={kernelName:fi,backendName:"wasm",setupFunc:Uae,kernelFunc:Gae},s_;function qae(e){s_=e.wasm.cwrap(mi,null,["number, number, number"])}function jae(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,p=i,{transposed:u,axes:h,originalAxes:d,inputWasTransposed:c}=es(i,a,t),f=h;if(c){let w=t.dataIdMap.get(u.dataId).id;w!==o&&(p=u,l=w,f=T.getInnerMostAxes(f.length,p.shape.length))}T.assertAxesAreInnerMostDims("mean",f,p.shape.length);let[m,g]=T.computeOutAndReduceShapes(p.shape,f),y=v.sizeFromShape(g),b=p;p.dtype!=="float32"&&(b=cu({backend:t,inputs:{x:p},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(m,"float32");if(v.sizeFromShape(p.shape)!==0){let w=t.dataIdMap.get(x.dataId).id;s_(l,y,w)}if(c&&t.disposeData(u.dataId),s){let w=T.expandShapeToKeepDim(x.shape,d);x.shape=w}return p.dtype!=="float32"&&t.disposeData(b.dataId),x}var Kae={kernelName:mi,backendName:"wasm",setupFunc:qae,kernelFunc:jae},i_;function Xae(e){i_=e.wasm.cwrap(gi,null,["number","number","number","number"])}function Zae(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,p=i,{transposed:u,axes:h,originalAxes:d,inputWasTransposed:c}=es(i,a,t);if(c){let x=t.dataIdMap.get(u.dataId).id;x!==o&&(p=u,l=x)}let f=p.shape.length;T.assertAxesAreInnerMostDims("min",h,f);let[m,g]=T.computeOutAndReduceShapes(p.shape,h),y=v.sizeFromShape(g),b=t.makeOutput(m,p.dtype);if(v.sizeFromShape(p.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;i_(l,vt[i.dtype],y,x)}if(c&&t.disposeData(u.dataId),s){let x=T.expandShapeToKeepDim(b.shape,d);b.shape=x}return b}var Yae={kernelName:gi,backendName:"wasm",setupFunc:Xae,kernelFunc:Zae},Jae=tn(yi),tg;(function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"})(tg||(tg={}));var o_;function Qae(e){o_=e.wasm.cwrap(bi,null,["number","array","number","number","array","array","number","number"])}function ese(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map((f,m)=>f[0]+t.shape[m]+f[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,p=new Uint8Array(new Int32Array(t.shape).buffer),u=r.map(f=>f[0]),h=r.map(f=>f[1]),d=new Uint8Array(new Int32Array(u).buffer),c=new Uint8Array(new Int32Array(h).buffer);return o_(i,p,t.shape.length,vt[t.dtype],d,c,tg[a],l),o}var tse={kernelName:bi,backendName:"wasm",kernelFunc:ese,setupFunc:Qae},nse=tn(xi),rse=Ht(wl);function qx(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var l_;function ase(e){l_=e.wasm.cwrap(kl,"number",["number","number","number","number","number"])}function sse(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,p=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(l.dataId).id,h=l_(p,u,s,a,i),{pSelectedIndices:d,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=qx(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",d)}var ise={kernelName:kl,backendName:"wasm",setupFunc:ase,kernelFunc:sse},u_;function ose(e){u_=e.wasm.cwrap(Il,"number",["number","number","number","number","number","bool"])}function lse(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:p}=n,u=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(p.dataId).id,d=u_(u,h,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=qx(t,d);t.wasm._free(m);let y=t.makeOutput([f],"int32",c),b=t.makeOutput([],"int32",g);return[y,b]}var use={kernelName:Il,backendName:"wasm",setupFunc:ose,kernelFunc:lse},p_;function pse(e){p_=e.wasm.cwrap(Sl,"number",["number","number","number","number","number","number"])}function hse(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:p}=n,u=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(p.dataId).id,d=p_(u,h,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=qx(t,d);t.wasm._free(g);let y=t.makeOutput([f],"int32",c),b=t.makeOutput([f],"float32",m);return[y,b]}var dse={kernelName:Sl,backendName:"wasm",setupFunc:pse,kernelFunc:hse},cse=!1,fse=tn(vl,cse,"bool"),h_;function mse(e){h_=e.wasm.cwrap(wi,null,["number","number","number","number","number"])}function gse(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,p=n.makeOutput([...a.shape,i],s),u=n.dataIdMap.get(p.dataId).id,h=n.dataIdMap.get(a.dataId).id;return h_(h,i,o,l,u),p}var yse={kernelName:wi,backendName:"wasm",setupFunc:mse,kernelFunc:gse};function bse(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}var xse={kernelName:Nl,backendName:"wasm",kernelFunc:bse};function wse(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(t.length===1)return eg({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(u=>{v.assertShapesMatch(s,u.shape,"All tensors passed to stack must have matching shapes"),v.assert(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(u=>{let h=eg({inputs:{input:u},backend:n,attrs:{dim:a}});return o.push(h),h}),p=WT({inputs:l,backend:n,attrs:{axis:a}});return o.forEach(u=>n.disposeData(u.dataId)),p}var vse={kernelName:Tl,backendName:"wasm",kernelFunc:wse},d_;function kse(e){d_=e.wasm.cwrap(vi,null,["number","array","number","number","array","array","number","number"])}function Ise(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map((f,m)=>f[0]+t.shape[m]+f[1]);if(v.sizeFromShape(t.shape)===0)return XT({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,p=new Uint8Array(new Int32Array(t.shape).buffer),u=r.map(f=>f[0]),h=r.map(f=>f[1]),d=new Uint8Array(new Int32Array(u).buffer),c=new Uint8Array(new Int32Array(h).buffer);return d_(i,p,t.shape.length,vt[t.dtype],d,c,a,l),o}var c_={kernelName:vi,backendName:"wasm",kernelFunc:Ise,setupFunc:kse},Sse=tn(ki),f_;function Nse(e){f_=e.wasm.cwrap(Ii,null,["number","number","number"])}function Tse(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=s,l=r,p=l;l.dtype!=="float32"&&(p=cu({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(p.dataId).id);let u=n.makeOutput(r.shape,"float32"),h=n.dataIdMap.get(u.dataId).id;return f_(o,i,h),l.dtype!=="float32"&&n.disposeData(p.dataId),u}var _se={kernelName:Ii,backendName:"wasm",setupFunc:Nse,kernelFunc:Tse},m_;function Cse(e){m_=e.wasm.cwrap(Si,null,["number","number","number","number"])}function Ese(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,p=i,{transposed:u,axes:h,originalAxes:d,inputWasTransposed:c}=es(i,a,t),f=h;if(c){let x=t.dataIdMap.get(u.dataId).id;x!==o&&(p=u,l=x,f=T.getInnerMostAxes(f.length,p.shape.length))}T.assertAxesAreInnerMostDims("prod",f,p.shape.length);let[m,g]=T.computeOutAndReduceShapes(p.shape,f),y=v.sizeFromShape(g),b=t.makeOutput(m,p.dtype);if(v.sizeFromShape(p.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;m_(l,y,vt[b.dtype],x)}if(c&&t.disposeData(u.dataId),s){let x=T.expandShapeToKeepDim(b.shape,d);b.shape=x}return b}var $se={kernelName:Si,backendName:"wasm",setupFunc:Cse,kernelFunc:Ese},Ase=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=Ix(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l},Rse={kernelName:gp,backendName:"wasm",kernelFunc:Ase},Fse=tn(ni),Mse=Ht(Ni),Dse=Ht(Ci),g_;function Ose(e){g_=e.wasm.cwrap(_i,null,["number","number","number","number","number","number","number","number","number","number"])}function Lse(e){let{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,p]=o,[u,h,d,c]=a.shape,f=[u,l,p,c],m=t.dataIdMap.get(a.dataId),g;m.dtype!=="float32"&&(g=cu({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let y=m.id,b=t.makeOutput(f,"float32");if(v.sizeFromShape(a.shape)===0)return b;let x=t.dataIdMap.get(b.dataId).id;return g_(y,u,h,d,c,l,p,s?1:0,i?1:0,x),g!=null&&t.disposeData(g.dataId),b}var zse={kernelName:_i,backendName:"wasm",setupFunc:Ose,kernelFunc:Lse},y_;function Pse(e){y_=e.wasm.cwrap(Ti,null,["number","number","number","number","number","number","number","number","number","number"])}function Bse(e){let{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,p]=o,[u,h,d,c]=a.shape,f=[u,l,p,c],m=t.makeOutput(f,"float32");if(v.sizeFromShape(a.shape)===0)return m;let g=t.dataIdMap.get(a.dataId),y;g.dtype!=="float32"&&(y=cu({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(y.dataId));let b=g.id,x=t.dataIdMap.get(m.dataId).id;return y_(b,u,h,d,c,l,p,s?1:0,i?1:0,x),y!=null&&t.disposeData(y.dataId),m}var Wse={kernelName:Ti,backendName:"wasm",setupFunc:Pse,kernelFunc:Bse},b_;function Vse(e){b_=e.wasm.cwrap(Ei,null,["number","array","number","array","number","number"])}function Use(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=v.parseAxisParam(s,a.shape);if(a.shape.length===0)return Ef({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(a.shape).buffer);b_(l,u,i.length,h,a.shape.length,p);let d=Cn({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),d}var Gse={kernelName:Ei,backendName:"wasm",kernelFunc:Use,setupFunc:Vse},x_;function Hse(e){x_=e.wasm.cwrap(Gl,null,["number","number","number","number","number","number","number","number","array","number","number"])}function qse(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),p=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(l.dataId).id,[h,d,c,f]=a.shape,[m,g]=T.getImageCenter(o,d,c),y=i===0,b=255,x=typeof i=="number"?[i,i,i,y?0:b]:[...i,b],w=new Uint8Array(new Int32Array(x).buffer);return x_(p,h,d,c,f,s,m,g,w,x.length,u),l}var jse={kernelName:Gl,backendName:"wasm",kernelFunc:qse,setupFunc:Hse},Kse=Ht($i),Xse=Ht(Ai),w_;function Zse(e){w_=e.wasm.cwrap(El,null,["number","number","number","number","number","number","array","number","number"])}function Yse(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(v.sizeFromShape(i)===0)return o;let{sliceRank:l,numUpdates:p,sliceSize:u,strides:h,outputSize:d}=_g.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(h).buffer),g=t.dataIdMap.get(o.dataId).id;return w_(c,f,vt[s.dtype],l,p,u,m,d,g),o}var Jse={kernelName:El,backendName:"wasm",setupFunc:Zse,kernelFunc:Yse},v_;function Qse(e){v_=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function eie(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,p=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(p.dataId).id,h=r.shape.length,d=a.shape.length,c=h===0||h>1||d===1?1:v.sizeFromShape(a.shape.slice(1));return v_(i,o,l,c,u),p}var tie={kernelName:$l,backendName:"wasm",kernelFunc:eie,setupFunc:Qse},k_;function nie(e){k_=e.wasm.cwrap(Fi,null,["number","number"])}function rie(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return v.sizeFromShape(a.shape)===0||k_(r,s),a}var aie={kernelName:"Sigmoid",backendName:"wasm",setupFunc:nie,kernelFunc:rie},sie=Ht(Ri),I_;function iie(e){I_=e.wasm.cwrap(Oi,null,["number","number","number","number"])}function oie(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=v.sizeFromShape(n.shape)/o;return v.sizeFromShape(s.shape)===0||I_(a,i,o,l),s}var lie={kernelName:Oi,backendName:"wasm",setupFunc:iie,kernelFunc:oie};function uie(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=v.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let p=c_.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),u=T.getReshaped(p.shape,s,o,!1),h=T.getPermuted(u.length,s.length,!1),d=T.getReshapedPermuted(p.shape,s,o,!1),c=Cn({inputs:{x:p},backend:n,attrs:{shape:u}}),f=Pa({inputs:{x:c},backend:n,attrs:{perm:h}}),m=Cn({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeData(p.dataId),n.disposeData(c.dataId),n.disposeData(f.dataId),m}var pie={kernelName:Ol,backendName:"wasm",kernelFunc:uie},S_;function hie(e){S_=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function die(e){let{backend:t,inputs:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=n,o=r.shape[0],l=r.shape[1],p=t.readSync(s.dataId)[0],u=[o+p,l],h=t.dataIdMap.get(r.dataId).id,d=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(u,r.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(u.slice(0,1),a.dtype),y=t.dataIdMap.get(g.dataId).id,b=t.makeOutput([p],"bool"),x=t.dataIdMap.get(b.dataId).id,w=t.makeOutput([o],r.dtype),I=t.dataIdMap.get(w.dataId).id,N=t.makeOutput([4],"int32"),C=t.dataIdMap.get(N.dataId).id,E=S_(h,d,vt[a.dtype],o,p,l,c,m,y,x,I,C),$=t.readSync(N.dataId),F;switch($[0]){case 1:{F=T.getSparseFillEmptyRowsIndicesDenseShapeMismatch($[1]);break}case 2:{F=T.getSparseFillEmptyRowsNegativeIndexErrorMessage($[1],$[2]);break}case 3:F=T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage($[1],$[2],$[3]);break;default:F=""}if(t.disposeData(N.dataId),F)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(b.dataId),t.disposeData(w.dataId),new Error(F);let R=f,S=g;return E!==u[0]&&(R=Vs({inputs:{x:f},attrs:{begin:0,size:[E,l]},backend:t}),S=Vs({inputs:{x:g},attrs:{begin:0,size:E},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[R,S,b,w]}var cie={kernelName:yp,backendName:"wasm",setupFunc:hie,kernelFunc:die},N_;function fie(e){N_=e.wasm.cwrap(zl,null,["number","number","number","number","number","number","number"])}function mie(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,p=r.shape[0],u=v.sizeFromShape(s.shape),h=t.makeOutput([p,u],r.dtype),d=t.dataIdMap.get(h.dataId).id,c=t.makeOutput([u],s.dtype),f=t.dataIdMap.get(c.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;N_(i,o,l,p,d,f,g);let y=t.readSync(m.dataId),b;switch(y[0]){case 0:{b=T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{b=T.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:b=T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let x=Array.from(t.readSync(a.dataId)),w=Array.from(t.readSync(c.dataId));b=T.getSparseReshapeInputOutputMultipleErrorMessage(x,w);break}case 4:{let x=Array.from(t.readSync(a.dataId)),w=Array.from(t.readSync(c.dataId));b=T.getSparseReshapeInputOutputMismatchErrorMessage(x,w);break}default:b=""}if(t.disposeData(m.dataId),b)throw t.disposeData(h.dataId),t.disposeData(c.dataId),new Error(b);return[h,c]}var gie={kernelName:zl,backendName:"wasm",setupFunc:fie,kernelFunc:mie},T_;function __(e){T_=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function C_(e,t){let{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],p=o>0?l+1:0;if(p<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let u=a.shape.slice();u[0]=p;let h=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(u,a.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;T_(h,vt[a.dtype],a.shape[0],d,c,m,y,t,0);let b=n.readSync(g.dataId),x;switch(b[0]){case 0:{x=T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{x=T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:x=T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b[1],b[2]);break;case 3:x=T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b[1],b[2],b[3]);break;default:x=""}if(n.disposeData(g.dataId),x)throw n.disposeData(f.dataId),new Error(x);return f}function yie(e){return C_(e,!0)}var bie={kernelName:bp,backendName:"wasm",setupFunc:__,kernelFunc:yie};function xie(e){return C_(e,!1)}var wie={kernelName:xp,backendName:"wasm",setupFunc:__,kernelFunc:xie};function vie(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=v.parseAxisParam(i,a.shape)[0],l=T.prepareSplitSize(a,s,o),p=new Array(a.shape.length).fill(0),u=a.shape.slice();return l.map(h=>{let d=[...u];d[o]=h;let c=Vs({inputs:{x:a},attrs:{begin:p,size:d},backend:r});return p[o]+=h,c})}var kie={kernelName:Ll,backendName:"wasm",kernelFunc:vie},Iie=Ht(Mi),Sie=Ht(wp),Nie=tn(Li),E_;function Tie(e){E_=e.wasm.cwrap(qa,null,["number","number","number","number"])}function _ie(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return E_(i,a,vt[s.dtype],l),o}var Cie={kernelName:qa,backendName:"wasm",setupFunc:Tie,kernelFunc:_ie},$_;function Eie(e){$_=e.wasm.cwrap(Pl,null,["number","array","number","array","array","array","array","array","number","number"])}function $ie(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{begin:s,end:i,strides:o,beginMask:l,endMask:p,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=Mt.sliceInfo(a.shape,s,i,o,l,p,u,h,d),I;if(m)I=Cn({inputs:{x:a},backend:t,attrs:{shape:f}});else if(g||y){v.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let N=Mt.computeOutShape(b,x,w),C=Vs({inputs:{x:a},backend:t,attrs:{begin:b,size:N}});I=Cn({inputs:{x:C},backend:t,attrs:{shape:f}}),t.disposeData(C.dataId)}else{let N=t.makeOutput(c,"float32"),C=t.dataIdMap.get(a.dataId).id,E=new Uint8Array(new Int32Array(v.computeStrides(a.shape)).buffer),$=new Uint8Array(new Int32Array(b).buffer),F=new Uint8Array(new Int32Array(x).buffer),R=new Uint8Array(new Int32Array(w).buffer),S=new Uint8Array(new Int32Array(c).buffer),D=new Uint8Array(new Int32Array(v.computeStrides(c)).buffer),W=t.dataIdMap.get(N.dataId).id;$_(C,E,a.shape.length,$,F,R,S,D,c.length,W),I=Cn({inputs:{x:N},backend:t,attrs:{shape:f}}),t.disposeData(N.dataId)}return I}var Aie={kernelName:Pl,backendName:"wasm",setupFunc:Eie,kernelFunc:$ie};function Rie(e){let{backend:t,inputs:n,attrs:r}=e,{data:a,dataSplits:s}=n,{separator:i,nGramWidths:o,leftPad:l,rightPad:p,padWidth:u,preserveShortSequences:h}=r,d=t.readSync(a.dataId),c=t.readSync(s.dataId),[f,m]=Nx(d,c,i,o,l,p,u,h),g=t.makeOutput([f.length],"string"),y=t.dataIdMap.get(g.dataId);y.stringBytes=f;let b=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(b).set(m),[g,b]}var Fie={kernelName:vp,backendName:"wasm",kernelFunc:Rie};function Mie(e){let{backend:t,inputs:n,attrs:r}=e,{input:a,delimiter:s}=n,{skipEmpty:i}=r,o=t.readSync(a.dataId),l=t.readSync(s.dataId),[p,u,h]=Tx(o,l[0],i),d=u.length,c=t.makeOutput([d,2],"int32");t.typedArrayFromHeap(c).set(p);let f=t.makeOutput([d],"string"),m=t.dataIdMap.get(f.dataId);m.stringBytes=u;let g=t.makeOutput([2],"int32");return t.typedArrayFromHeap(g).set(h),[c,f,g]}var Die={kernelName:kp,backendName:"wasm",kernelFunc:Mie};function Oie(e){let{backend:t,inputs:n,attrs:r}=e,{input:a}=n,{numBuckets:s}=r,i=t.readSync(a.dataId),o=_x(i,s),l=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(l).set(o),l}var Lie={kernelName:Ip,backendName:"wasm",kernelFunc:Oie},zie=tn(zi),A_;function Pie(e){A_=e.wasm.cwrap(Di,null,["number","number","number","number"])}function Bie(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,p=i,{transposed:u,axes:h,originalAxes:d,inputWasTransposed:c}=es(i,a,t),f=h;if(c){let x=t.dataIdMap.get(u.dataId).id;x!==o&&(p=u,l=x,f=T.getInnerMostAxes(f.length,p.shape.length))}T.assertAxesAreInnerMostDims("sum",f,p.shape.length);let[m,g]=T.computeOutAndReduceShapes(p.shape,f),y=v.sizeFromShape(g),b=t.makeOutput(m,p.dtype);if(v.sizeFromShape(p.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;A_(l,y,vt[b.dtype],x)}if(c&&t.disposeData(u.dataId),s){let x=T.expandShapeToKeepDim(b.shape,d);b.shape=x}return b}var Wie={kernelName:Di,backendName:"wasm",setupFunc:Pie,kernelFunc:Bie},Vie=Ht(Pi),Uie=Ht(Bi),R_;function Gie(e){R_=e.wasm.cwrap(Ha,null,["number","array","number","array","number","number"])}function Hie(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let d=0;d<o.length;d++)o[d]=a.shape[d]*i[d];let l=new Uint8Array(new Int32Array(a.shape).buffer),p=new Uint8Array(new Int32Array(o).buffer),u=n.makeOutput(o,a.dtype),h=n.dataIdMap.get(u.dataId).id;return R_(s,l,a.shape.length,p,o.length,vt[u.dtype],h),u}var qie={kernelName:Ha,backendName:"wasm",setupFunc:Gie,kernelFunc:Hie},F_;function jie(e){F_=e.wasm.cwrap(Bl,null,["number","array","number","number","number","bool","number","number"])}var Kie=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=a;let p=t.makeOutput(l,r.dtype),u=t.dataIdMap.get(p.dataId).id,h=t.makeOutput(l,"int32"),d=t.dataIdMap.get(h.dataId).id;return F_(i,o,r.shape.length,vt[r.dtype],a,s,u,d),[p,h]},Xie={kernelName:Bl,backendName:"wasm",setupFunc:jie,kernelFunc:Kie},M_;function Zie(e){M_=e.wasm.cwrap(Wl,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function Yie(e){let{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:l,outputShape:p}=r,[u,h,d,c]=a.shape,[f,m]=p!=null?p:[h,d],g=[u,f,m,c],y=new Uint8Array(new Int32Array(v.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(v.computeStrides(g)).buffer),x=t.makeOutput(g,a.dtype),w=t.dataIdMap.get(x.dataId).id,I=t.dataIdMap.get(a.dataId).id,N=t.dataIdMap.get(s.dataId).id,C=i==="nearest"?1:2,E;switch(o){case"constant":E=1;break;case"reflect":E=2;break;case"wrap":E=3;break;case"nearest":E=4;break;default:E=1;break}return M_(I,N,s.shape[0]>1,u,f,m,c,d,h,y,a.shape.length-1,b,g.length-1,C,E,l,w),x}var Jie={kernelName:Wl,backendName:"wasm",setupFunc:Zie,kernelFunc:Yie};function Qie(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=new Array(o-1),p=0;for(let c=0;c<o;c++)c!==s&&(l[p++]=a.shape[c]);let u=new Array(i),h=new Array(o).fill(0),d=a.shape.slice();d[s]=1;for(let c=0;c<u.length;c++)h[s]=c,u[c]=Vs({inputs:{x:a},attrs:{begin:h,size:d},backend:n});return u.map(({dataId:c,dtype:f})=>({dataId:c,dtype:f,shape:l}))}var eoe={kernelName:Vl,backendName:"wasm",kernelFunc:Qie};function toe(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}var noe={kernelName:Ul,backendName:"wasm",kernelFunc:toe},roe=[Bne,Wne,Vne,Hne,Qne,nre,sre,lre,dre,bre,xre,wre,Ire,Sre,_re,$re,Are,Rre,Dre,zre,Wre,Gre,jre,Kre,Zre,Yre,Jre,Qre,nae,rae,aae,oae,pae,cae,gae,xae,vae,Iae,qne,Tae,Cae,$ae,Aae,Fae,Mae,Oae,zae,Wae,Vae,Hae,Kae,Yae,Jae,tse,nse,rse,ise,use,dse,fse,yse,xse,vse,c_,Sse,_se,$se,Rse,Fse,Mse,Dse,ure,zse,Wse,Gse,jse,Kse,Xse,Jse,tie,aie,sie,gre,lie,pie,cie,gie,bie,wie,kie,Iie,Sie,Nie,Cie,Aie,Fie,Die,Lie,zie,Wie,Vie,Uie,qie,Xie,Jie,Zne,eoe,noe];for(let e of roe)Np(e);var ng=q();ng.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch{return!1}});ng.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(ng.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var x0=Wa(ME()),aoe=Wa(DE()),w0=Wa(OE()),v0=x0.default||x0,soe=w0.default||w0,D_=class extends op{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(O_),rg=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Od(this,hr())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}move(e,t,n,r,a){let s=this.dataIdNextNumber++;if(r==="string"){let p=t;this.dataIdMap.set(e,{id:s,stringBytes:p,shape:n,dtype:r,memoryOffset:null,refCount:a});return}let i=v.sizeFromShape(n),o=i*v.bytesPerElement(r),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if(a==="string")return(t==null||t===0)&&(n==null||n>=i.length)?i:i.slice(t,n);t=t||0,n=n||v.sizeFromShape(s);let o=v.bytesPerElement(a),l=this.wasm.HEAPU8.slice(r+t*o,r+n*o);return loe(l.buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(n==null)r=this.write(null,e,t);else{let a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});let s=v.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=v.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}};function ioe(e){return(t,n)=>(v.fetch(e,{credentials:"same-origin"}).then(r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then(a=>{WebAssembly.instantiate(a,t).then(s=>{n(s.instance,s.module)})})}),{})}function k0(e,t,n){if($d!=null)return $d;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),Pu!=null&&Pu[r]!=null?Pu[r]:n+r}async function ooe(){let[e,t]=await Promise.all([q().getAsync("WASM_HAS_SIMD_SUPPORT"),q().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,r)=>{let a={};a.locateFile=(o,l)=>{if(o.endsWith(".worker.js")){let p=aoe.wasmWorkerContents.replace(/\n/g,"\\n"),u=new Blob([p],{type:"application/javascript"});return URL.createObjectURL(u)}return o.endsWith(".wasm")?k0(e,t,Ou!=null?Ou:l):l+o},jx&&(a.instantiateWasm=ioe(k0(e,t,Ou!=null?Ou:"")));let s=!1;a.onAbort=()=>{s||Bu||(Bu=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))};let i;t&&e&&$d==null?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+v0.toString()],{type:"text/javascript"}),i=v0(a)):i=soe(a),i.then(o=>{s=!0,Bu=!1;let l=null;o.tfjs={init:o.cwrap("init",null,[]),initWithThreadsCount:o.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:o.cwrap("get_threads_count","number",[]),registerTensor:o.cwrap("register_tensor",null,["number","number","number"]),disposeData:o.cwrap("dispose_data",l,["number"]),dispose:o.cwrap("dispose",l,[])},n({wasm:o})}).catch(r)})}function loe(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var uoe=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],$d=null,Ou=null,Pu={},Bu=!1,jx=!1;function poe(e,t=!1){if(v1("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Bu)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");$d=e,jx=t}function hoe(e,t=!1){if(Bu)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")Ou=e;else{Pu=e;let n=uoe.filter(r=>Pu[r]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}jx=t}var O_=-1,rg=-1;function doe(e){O_=e}function coe(){if(rg===-1)throw new Error("WASM backend not initialized.");return rg}var foe="4.0.0",moe=2;xc("wasm",async()=>{let{wasm:e}=await ooe();return new D_(e)},moe);var I0="4.0.0",goe="4.0.0",yoe="4.0.0",boe="4.0.0",xoe="4.0.0",woe={tfjs:I0,"tfjs-core":I0,"tfjs-converter":goe,"tfjs-backend-cpu":yoe,"tfjs-backend-webgl":boe,"tfjs-backend-wasm":xoe},voe={};ug(voe,{AnchorPosition:()=>j_,DrawBox:()=>X_,DrawBoxOptions:()=>K_,DrawFaceLandmarks:()=>uC,DrawFaceLandmarksOptions:()=>lC,DrawTextField:()=>$f,DrawTextFieldOptions:()=>ew,drawContour:()=>ka,drawDetections:()=>Moe,drawFaceExpressions:()=>Koe,drawFaceLandmarks:()=>Zoe});function ka(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach(({x:r,y:a},s)=>{let i=t[s];e.moveTo(i.x,i.y),e.lineTo(r,a)}),n){let r=t[t.length-1],a=t[0];if(!r||!a)return;e.moveTo(r.x,r.y),e.lineTo(a.x,a.y)}e.stroke()}var koe={};ug(koe,{computeReshapedDimensions:()=>P_,getCenterPoint:()=>Xx,isDimensions:()=>sg,isEven:()=>ag,isFloat:()=>z_,isTensor:()=>fu,isTensor1D:()=>Ioe,isTensor2D:()=>L_,isTensor3D:()=>uh,isTensor4D:()=>ua,isValidNumber:()=>Ns,isValidProbablitiy:()=>Soe,range:()=>Po,round:()=>Kx});var $a=class{constructor(e,t){if(!Ns(e)||!Ns(t))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:e,height:t})}`);this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new $a(1/this.width,1/this.height)}};function fu(e,t){return e instanceof Re&&e.shape.length===t}function Ioe(e){return fu(e,1)}function L_(e){return fu(e,2)}function uh(e){return fu(e,3)}function ua(e){return fu(e,4)}function z_(e){return e%1!==0}function ag(e){return e%2===0}function Kx(e,t=2){let n=10**t;return Math.floor(e*n)/n}function sg(e){return e&&e.width&&e.height}function P_({width:e,height:t},n){let r=n/Math.max(t,e);return new $a(Math.round(e*r),Math.round(t*r))}function Xx(e){return e.reduce((t,n)=>t.add(n),new je(0,0)).div(new je(e.length,e.length))}function Po(e,t,n){return Array(e).fill(0).map((r,a)=>t+a*n)}function Ns(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||e===0}function Soe(e){return Ns(e)&&e>=0&&e<=1}var je=class{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(e){return new je(this.x+e.x,this.y+e.y)}sub(e){return new je(this.x-e.x,this.y-e.y)}mul(e){return new je(this.x*e.x,this.y*e.y)}div(e){return new je(this.x/e.x,this.y/e.y)}abs(){return new je(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new je(Math.floor(this.x),Math.floor(this.y))}},nn=class{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(Ns)}static assertIsValidBox(e,t,n=!1){if(!nn.isRect(e))throw new Error(`${t} - invalid box: ${JSON.stringify(e)}, expected object with properties x, y, width, height`);if(!n&&(e.width<0||e.height<0))throw new Error(`${t} - width (${e.width}) and height (${e.height}) must be positive numbers`)}constructor(e,t=!0){let n=e||{},r=[n.left,n.top,n.right,n.bottom].every(Ns),a=[n.x,n.y,n.width,n.height].every(Ns);if(!a&&!r)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(n)}`);let[s,i,o,l]=a?[n.x,n.y,n.width,n.height]:[n.left,n.top,n.right-n.left,n.bottom-n.top];nn.assertIsValidBox({x:s,y:i,width:o,height:l},"Box.constructor",t),this._x=s,this._y=i,this._width=o,this._height=l}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new je(this.left,this.top)}get topRight(){return new je(this.right,this.top)}get bottomLeft(){return new je(this.left,this.bottom)}get bottomRight(){return new je(this.right,this.bottom)}round(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map(a=>Math.round(a));return new nn({x:e,y:t,width:n,height:r})}floor(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map(a=>Math.floor(a));return new nn({x:e,y:t,width:n,height:r})}toSquare(){let{x:e,y:t,width:n,height:r}=this,a=Math.abs(n-r);return n<r&&(e-=a/2,n+=a),r<n&&(t-=a/2,r+=a),new nn({x:e,y:t,width:n,height:r})}rescale(e){let t=sg(e)?e.width:e,n=sg(e)?e.height:e;return new nn({x:this.x*t,y:this.y*n,width:this.width*t,height:this.height*n})}pad(e,t){let[n,r,a,s]=[this.x-e/2,this.y-t/2,this.width+e,this.height+t];return new nn({x:n,y:r,width:a,height:s})}clipAtImageBorders(e,t){let{x:n,y:r,right:a,bottom:s}=this,i=Math.max(n,0),o=Math.max(r,0),l=a-i,p=s-o,u=Math.min(l,e-i),h=Math.min(p,t-o);return new nn({x:i,y:o,width:u,height:h}).floor()}shift(e,t){let{width:n,height:r}=this,a=this.x+e,s=this.y+t;return new nn({x:a,y:s,width:n,height:r})}padAtBorders(e,t){let n=this.width+1,r=this.height+1,a=1,s=1,i=n,o=r,l=this.left,p=this.top,u=this.right,h=this.bottom;return u>t&&(i=-u+t+n,u=t),h>e&&(o=-h+e+r,h=e),l<1&&(o=2-l,l=1),p<1&&(o=2-p,p=1),{dy:s,edy:o,dx:a,edx:i,y:p,ey:h,x:l,ex:u,w:n,h:r}}calibrate(e){return new nn({left:this.left+e.left*this.width,top:this.top+e.top*this.height,right:this.right+e.right*this.width,bottom:this.bottom+e.bottom*this.height}).toSquare().round()}},B_=class extends nn{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},Zx=class{constructor(e,t,n,r,a){this._imageDims=new $a(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new nn(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new nn(this._box).rescale(this.imageDims.reverse())}forSize(e,t){return new Zx(this.score,this.classScore,this.className,this.relativeBox,{width:e,height:t})}},sr=class extends Zx{constructor(e,t,n){super(e,e,"",t,n)}forSize(e,t){let{score:n,relativeBox:r,imageDims:a}=super.forSize(e,t);return new sr(n,r,a)}};function Noe(e,t,n=!0){let r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left)),a=Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top)),s=r*a;return n?s/(e.area+t.area-s):s/Math.min(e.area,t.area)}function Toe(e){let t=e.map(o=>o.x),n=e.map(o=>o.y),r=t.reduce((o,l)=>l<o?l:o,1/0),a=n.reduce((o,l)=>l<o?l:o,1/0),s=t.reduce((o,l)=>o<l?l:o,0),i=n.reduce((o,l)=>o<l?l:o,0);return new B_(r,a,s,i)}function _oe(e,t,n,r=!0){let a=t.map((i,o)=>({score:i,boxIndex:o})).sort((i,o)=>i.score-o.score).map(i=>i.boxIndex),s=[];for(;a.length>0;){let i=a.pop();s.push(i);let o=a,l=[];for(let p=0;p<o.length;p++){let u=o[p],h=e[i],d=e[u];l.push(Noe(h,d,r))}a=a.filter((p,u)=>l[u]<=n)}return s}function ph(e,t){return B(()=>{let[n,r,a]=t,s=Vn([...e.shape.slice(0,3),1],n,"float32"),i=Vn([...e.shape.slice(0,3),1],r,"float32"),o=Vn([...e.shape.slice(0,3),1],a,"float32"),l=nt([s,i,o],3);return pe(e,l)})}function Coe(e,t=!1){return B(()=>{let[n,r]=e.shape.slice(1);if(n===r)return e;let a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=h=>{let d=e.shape.slice();return d[i]=h,Vn(d,0,"float32")},l=o(s),p=a-l.shape[i],u=[t&&p?o(p):null,e,l].filter(h=>!!h).map(h=>ie(h,"float32"));return nt(u,i)})}function Qf(e){return 1/(1+Math.exp(-e))}var W_=class extends nn{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},Eoe=.5,$oe=.43,Aoe=.45,sp=class{constructor(e,t,n=new je(0,0)){let{width:r,height:a}=t;this._imgDims=new $a(r,a),this._shift=n,this._positions=e.map(s=>s.mul(new je(r,a)).add(n))}get shift(){return new je(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map(e=>e.sub(this._shift).div(new je(this.imageWidth,this.imageHeight)))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new je(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){let a=e instanceof sr?e.box.floor():new nn(e);return this.shiftBy(a.x,a.y).align(null,t)}let{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let e=this.getRefPointsForAlignment(),[t,n,r]=e,a=u=>r.sub(u).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/Aoe),o=Xx(e),l=Math.floor(Math.max(0,o.x-Eoe*i)),p=Math.floor(Math.max(0,o.y-$oe*i));return new W_(l,p,Math.min(i,this.imageWidth+l),Math.min(i,this.imageHeight+p))}alignMinBbox(e){let t=Toe(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},V_=class extends sp{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(Xx)}};function ip(e){return e.detection instanceof sr}function Ad(e,t){return{...e,detection:t}}function U_(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function Yx(){return typeof global=="object"&&typeof process<"u"&&process.versions!=null&&process.versions.node!=null}function G_(e){let t="";if(!e&&Yx())try{e=ps("fs")}catch(n){t=n.toString()}return{readFile:e?n=>new Promise((r,a)=>{e.readFile(n,(s,i)=>s?a(s):r(i))}):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function H_(){let e=global.Canvas||global.HTMLCanvasElement,t=global.Image||global.HTMLImageElement,n=global.Video||global.HTMLVideoElement,r=()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},a=()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},s=()=>{if(n)return new n;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},i=global.fetch,o=G_();return{Canvas:e||class{},CanvasRenderingContext2D:global.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:global.ImageData||class{},Video:global.HTMLVideoElement||class{},createCanvasElement:r,createImageElement:a,createVideoElement:s,fetch:i,...o}}function q_(){return typeof window=="object"&&typeof document<"u"&&typeof HTMLImageElement<"u"&&typeof HTMLCanvasElement<"u"&&typeof HTMLVideoElement<"u"&&typeof ImageData<"u"&&typeof CanvasRenderingContext2D<"u"}var Lt;function Roe(){if(!Lt)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return Lt}function ig(e){Lt=e}function Jx(){return q_()?ig(U_()):Yx()?ig(H_()):null}function Foe(e){if(Lt||Jx(),!Lt)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=Lt.Canvas,Image:n=Lt.Image}=e;Lt.Canvas=t,Lt.Image=n,Lt.createCanvasElement=e.createCanvasElement||(()=>new t),Lt.createImageElement=e.createImageElement||(()=>new n),Lt.ImageData=e.ImageData||Lt.ImageData,Lt.Video=e.Video||Lt.Video,Lt.fetch=e.fetch||Lt.fetch,Lt.readFile=e.readFile||Lt.readFile}var An={getEnv:Roe,setEnv:ig,initialize:Jx,createBrowserEnv:U_,createFileSystem:G_,createNodejsEnv:H_,monkeyPatch:Foe,isBrowser:q_,isNodejs:Yx};Jx();function Qx(e){return!An.isNodejs()&&typeof e=="string"?document.getElementById(e):e}function Ba(e){let{Canvas:t,CanvasRenderingContext2D:n}=An.getEnv();if(e instanceof n)return e;let r=Qx(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let a=r.getContext("2d");if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}var j_=(e=>(e.TOP_LEFT="TOP_LEFT",e.TOP_RIGHT="TOP_RIGHT",e.BOTTOM_LEFT="BOTTOM_LEFT",e.BOTTOM_RIGHT="BOTTOM_RIGHT",e))(j_||{}),ew=class{constructor(e={}){let{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||"TOP_LEFT",this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},$f=class{constructor(e,t,n={}){this.text=typeof e=="string"?[e]:e instanceof $f?e.text:e,this.anchor=t,this.options=new ew(n)}measureWidth(e){let{padding:t}=this.options;return this.text.map(n=>e.measureText(n).width).reduce((n,r)=>n<r?r:n,0)+2*t}measureHeight(){let{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){let{anchorPosition:n}=this.options,r=n==="BOTTOM_RIGHT"||n==="TOP_RIGHT",a=n==="BOTTOM_LEFT"||n==="BOTTOM_RIGHT",s=this.measureWidth(e),i=this.measureHeight(),o=r?this.anchor.x-s:this.anchor.x,l=a?this.anchor.y-i:this.anchor.y;if(t){let{width:p,height:u}=t,h=Math.max(Math.min(o,p-s),0),d=Math.max(Math.min(l,u-i),0);return{x:h,y:d}}return{x:o,y:l}}draw(e){let t=Qx(e),n=Ba(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;let l=this.measureWidth(n),p=this.measureHeight();n.fillStyle=r;let u=this.getUpperLeft(n,t);n.fillRect(u.x,u.y,l,p),n.fillStyle=a,this.text.forEach((h,d)=>{let c=o+u.x,f=o+u.y+(d+1)*s;n.fillText(h,c,f)})}},K_=class{constructor(e={}){let{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;let s={anchorPosition:"BOTTOM_LEFT",backgroundColor:this.boxColor};this.drawLabelOptions=new ew({...s,...a})}},X_=class{constructor(e,t={}){this.box=new nn(e),this.options=new K_(t)}draw(e){let t=Ba(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);let{label:l}=this.options;l&&new $f([l],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function Moe(e,t){(Array.isArray(t)?t:[t]).forEach(n=>{let r=n instanceof sr?n.score:ip(n)?n.detection.score:void 0,a=n instanceof sr?n.box:ip(n)?n.detection.box:new nn(n),s=r?`${Kx(r)}`:void 0;new X_(a,{label:s}).draw(e)})}function Z_(e){let{Image:t,Video:n}=An.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function Doe(e){return new Promise((t,n)=>{(e instanceof An.getEnv().Canvas||Z_(e))&&t(null);function r(s){!s.currentTarget||(s.currentTarget.removeEventListener("load",a),s.currentTarget.removeEventListener("error",r),n(s))}function a(s){!s.currentTarget||(s.currentTarget.removeEventListener("load",a),s.currentTarget.removeEventListener("error",r),t(s))}e.addEventListener("load",a),e.addEventListener("error",r)})}function tw(e){let{Image:t,Video:n}=An.getEnv();return e instanceof t?new $a(e.naturalWidth,e.naturalHeight):e instanceof n?new $a(e.videoWidth,e.videoHeight):new $a(e.width,e.height)}function Rd({width:e,height:t}){let{createCanvasElement:n}=An.getEnv(),r=n();return r.width=e,r.height=t,r}function Y_(e,t){let{ImageData:n}=An.getEnv();if(!(e instanceof n)&&!Z_(e))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:r,height:a}=t||tw(e),s=Rd({width:r,height:a});return e instanceof n?Ba(s).putImageData(e,0,0):Ba(s).drawImage(e,0,0,r,a),s}async function Ooe(e,t){let n=t||An.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(ua(e)?1:0),i=B(()=>e.as3D(r,a,s).toInt());return await Ap.toPixels(i,n),i.dispose(),n}function S0(e){let{Image:t,Canvas:n,Video:r}=An.getEnv();return e instanceof t||e instanceof n||e instanceof r}function Loe(e,t,n=!1){let{Image:r,Canvas:a}=An.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return Rd({width:1,height:1});let s=tw(e),i=t/Math.max(s.height,s.width),o=i*s.width,l=i*s.height,p=Rd({width:t,height:t}),u=e instanceof a?e:Y_(e),h=Math.abs(o-l)/2,d=n&&o<l?h:0,c=n&&l<o?h:0;return u.width>0&&u.height>0&&Ba(p).drawImage(u,d,c,o,l),p}var Fd=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],this._inputSize=0,!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach((n,r)=>{if(uh(n)){this._imageTensors[r]=n,this._inputDimensions[r]=n.shape;return}if(ua(n)){let s=n.shape[0];if(s!==1)throw new Error(`NetInput - tf.Tensor4D with batchSize ${s} passed, but not supported in input array`);this._imageTensors[r]=n,this._inputDimensions[r]=n.shape.slice(1);return}let a=n instanceof An.getEnv().Canvas?n:Y_(n);this._canvases[r]=a,this._inputDimensions[r]=[a.height,a.width,3]})}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return Po(this.batchSize,0,1).map((e,t)=>this.getReshapedInputDimensions(t))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if(typeof this.inputSize!="number")throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");let t=this.getInputWidth(e),n=this.getInputHeight(e);return P_({width:t,height:n},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,B(()=>{let n=Po(this.batchSize,0,1).map(r=>{let a=this.getInput(r);if(a instanceof Re){let s=ua(a)?a:Xt(a);return s=Coe(s,t),(s.shape[1]!==e||s.shape[2]!==e)&&(s=zr.resizeBilinear(s,[e,e],!1,!1)),s.as3D(e,e,3)}if(a instanceof An.getEnv().Canvas)return Ap.fromPixels(Loe(a,e,t));throw new Error(`toBatchTensor - at batchIdx ${r}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${a}`)});return Vt(n.map(r=>ie(r,"float32"))).as4D(this.batchSize,e,e,3)})}};async function fn(e){if(e instanceof Fd)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=a=>Array.isArray(e)?` at input index ${a}:`:"",r=t.map(Qx);return r.forEach((a,s)=>{if(!S0(a)&&!uh(a)&&!ua(a))throw typeof t[s]=="string"?new Error(`toNetInput -${n(s)} string passed, but could not resolve HTMLElement for element id ${t[s]}`):new Error(`toNetInput -${n(s)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(ua(a)){let i=a.shape[0];if(i!==1)throw new Error(`toNetInput -${n(s)} tf.Tensor4D with batchSize ${i} passed, but not supported in input array`)}}),await Promise.all(r.map(a=>S0(a)&&Doe(a))),new Fd(r,Array.isArray(e))}async function nw(e,t){let{Canvas:n}=An.getEnv(),r=e;if(!(e instanceof n)){let s=await fn(e);if(s.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let i=s.getInput(0);r=i instanceof n?i:await Ooe(i)}let a=Ba(r);return t.map(s=>s instanceof sr?s.forSize(r.width,r.height).box.floor():s).map(s=>s.clipAtImageBorders(r.width,r.height)).map(({x:s,y:i,width:o,height:l})=>{let p=Rd({width:o,height:l});return o>0&&l>0&&Ba(p).putImageData(a.getImageData(s,i,o,l),0,0),p})}async function rw(e,t){if(!uh(e)&&!ua(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(ua(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return B(()=>{let[n,r,a]=e.shape.slice(ua(e)?1:0);return t.map(s=>s instanceof sr?s.forSize(r,n).box:s).map(s=>s.clipAtImageBorders(r,n)).filter(s=>s.width>0&&s.height>0).map(({x:s,y:i,width:o,height:l})=>Ql(e.as3D(n,r,a),[i,s,0],[l,o,a]))})}async function zoe(e,t){let{fetch:n}=An.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}async function Poe(e){return(await zoe(e)).json()}function J_(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if(e==="/")return{modelBaseUri:"/",manifestUri:`/${n}`};let r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"";e=e.replace(r,"");let a=e.split("/").filter(o=>o),s=e.endsWith(".json")?a[a.length-1]:n,i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:i==="/"?`/${s}`:`${i}/${s}`}}async function Boe(e,t){let{manifestUri:n,modelBaseUri:r}=J_(e,t),a=await Poe(n);return Yt.loadWeights(a,r)}function Woe(e,t,n=!1){let{width:r,height:a}=n?tw(t):t;return e.width=r,e.height=a,{width:r,height:a}}var ts=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){let{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){let{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map(({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)}))}getTrainableParams(){return this.getParamList().filter(e=>e.tensor instanceof $s)}getFrozenParams(){return this.getParamList().filter(e=>!(e.tensor instanceof $s))}variable(){this.getFrozenParams().forEach(({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())})}freeze(){this.getTrainableParams().forEach(({path:e,tensor:t})=>{let n=Tn(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)})}dispose(e=!0){this.getParamList().forEach(t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()}),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map(({tensor:e})=>Array.from(e.dataSync())).reduce((e,t)=>e.concat(t)))}async load(e){if(e instanceof Float32Array){this.extractWeights(e);return}await this.loadFromUri(e)}async loadFromUri(e){if(e&&typeof e!="string")throw new Error(`${this._name}.loadFromUri - expected model uri`);let t=await Boe(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&typeof e!="string")throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:t}=An.getEnv(),{manifestUri:n,modelBaseUri:r}=J_(e,this.getDefaultModelName()),a=l=>Promise.all(l.map(p=>t(p).then(u=>u.buffer))),s=Yt.weightsLoaderFactory(a),i=JSON.parse((await t(n)).toString()),o=await s(i,r);this.loadFromWeightMap(o)}loadFromWeightMap(e){let{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){let{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let t=e.split("/").reduce((a,s)=>{if(!a.nextObj.hasOwnProperty(s))throw new Error(`traversePropertyPath - object does not have property ${s}, for path ${e}`);return{obj:a.nextObj,objProp:s,nextObj:a.nextObj[s]}},{nextObj:this.params}),{obj:n,objProp:r}=t;if(!n||!r||!(n[r]instanceof Re))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:n,objProp:r}}};function tr(e,t,n){return B(()=>{let r=Jl(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=Y(r,t.bias),r})}function em(e,t,n=!1){return B(()=>{let r=Je(n?Y(hn(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):tr(e,t.conv0,[2,2])),a=tr(r,t.conv1,[1,1]),s=Je(Y(r,a)),i=tr(s,t.conv2,[1,1]);return Je(Y(r,Y(a,i)))})}function Ph(e,t,n=!1,r=!0){return B(()=>{let a=Je(n?Y(hn(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):tr(e,t.conv0,r?[2,2]:[1,1])),s=tr(a,t.conv1,[1,1]),i=Je(Y(a,s)),o=tr(i,t.conv2,[1,1]),l=Je(Y(a,Y(s,o))),p=tr(l,t.conv3,[1,1]);return Je(Y(a,Y(s,Y(o,p))))})}function Wu(e,t,n="same",r=!1){return B(()=>{let a=Y(hn(e,t.filters,[1,1],n),t.bias);return r?Je(a):a})}function ns(e,t){Object.keys(e).forEach(n=>{t.some(r=>r.originalPath===n)||e[n].dispose()})}function aw(e,t){return(n,r,a,s)=>{let i=Fa(e(n*r*a*a),[a,a,n,r]),o=Ye(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function Q_(e,t){return(n,r,a)=>{let s=Br(e(n*r),[n,r]),i=Ye(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var eC=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function sw(e,t){return(n,r,a)=>{let s=Fa(e(9*n),[3,3,n,1]),i=Fa(e(n*r),[1,1,n,r]),o=Ye(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new eC(s,i,o)}}function iw(e){return t=>{let n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new eC(n,r,a)}}function Ji(e,t){return(n,r,a)=>{let s=e[n];if(!fu(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function rs(e){let t=e;function n(a){let s=t.slice(0,a);return t=t.slice(a),s}function r(){return t}return{extractWeights:n,getRemainingWeights:r}}function tC(e,t){let n=aw(e,t),r=sw(e,t);function a(i,o,l,p=!1){let u=p?n(i,o,3,`${l}/conv0`):r(i,o,`${l}/conv0`),h=r(o,o,`${l}/conv1`),d=r(o,o,`${l}/conv2`);return{conv0:u,conv1:h,conv2:d}}function s(i,o,l,p=!1){let{conv0:u,conv1:h,conv2:d}=a(i,o,l,p),c=r(o,o,`${l}/conv3`);return{conv0:u,conv1:h,conv2:d,conv3:c}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:s}}function Voe(e){let t=[],{extractWeights:n,getRemainingWeights:r}=rs(e),{extractDenseBlock4Params:a}=tC(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),l=a(128,256,"dense3");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:l}}}function nC(e){return t=>{let n=e(`${t}/filters`,4),r=e(`${t}/bias`,1);return{filters:n,bias:r}}}function rC(e,t){let n=Ji(e,t),r=nC(n),a=iw(n);function s(o,l=!1){let p=l?r(`${o}/conv0`):a(`${o}/conv0`),u=a(`${o}/conv1`),h=a(`${o}/conv2`);return{conv0:p,conv1:u,conv2:h}}function i(o,l=!1){let p=l?r(`${o}/conv0`):a(`${o}/conv0`),u=a(`${o}/conv1`),h=a(`${o}/conv2`),d=a(`${o}/conv3`);return{conv0:p,conv1:u,conv2:h,conv3:d}}return{extractDenseBlock3Params:s,extractDenseBlock4Params:i}}function Uoe(e){let t=[],{extractDenseBlock4Params:n}=rC(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return ns(e,t),{params:r,paramMappings:t}}var aC=class extends ts{constructor(){super("FaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return B(()=>{let n=ie(e.toBatchTensor(112,!0),"float32"),r=ph(n,[122.782,117.001,104.298]).div(255),a=Ph(r,t.dense0,!0);return a=Ph(a,t.dense1),a=Ph(a,t.dense2),a=Ph(a,t.dense3),a=da(a,[7,7],[2,2],"valid"),a})}async forward(e){return this.forwardInput(await fn(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return Uoe(e)}extractParams(e){return Voe(e)}};function og(e,t){return B(()=>Y(Oe(e,t.weights),t.bias))}function Goe(e,t,n){let r=[],{extractWeights:a,getRemainingWeights:s}=rs(e),i=Q_(a,r)(t,n,"fc");if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}function Hoe(e){let t=[],n=Ji(e,t);function r(s){let i=n(`${s}/weights`,2),o=n(`${s}/bias`,1);return{weights:i,bias:o}}let a={fc:r("fc")};return ns(e,t),{params:a,paramMappings:t}}function sC(e){let t={},n={};return Object.keys(e).forEach(r=>{let a=r.startsWith("fc")?n:t;a[r]=e[r]}),{featureExtractorMap:t,classifierMap:n}}var iC=class extends ts{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return B(()=>{let n=e instanceof Fd?this.faceFeatureExtractor.forwardInput(e):e;return og(n.as2D(n.shape[0],-1),t.fc)})}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return Goe(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=sC(e);return this.faceFeatureExtractor.loadFromWeightMap(t),Hoe(n)}extractParams(e){let t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},N0=["neutral","happy","sad","angry","fearful","disgusted","surprised"],ow=class{constructor(e){if(this.neutral=0,this.happy=0,this.sad=0,this.angry=0,this.fearful=0,this.disgusted=0,this.surprised=0,e.length!==7)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);N0.forEach((t,n)=>{this[t]=e[n]})}asSortedArray(){return N0.map(e=>({expression:e,probability:this[e]})).sort((e,t)=>t.probability-e.probability)}},qoe=class extends iC{constructor(e=new aC){super("FaceExpressionNet",e)}forwardInput(e){return B(()=>Za(this.runNet(e)))}async forward(e){return this.forwardInput(await fn(e))}async predictExpressions(e){let t=await fn(e),n=await this.forwardInput(t),r=await Promise.all(St(n).map(async s=>{let i=s.dataSync();return s.dispose(),i}));n.dispose();let a=r.map(s=>new ow(s));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function joe(e){return e.expressions instanceof ow}function oC(e,t){return{...e,expressions:t}}function Koe(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach(a=>{let s=a instanceof ow?a:joe(a)?a.expressions:void 0;if(!s)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let i=s.asSortedArray().filter(l=>l.probability>n),o=ip(a)?a.detection.box.bottomLeft:r||new je(0,0);new $f(i.map(l=>`${l.expression} (${Kx(l.probability)})`),o).draw(e)})}function lw(e){return ip(e)&&e.landmarks instanceof sp&&e.unshiftedLandmarks instanceof sp&&e.alignedRect instanceof sr}function Xoe(e){let t=l=>l*180/Math.PI,n=(l,p)=>Math.sqrt((l._x-p._x)**2+(l._y-p._y)**2),r={roll:void 0,pitch:void 0,yaw:void 0},a=(l,p,u)=>{let h=Math.floor(l._x-p._x),d=Math.floor(p._x-u._x);return h-d},s=(l,p)=>{let u=Math.hypot(p._x-l._x,p._y-l._y),h=p._y-l._y,d=Math.asin(h/u),c=t(d),f=Math.floor(90-c),m=p._x-l._x<0?-1:1;return f*m},i=(l,p,u)=>{let h=n(l,u),d={_x:(l._x+u._x)/2,_y:(l._y+u._y)/2},c=n(p,d),f=Math.atan(c/h),m=Math.floor(t(f)),g=d._y-p._y<0?-1:1;return m*g};if(!e||!e._positions||e._positions.length!==68)return r;let o=e._positions;return r.roll=s(o[27],o[66]),r.pitch=i(o[14],o[30],o[2]),r.yaw=a(o[14],o[33],o[2]),r}function uw(e,t){let{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i=new sr(e.detection.score,a.rescale(s.reverse()),s),o=Xoe(t);return{...e,landmarks:r,unshiftedLandmarks:t,alignedRect:i,angle:o}}var lC=class{constructor(e={}){let{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},uC=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new lC(t)}draw(e){let t=Ba(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof V_&&(t.strokeStyle=s,t.lineWidth=a,ka(t,this.faceLandmarks.getJawOutline()),ka(t,this.faceLandmarks.getLeftEyeBrow()),ka(t,this.faceLandmarks.getRightEyeBrow()),ka(t,this.faceLandmarks.getNose()),ka(t,this.faceLandmarks.getLeftEye(),!0),ka(t,this.faceLandmarks.getRightEye(),!0),ka(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;let l=p=>{t.beginPath(),t.arc(p.x,p.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(l)}}};function Zoe(e,t){(Array.isArray(t)?t:[t]).forEach(n=>{let r=n instanceof sp?n:lw(n)?n.landmarks:void 0;if(!r)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new uC(r).draw(e)})}function Yoe(e,t){let n=aw(e,t),r=sw(e,t);function a(i,o,l){let p=r(i,o,`${l}/separable_conv0`),u=r(o,o,`${l}/separable_conv1`),h=n(i,o,1,`${l}/expansion_conv`);return{separable_conv0:p,separable_conv1:u,expansion_conv:h}}function s(i,o){let l=r(i,i,`${o}/separable_conv0`),p=r(i,i,`${o}/separable_conv1`),u=r(i,i,`${o}/separable_conv2`);return{separable_conv0:l,separable_conv1:p,separable_conv2:u}}return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:a,extractMainBlockParams:s}}function Joe(e,t){let n=[],{extractWeights:r,getRemainingWeights:a}=rs(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:l}=Yoe(r,n),p=s(3,32,3,"entry_flow/conv_in"),u=o(32,64,"entry_flow/reduction_block_0"),h=o(64,128,"entry_flow/reduction_block_1"),d={conv_in:p,reduction_block_0:u,reduction_block_1:h},c={};Po(t,0,1).forEach(y=>{c[`main_block_${y}`]=l(128,`middle_flow/main_block_${y}`)});let f=o(128,256,"exit_flow/reduction_block"),m=i(256,512,"exit_flow/separable_conv"),g={reduction_block:f,separable_conv:m};if(a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:n,params:{entry_flow:d,middle_flow:c,exit_flow:g}}}function Qoe(e,t){let n=Ji(e,t),r=nC(n),a=iw(n);function s(o){let l=a(`${o}/separable_conv0`),p=a(`${o}/separable_conv1`),u=r(`${o}/expansion_conv`);return{separable_conv0:l,separable_conv1:p,expansion_conv:u}}function i(o){let l=a(`${o}/separable_conv0`),p=a(`${o}/separable_conv1`),u=a(`${o}/separable_conv2`);return{separable_conv0:l,separable_conv1:p,separable_conv2:u}}return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}}function ele(e,t){let n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=Qoe(e,n),o=r("entry_flow/conv_in"),l=s("entry_flow/reduction_block_0"),p=s("entry_flow/reduction_block_1"),u={conv_in:o,reduction_block_0:l,reduction_block_1:p},h={};Po(t,0,1).forEach(m=>{h[`main_block_${m}`]=i(`middle_flow/main_block_${m}`)});let d=s("exit_flow/reduction_block"),c=a("exit_flow/separable_conv"),f={reduction_block:d,separable_conv:c};return ns(e,n),{params:{entry_flow:u,middle_flow:h,exit_flow:f},paramMappings:n}}function pC(e,t,n){return Y(hn(e,t.filters,n,"same"),t.bias)}function tm(e,t,n=!0){let r=n?Je(e):e;return r=tr(r,t.separable_conv0,[1,1]),r=tr(Je(r),t.separable_conv1,[1,1]),r=zt(r,[3,3],[2,2],"same"),r=Y(r,pC(e,t.expansion_conv,[2,2])),r}function tle(e,t){let n=tr(Je(e),t.separable_conv0,[1,1]);return n=tr(Je(n),t.separable_conv1,[1,1]),n=tr(Je(n),t.separable_conv2,[1,1]),n=Y(n,e),n}var nle=class extends ts{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return B(()=>{let n=ie(e.toBatchTensor(112,!0),"float32"),r=ph(n,[122.782,117.001,104.298]).div(255),a=Je(pC(r,t.entry_flow.conv_in,[2,2]));return a=tm(a,t.entry_flow.reduction_block_0,!1),a=tm(a,t.entry_flow.reduction_block_1),Po(this._numMainBlocks,0,1).forEach(s=>{a=tle(a,t.middle_flow[`main_block_${s}`])}),a=tm(a,t.exit_flow.reduction_block),a=Je(tr(a,t.exit_flow.separable_conv,[1,1])),a})}async forward(e){return this.forwardInput(await fn(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return ele(e,this._numMainBlocks)}extractParams(e){return Joe(e,this._numMainBlocks)}};function rle(e){let t=[],{extractWeights:n,getRemainingWeights:r}=rs(e),a=Q_(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}function ale(e){let t=[],n=Ji(e,t);function r(s){let i=n(`${s}/weights`,2),o=n(`${s}/bias`,1);return{weights:i,bias:o}}let a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return ns(e,t),{params:a,paramMappings:t}}var sle=(e=>(e.FEMALE="female",e.MALE="male",e))(sle||{}),ile=class extends ts{constructor(e=new nle(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return B(()=>{let n=e instanceof Fd?this.faceFeatureExtractor.forwardInput(e):e,r=da(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1),a=og(r,t.fc.age).as1D(),s=og(r,t.fc.gender);return{age:a,gender:s}})}forwardInput(e){return B(()=>{let{age:t,gender:n}=this.runNet(e);return{age:t,gender:Za(n)}})}async forward(e){return this.forwardInput(await fn(e))}async predictAgeAndGender(e){let t=await fn(e),n=await this.forwardInput(t),r=St(n.age),a=St(n.gender),s=r.map((o,l)=>({ageTensor:o,genderTensor:a[l]})),i=await Promise.all(s.map(async({ageTensor:o,genderTensor:l})=>{let p=o.dataSync()[0],u=l.dataSync()[0],h=u>.5,d=h?"male":"female",c=h?u:1-u;return o.dispose(),l.dispose(),{age:p,gender:d,genderProbability:c}}));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return rle(e)}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=sC(e);return this.faceFeatureExtractor.loadFromWeightMap(t),ale(n)}extractParams(e){let t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}},hC=class extends iC{postProcess(e,t,n){let r=n.map(({width:s,height:i})=>{let o=t/Math.max(i,s);return{width:s*o,height:i*o}}),a=r.length;return B(()=>{let s=(p,u)=>Vt([Vn([68],p,"float32"),Vn([68],u,"float32")],1).as2D(1,136).as1D(),i=(p,u)=>{let{width:h,height:d}=r[p];return u(h,d)?Math.abs(h-d)/2:0},o=p=>i(p,(u,h)=>u<h),l=p=>i(p,(u,h)=>h<u);return e.mul(Vn([a,136],t,"float32")).sub(Vt(Array.from(Array(a),(p,u)=>s(o(u),l(u))))).div(Vt(Array.from(Array(a),(p,u)=>s(r[u].width,r[u].height))))})}forwardInput(e){return B(()=>{let t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map(([n,r])=>({height:n,width:r})))})}async forward(e){return this.forwardInput(await fn(e))}async detectLandmarks(e){let t=await fn(e),n=B(()=>St(this.forwardInput(t))),r=await Promise.all(n.map(async(a,s)=>{let i=Array.from(a.dataSync()),o=i.filter((p,u)=>ag(u)),l=i.filter((p,u)=>!ag(u));return new V_(Array(68).fill(0).map((p,u)=>new je(o[u],l[u])),{height:t.getInputHeight(s),width:t.getInputWidth(s)})}));return n.forEach(a=>a.dispose()),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},ole=class extends hC{constructor(e=new aC){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};function lle(e){let t=[],{extractDenseBlock3Params:n}=rC(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return ns(e,t),{params:r,paramMappings:t}}function ule(e){let t=[],{extractWeights:n,getRemainingWeights:r}=rs(e),{extractDenseBlock3Params:a}=tC(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}var ple=class extends ts{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return B(()=>{let n=ie(e.toBatchTensor(112,!0),"float32"),r=ph(n,[122.782,117.001,104.298]).div(255),a=em(r,t.dense0,!0);return a=em(a,t.dense1),a=em(a,t.dense2),a=da(a,[14,14],[2,2],"valid"),a})}async forward(e){return this.forwardInput(await fn(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return lle(e)}extractParams(e){return ule(e)}},hle=class extends hC{constructor(e=new ple){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}};function dle(e,t){return Y(z(e,t.weights),t.biases)}function pw(e,t,n,r,a="same"){let{filters:s,bias:i}=t.conv,o=hn(e,s,n,a);return o=Y(o,i),o=dle(o,t.scale),r?Je(o):o}function cle(e,t){return pw(e,t,[1,1],!0)}function dC(e,t){return pw(e,t,[1,1],!1)}function cC(e,t){return pw(e,t,[2,2],!0,"valid")}function fle(e,t){function n(o,l,p){let u=e(o),h=u.length/(l*p*p);if(z_(h))throw new Error(`depth has to be an integer: ${h}, weights.length: ${u.length}, numFilters: ${l}, filterSize: ${p}`);return B(()=>Fe(Fa(u,[l,h,p,p]),[2,3,1,0]))}function r(o,l,p,u){let h=n(o,l,p),d=Ye(e(l));return t.push({paramPath:`${u}/filters`},{paramPath:`${u}/bias`}),{filters:h,bias:d}}function a(o,l){let p=Ye(e(o)),u=Ye(e(o));return t.push({paramPath:`${l}/weights`},{paramPath:`${l}/biases`}),{weights:p,biases:u}}function s(o,l,p,u){let h=r(o,l,p,`${u}/conv`),d=a(l,`${u}/scale`);return{conv:h,scale:d}}function i(o,l,p,u,h=!1){let d=s((h?.5:1)*o,l,p,`${u}/conv1`),c=s(o,l,p,`${u}/conv2`);return{conv1:d,conv2:c}}return{extractConvLayerParams:s,extractResidualLayerParams:i}}function mle(e){let{extractWeights:t,getRemainingWeights:n}=rs(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=fle(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),p=s(9216,32,3,"conv32_3"),u=s(36864,64,3,"conv64_down",!0),h=s(36864,64,3,"conv64_1"),d=s(36864,64,3,"conv64_2"),c=s(36864,64,3,"conv64_3"),f=s(147456,128,3,"conv128_down",!0),m=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),w=s(589824,256,3,"conv256_down_out"),I=B(()=>Fe(Br(t(256*128),[128,256]),[1,0]));if(r.push({paramPath:"fc"}),n().length!==0)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:l,conv32_3:p,conv64_down:u,conv64_1:h,conv64_2:d,conv64_3:c,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:w,fc:I},paramMappings:r}}function gle(e,t){let n=Ji(e,t);function r(i){let o=n(`${i}/scale/weights`,1),l=n(`${i}/scale/biases`,1);return{weights:o,biases:l}}function a(i){let o=n(`${i}/conv/filters`,4),l=n(`${i}/conv/bias`,1),p=r(i);return{conv:{filters:o,bias:l},scale:p}}function s(i){return{conv1:a(`${i}/conv1`),conv2:a(`${i}/conv2`)}}return{extractConvLayerParams:a,extractResidualLayerParams:s}}function yle(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=gle(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),l=r("conv64_down"),p=r("conv64_1"),u=r("conv64_2"),h=r("conv64_3"),d=r("conv128_down"),c=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!L_(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);let w={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:l,conv64_1:p,conv64_2:u,conv64_3:h,conv128_down:d,conv128_1:c,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return ns(e,t),{params:w,paramMappings:t}}function Ar(e,t){let n=cle(e,t.conv1);return n=dC(n,t.conv2),n=Y(n,e),n=Je(n),n}function Bh(e,t){let n=cC(e,t.conv1);n=dC(n,t.conv2);let r=da(e,2,2,"valid"),a=bt(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){let i=[...n.shape];i[1]=1;let o=bt(i);n=nt([n,o],1);let l=[...n.shape];l[2]=1;let p=bt(l);n=nt([n,p],2)}return r=s?nt([r,a],3):r,n=Y(r,n),n=Je(n),n}var ble=class extends ts{constructor(){super("FaceRecognitionNet")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return B(()=>{let n=ie(e.toBatchTensor(150,!0),"float32"),r=ph(n,[122.782,117.001,104.298]).div(255),a=cC(r,t.conv32_down);a=zt(a,3,2,"valid"),a=Ar(a,t.conv32_1),a=Ar(a,t.conv32_2),a=Ar(a,t.conv32_3),a=Bh(a,t.conv64_down),a=Ar(a,t.conv64_1),a=Ar(a,t.conv64_2),a=Ar(a,t.conv64_3),a=Bh(a,t.conv128_down),a=Ar(a,t.conv128_1),a=Ar(a,t.conv128_2),a=Bh(a,t.conv256_down),a=Ar(a,t.conv256_1),a=Ar(a,t.conv256_2),a=Bh(a,t.conv256_down_out);let s=a.mean([1,2]);return Oe(s,t.fc)})}async forward(e){return this.forwardInput(await fn(e))}async computeFaceDescriptor(e){var t;if((t=e==null?void 0:e.shape)!=null&&t.some(s=>s<=0))return new Float32Array(128);let n=await fn(e),r=B(()=>St(this.forwardInput(n))),a=await Promise.all(r.map(s=>s.data()));return r.forEach(s=>s.dispose()),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return yle(e)}extractParams(e){return mle(e)}};function fC(e,t){return{...e,descriptor:t}}function mC(e,t){return{...e,age:t}}function gC(e,t,n){return{...e,gender:t,genderProbability:n}}function xle(e,t){function n(l,p){let u=Fa(e(9*l),[3,3,l,1]),h=Ye(e(l)),d=Ye(e(l)),c=Ye(e(l)),f=Ye(e(l));return t.push({paramPath:`${p}/filters`},{paramPath:`${p}/batch_norm_scale`},{paramPath:`${p}/batch_norm_offset`},{paramPath:`${p}/batch_norm_mean`},{paramPath:`${p}/batch_norm_variance`}),{filters:u,batch_norm_scale:h,batch_norm_offset:d,batch_norm_mean:c,batch_norm_variance:f}}function r(l,p,u,h,d){let c=Fa(e(l*p*u*u),[u,u,l,p]),f=Ye(e(p));return t.push({paramPath:`${h}/filters`},{paramPath:`${h}/${d?"batch_norm_offset":"bias"}`}),{filters:c,bias:f}}function a(l,p,u,h){let{filters:d,bias:c}=r(l,p,u,h,!0);return{filters:d,batch_norm_offset:c}}function s(l,p,u){let h=n(l,`${u}/depthwise_conv`),d=a(l,p,1,`${u}/pointwise_conv`);return{depthwise_conv:h,pointwise_conv:d}}function i(){let l=a(3,32,3,"mobilenetv1/conv_0"),p=s(32,64,"mobilenetv1/conv_1"),u=s(64,128,"mobilenetv1/conv_2"),h=s(128,128,"mobilenetv1/conv_3"),d=s(128,256,"mobilenetv1/conv_4"),c=s(256,256,"mobilenetv1/conv_5"),f=s(256,512,"mobilenetv1/conv_6"),m=s(512,512,"mobilenetv1/conv_7"),g=s(512,512,"mobilenetv1/conv_8"),y=s(512,512,"mobilenetv1/conv_9"),b=s(512,512,"mobilenetv1/conv_10"),x=s(512,512,"mobilenetv1/conv_11"),w=s(512,1024,"mobilenetv1/conv_12"),I=s(1024,1024,"mobilenetv1/conv_13");return{conv_0:l,conv_1:p,conv_2:u,conv_3:h,conv_4:d,conv_5:c,conv_6:f,conv_7:m,conv_8:g,conv_9:y,conv_10:b,conv_11:x,conv_12:w,conv_13:I}}function o(){let l=a(1024,256,1,"prediction_layer/conv_0"),p=a(256,512,3,"prediction_layer/conv_1"),u=a(512,128,1,"prediction_layer/conv_2"),h=a(128,256,3,"prediction_layer/conv_3"),d=a(256,128,1,"prediction_layer/conv_4"),c=a(128,256,3,"prediction_layer/conv_5"),f=a(256,64,1,"prediction_layer/conv_6"),m=a(64,128,3,"prediction_layer/conv_7"),g=r(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),y=r(512,9,1,"prediction_layer/box_predictor_0/class_predictor"),b=r(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),x=r(1024,18,1,"prediction_layer/box_predictor_1/class_predictor"),w=r(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),I=r(512,18,1,"prediction_layer/box_predictor_2/class_predictor"),N=r(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),C=r(256,18,1,"prediction_layer/box_predictor_3/class_predictor"),E=r(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),$=r(256,18,1,"prediction_layer/box_predictor_4/class_predictor"),F=r(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),R=r(128,18,1,"prediction_layer/box_predictor_5/class_predictor");return{conv_0:l,conv_1:p,conv_2:u,conv_3:h,conv_4:d,conv_5:c,conv_6:f,conv_7:m,box_predictor_0:{box_encoding_predictor:g,class_predictor:y},box_predictor_1:{box_encoding_predictor:b,class_predictor:x},box_predictor_2:{box_encoding_predictor:w,class_predictor:I},box_predictor_3:{box_encoding_predictor:N,class_predictor:C},box_predictor_4:{box_encoding_predictor:E,class_predictor:$},box_predictor_5:{box_encoding_predictor:F,class_predictor:R}}}return{extractMobilenetV1Params:i,extractPredictionLayerParams:o}}function wle(e){let t=[],{extractWeights:n,getRemainingWeights:r}=rs(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=xle(n,t),i=a(),o=s(),l={extra_dim:wc(n(5118*4),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:l},paramMappings:t}}function vle(e,t){let n=Ji(e,t);function r(p,u,h){let d=n(`${p}/Conv2d_${u}_pointwise/weights`,4,`${h}/filters`),c=n(`${p}/Conv2d_${u}_pointwise/convolution_bn_offset`,1,`${h}/batch_norm_offset`);return{filters:d,batch_norm_offset:c}}function a(p){let u=`mobilenetv1/conv_${p}`,h=`MobilenetV1/Conv2d_${p}_depthwise`,d=`${u}/depthwise_conv`,c=`${u}/pointwise_conv`,f=n(`${h}/depthwise_weights`,4,`${d}/filters`),m=n(`${h}/BatchNorm/gamma`,1,`${d}/batch_norm_scale`),g=n(`${h}/BatchNorm/beta`,1,`${d}/batch_norm_offset`),y=n(`${h}/BatchNorm/moving_mean`,1,`${d}/batch_norm_mean`),b=n(`${h}/BatchNorm/moving_variance`,1,`${d}/batch_norm_variance`);return{depthwise_conv:{filters:f,batch_norm_scale:m,batch_norm_offset:g,batch_norm_mean:y,batch_norm_variance:b},pointwise_conv:r("MobilenetV1",p,c)}}function s(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}}function i(p,u){let h=n(`${p}/weights`,4,`${u}/filters`),d=n(`${p}/biases`,1,`${u}/bias`);return{filters:h,bias:d}}function o(p){let u=i(`Prediction/BoxPredictor_${p}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${p}/box_encoding_predictor`),h=i(`Prediction/BoxPredictor_${p}/ClassPredictor`,`prediction_layer/box_predictor_${p}/class_predictor`);return{box_encoding_predictor:u,class_predictor:h}}function l(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:o(0),box_predictor_1:o(1),box_predictor_2:o(2),box_predictor_3:o(3),box_predictor_4:o(4),box_predictor_5:o(5)}}return{extractMobilenetV1Params:s,extractPredictionLayerParams:l}}function kle(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=vle(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!uh(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);let s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return ns(e,t),{params:s,paramMappings:t}}function Fr(e,t,n){return B(()=>{let r=hn(e,t.filters,n,"same");return r=Y(r,t.batch_norm_offset),an(r,0,6)})}var Ile=.0010000000474974513;function Sle(e,t,n){return B(()=>{let r=Vi(e,t.filters,n,"same");return r=Wi(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,Ile),an(r,0,6)})}function Nle(e){return[2,4,6,12].some(t=>t===e)?[2,2]:[1,1]}function Tle(e,t){return B(()=>{let n,r=Fr(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach((a,s)=>{let i=s+1,o=Nle(i);r=Sle(r,a.depthwise_conv,o),r=Fr(r,a.pointwise_conv,[1,1]),i===11&&(n=r)}),n===null)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}})}function _le(e,t,n){let r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),l=Math.min(r[n][0],r[n][2]),p=Math.min(r[n][1],r[n][3]),u=Math.max(r[n][0],r[n][2]),h=Math.max(r[n][1],r[n][3]),d=(i-a)*(o-s),c=(u-l)*(h-p);if(d<=0||c<=0)return 0;let f=Math.max(a,l),m=Math.max(s,p),g=Math.min(i,u),y=Math.min(o,h),b=Math.max(g-f,0)*Math.max(y-m,0);return b/(d+c-b)}function Cle(e,t,n,r,a){let s=e.shape[0],i=Math.min(n,s),o=t.map((u,h)=>({score:u,boxIndex:h})).filter(u=>u.score>a).sort((u,h)=>h.score-u.score),l=u=>u<=r?1:0,p=[];return o.forEach(u=>{if(p.length>=i)return;let h=u.score;for(let d=p.length-1;d>=0;--d){let c=_le(e,u.boxIndex,p[d]);if(c!==0&&(u.score*=l(c),u.score<=a))break}h===u.score&&p.push(u.boxIndex)}),p}function Ele(e){let t=St(Fe(e,[1,0])),n=[pe(t[2],t[0]),pe(t[3],t[1])],r=[Y(t[0],me(n[0],2)),Y(t[1],me(n[1],2))];return{sizes:n,centers:r}}function $le(e,t){let{sizes:n,centers:r}=Ele(e),a=St(Fe(t,[1,0])),s=me(z(dn(me(a[2],5)),n[0]),2),i=Y(z(me(a[0],10),n[0]),r[0]),o=me(z(dn(me(a[3],5)),n[1]),2),l=Y(z(me(a[1],10),n[1]),r[1]);return Fe(Vt([pe(i,s),pe(l,o),Y(i,s),Y(l,o)]),[1,0])}function Ale(e,t,n){return B(()=>{let r=e.shape[0],a=$le(P(Bn(n.extra_dim,[r,1,1]),[-1,4]),P(e,[-1,4]));a=P(a,[r,a.shape[0]/r,4]);let s=fr(We(t,[0,0,1],[-1,-1,-1])),i=We(s,[0,0,0],[-1,-1,1]);i=P(i,[r,i.shape[1]]);let o=St(a),l=St(i);return{boxes:o,scores:l}})}function so(e,t){return B(()=>{let n=e.shape[0],r=P(Wu(e,t.box_encoding_predictor),[n,-1,1,4]),a=P(Wu(e,t.class_predictor),[n,-1,3]);return{boxPredictionEncoding:r,classPrediction:a}})}function Rle(e,t,n){return B(()=>{let r=Fr(e,n.conv_0,[1,1]),a=Fr(r,n.conv_1,[2,2]),s=Fr(a,n.conv_2,[1,1]),i=Fr(s,n.conv_3,[2,2]),o=Fr(i,n.conv_4,[1,1]),l=Fr(o,n.conv_5,[2,2]),p=Fr(l,n.conv_6,[1,1]),u=Fr(p,n.conv_7,[2,2]),h=so(t,n.box_predictor_0),d=so(e,n.box_predictor_1),c=so(a,n.box_predictor_2),f=so(i,n.box_predictor_3),m=so(l,n.box_predictor_4),g=so(u,n.box_predictor_5),y=nt([h.boxPredictionEncoding,d.boxPredictionEncoding,c.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),b=nt([h.classPrediction,d.classPrediction,c.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1);return{boxPredictions:y,classPredictions:b}})}var Af=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,typeof this._minConfidence!="number"||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if(typeof this._maxResults!="number")throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},Fle=class extends ts{constructor(){super("SsdMobilenetv1")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return B(()=>{let n=ie(e.toBatchTensor(512,!1),"float32"),r=pe(me(n,127.5),1),a=Tle(r,t.mobilenetv1),{boxPredictions:s,classPredictions:i}=Rle(a.out,a.conv11,t.prediction_layer);return Ale(s,i,t.output_layer)})}async forward(e){return this.forwardInput(await fn(e))}async locateFaces(e,t={}){let{maxResults:n,minConfidence:r}=new Af(t),a=await fn(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],l=i[0];for(let y=1;y<s.length;y++)s[y].dispose(),i[y].dispose();let p=Array.from(l.dataSync()),u=Cle(o,p,n,.5,r),h=a.getReshapedInputDimensions(0),d=a.inputSize,c=d/h.width,f=d/h.height,m=o.arraySync(),g=u.map(y=>{let[b,x]=[Math.max(0,m[y][0]),Math.min(1,m[y][2])].map(N=>N*f),[w,I]=[Math.max(0,m[y][1]),Math.min(1,m[y][3])].map(N=>N*c);return new sr(p[y],new W_(w,b,I-w,x-b),{height:a.getInputHeight(0),width:a.getInputWidth(0)})});return o.dispose(),l.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return kle(e)}extractParams(e){return wle(e)}},Mle=.4,Dle=[new je(.738768,.874946),new je(2.42204,2.65704),new je(4.30971,7.04493),new je(10.246,4.59428),new je(12.6868,11.8741)],Ole=[new je(1.603231,2.094468),new je(6.041143,7.080126),new je(2.882459,3.518061),new je(4.266906,5.178857),new je(9.041765,10.66308)],Lle=[117.001,114.697,97.404],zle="tiny_yolov2_model",Ple="tiny_yolov2_separable_conv_model",Wh=e=>typeof e=="number";function Ble(e){if(!e)throw new Error(`invalid config: ${e}`);if(typeof e.withSeparableConvs!="boolean")throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!Wh(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every(t=>typeof t=="string"))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map(t=>t||{}).every(t=>Wh(t.x)&&Wh(t.y)))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||e.meanRgb.length!==3||!e.meanRgb.every(Wh)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}function hw(e){return B(()=>{let t=z(e,ve(.10000000149011612));return Y(Je(pe(e,t)),t)})}function ba(e,t){return B(()=>{let n=Er(e,[[0,0],[1,1],[1,1],[0,0]]);return n=hn(n,t.conv.filters,[1,1],"valid"),n=pe(n,t.bn.sub),n=z(n,t.bn.truediv),n=Y(n,t.conv.bias),hw(n)})}function xa(e,t){return B(()=>{let n=Er(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Jl(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=Y(n,t.bias),hw(n)})}function Wle(e,t){let n=aw(e,t);function r(i,o){let l=Ye(e(i)),p=Ye(e(i));return t.push({paramPath:`${o}/sub`},{paramPath:`${o}/truediv`}),{sub:l,truediv:p}}function a(i,o,l){let p=n(i,o,3,`${l}/conv`),u=r(o,`${l}/bn`);return{conv:p,bn:u}}let s=sw(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}}function Vle(e,t,n,r){let{extractWeights:a,getRemainingWeights:s}=rs(e),i=[],{extractConvParams:o,extractConvWithBatchNormParams:l,extractSeparableConvParams:p}=Wle(a,i),u;if(t.withSeparableConvs){let[h,d,c,f,m,g,y,b,x]=r,w=t.isFirstLayerConv2d?o(h,d,3,"conv0"):p(h,d,"conv0"),I=p(d,c,"conv1"),N=p(c,f,"conv2"),C=p(f,m,"conv3"),E=p(m,g,"conv4"),$=p(g,y,"conv5"),F=b?p(y,b,"conv6"):void 0,R=x?p(b,x,"conv7"):void 0,S=o(x||b||y,5*n,1,"conv8");u={conv0:w,conv1:I,conv2:N,conv3:C,conv4:E,conv5:$,conv6:F,conv7:R,conv8:S}}else{let[h,d,c,f,m,g,y,b,x]=r,w=l(h,d,"conv0"),I=l(d,c,"conv1"),N=l(c,f,"conv2"),C=l(f,m,"conv3"),E=l(m,g,"conv4"),$=l(g,y,"conv5"),F=l(y,b,"conv6"),R=l(b,x,"conv7"),S=o(x,5*n,1,"conv8");u={conv0:w,conv1:I,conv2:N,conv3:C,conv4:E,conv5:$,conv6:F,conv7:R,conv8:S}}if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{params:u,paramMappings:i}}function Ule(e,t){let n=Ji(e,t);function r(o){let l=n(`${o}/sub`,1),p=n(`${o}/truediv`,1);return{sub:l,truediv:p}}function a(o){let l=n(`${o}/filters`,4),p=n(`${o}/bias`,1);return{filters:l,bias:p}}function s(o){let l=a(`${o}/conv`),p=r(`${o}/bn`);return{conv:l,bn:p}}let i=iw(n);return{extractConvParams:a,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}}function Gle(e,t){let n=[],{extractConvParams:r,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}=Ule(e,n),i;if(t.withSeparableConvs){let o=t.filterSizes&&t.filterSizes.length||9;i={conv0:t.isFirstLayerConv2d?r("conv0"):s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:o>7?s("conv6"):void 0,conv7:o>8?s("conv7"):void 0,conv8:r("conv8")}}else i={conv0:a("conv0"),conv1:a("conv1"),conv2:a("conv2"),conv3:a("conv3"),conv4:a("conv4"),conv5:a("conv5"),conv6:a("conv6"),conv7:a("conv7"),conv8:r("conv8")};return ns(e,n),{params:i,paramMappings:n}}var dw=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,typeof this._inputSize!="number"||this._inputSize%32!==0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if(typeof this._scoreThreshold!="number"||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},yC=class extends ts{constructor(e){super("TinyYolov2"),Ble(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=ba(e,t.conv0);return n=zt(n,[2,2],[2,2],"same"),n=ba(n,t.conv1),n=zt(n,[2,2],[2,2],"same"),n=ba(n,t.conv2),n=zt(n,[2,2],[2,2],"same"),n=ba(n,t.conv3),n=zt(n,[2,2],[2,2],"same"),n=ba(n,t.conv4),n=zt(n,[2,2],[2,2],"same"),n=ba(n,t.conv5),n=zt(n,[2,2],[1,1],"same"),n=ba(n,t.conv6),n=ba(n,t.conv7),Wu(n,t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?hw(Wu(e,t.conv0,"valid",!1)):xa(e,t.conv0);return n=zt(n,[2,2],[2,2],"same"),n=xa(n,t.conv1),n=zt(n,[2,2],[2,2],"same"),n=xa(n,t.conv2),n=zt(n,[2,2],[2,2],"same"),n=xa(n,t.conv3),n=zt(n,[2,2],[2,2],"same"),n=xa(n,t.conv4),n=zt(n,[2,2],[2,2],"same"),n=xa(n,t.conv5),n=zt(n,[2,2],[1,1],"same"),n=t.conv6?xa(n,t.conv6):n,n=t.conv7?xa(n,t.conv7):n,Wu(n,t.conv8,"valid",!1)}forwardInput(e,t){let{params:n}=this;if(!n)throw new Error("TinyYolov2 - load model before inference");return B(()=>{let r=ie(e.toBatchTensor(t,!1),"float32");return r=this.config.meanRgb?ph(r,this.config.meanRgb):r,r=r.div(255),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)})}async forward(e,t){return this.forwardInput(await fn(e),t)}async detect(e,t={}){let{inputSize:n,scoreThreshold:r}=new dw(t),a=await fn(e),s=await this.forwardInput(a,n),i=B(()=>St(s)[0].expandDims()),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},l=await this.extractBoxes(i,a.getReshapedInputDimensions(0),r);s.dispose(),i.dispose();let p=l.map(c=>c.box),u=l.map(c=>c.score),h=l.map(c=>c.classScore),d=l.map(c=>this.config.classes[c.label]);return _oe(p.map(c=>c.rescale(n)),u,this.config.iouThreshold,!0).map(c=>new Zx(u[c],h[c],d[c],p[c],o))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return Gle(e,this.config)}extractParams(e){let t=this.config.filterSizes||yC.DEFAULT_FILTER_SIZES,n=t?t.length:void 0;if(n!==7&&n!==8&&n!==9)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${n} filterSizes in config`);return Vle(e,this.config,this.boxEncodingSize,t)}async extractBoxes(e,t,n){let{width:r,height:a}=t,s=Math.max(r,a),i=s/r,o=s/a,l=e.shape[1],p=this.config.anchors.length,[u,h,d]=B(()=>{let g=e.reshape([l,l,p,this.boxEncodingSize]),y=g.slice([0,0,0,0],[l,l,p,4]),b=g.slice([0,0,0,4],[l,l,p,1]),x=this.withClassScores?Za(g.slice([0,0,0,5],[l,l,p,this.config.classes.length]),3):ve(0);return[y,b,x]}),c=[],f=await h.array(),m=await u.array();for(let g=0;g<l;g++)for(let y=0;y<l;y++)for(let b=0;b<p;b++){let x=Qf(f[g][y][b][0]);if(!n||x>n){let w=(y+Qf(m[g][y][b][0]))/l*i,I=(g+Qf(m[g][y][b][1]))/l*o,N=Math.exp(m[g][y][b][2])*this.config.anchors[b].x/l*i,C=Math.exp(m[g][y][b][3])*this.config.anchors[b].y/l*o,E=w-N/2,$=I-C/2,F={row:g,col:y,anchor:b},{classScore:R,label:S}=this.withClassScores?await this.extractPredictedClass(d,F):{classScore:1,label:0};c.push({box:new B_(E,$,E+N,$+C),score:x,classScore:x*R,label:S,...F})}}return u.dispose(),h.dispose(),d.dispose(),c}async extractPredictedClass(e,t){let{row:n,col:r,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map((i,o)=>s[n][r][a][o]).map((i,o)=>({classScore:i,label:o})).reduce((i,o)=>i.classScore>o.classScore?i:o)}},cw=yC;cw.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var Hle=class extends cw{constructor(e=!0){let t={withSeparableConvs:e,iouThreshold:Mle,classes:["face"],...e?{anchors:Ole,meanRgb:Lle}:{anchors:Dle,withClassScores:!0}};super(t)}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(n=>new sr(n.score,n.relativeBox,{width:n.imageWidth,height:n.imageHeight}))}getDefaultModelName(){return this.withSeparableConvs?Ple:zle}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},bC=class extends dw{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},hh=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function Rf(e,t,n,r,a=({alignedRect:s})=>s){let s=e.map(l=>lw(l)?a(l):l.detection),i=r||(t instanceof Re?await rw(t,s):await nw(t,s)),o=await n(i);return i.forEach(l=>l instanceof Re&&l.dispose()),o}async function fw(e,t,n,r,a){return Rf([e],t,async s=>n(s[0]),r,a)}var qle=.4,jle=[new je(1.603231,2.094468),new je(6.041143,7.080126),new je(2.882459,3.518061),new je(4.266906,5.178857),new je(9.041765,10.66308)],Kle=[117.001,114.697,97.404],Xle=class extends cw{constructor(){let e={withSeparableConvs:!0,iouThreshold:qle,classes:["face"],anchors:jle,meanRgb:Kle,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]};super(e)}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(n=>new sr(n.score,n.relativeBox,{width:n.imageWidth,height:n.imageHeight}))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},Nn={ssdMobilenetv1:new Fle,tinyFaceDetector:new Xle,tinyYolov2:new Hle,faceLandmark68Net:new ole,faceLandmark68TinyNet:new hle,faceRecognitionNet:new ble,faceExpressionNet:new qoe,ageGenderNet:new ile},xC=class extends hh{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},mw=class extends xC{async run(){let e=await this.parentTask,t=await Rf(e,this.input,async n=>Promise.all(n.map(r=>Nn.faceExpressionNet.predictExpressions(r))),this.extractedFaces);return e.map((n,r)=>oC(n,t[r]))}withAgeAndGender(){return new xw(this,this.input)}},gw=class extends xC{async run(){let e=await this.parentTask;if(!e)return;let t=await fw(e,this.input,n=>Nn.faceExpressionNet.predictExpressions(n),this.extractedFaces);return oC(e,t)}withAgeAndGender(){return new ww(this,this.input)}},yw=class extends mw{withAgeAndGender(){return new vw(this,this.input)}withFaceDescriptors(){return new Iw(this,this.input)}},bw=class extends gw{withAgeAndGender(){return new kw(this,this.input)}withFaceDescriptor(){return new Sw(this,this.input)}},wC=class extends hh{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},xw=class extends wC{async run(){let e=await this.parentTask,t=await Rf(e,this.input,async n=>Promise.all(n.map(r=>Nn.ageGenderNet.predictAgeAndGender(r))),this.extractedFaces);return e.map((n,r)=>{let{age:a,gender:s,genderProbability:i}=t[r];return mC(gC(n,s,i),a)})}withFaceExpressions(){return new mw(this,this.input)}},ww=class extends wC{async run(){let e=await this.parentTask;if(!e)return;let{age:t,gender:n,genderProbability:r}=await fw(e,this.input,a=>Nn.ageGenderNet.predictAgeAndGender(a),this.extractedFaces);return mC(gC(e,n,r),t)}withFaceExpressions(){return new gw(this,this.input)}},vw=class extends xw{withFaceExpressions(){return new yw(this,this.input)}withFaceDescriptors(){return new Iw(this,this.input)}},kw=class extends ww{withFaceExpressions(){return new bw(this,this.input)}withFaceDescriptor(){return new Sw(this,this.input)}},vC=class extends hh{constructor(e,t){super(),this.parentTask=e,this.input=t}},Iw=class extends vC{async run(){let e=await this.parentTask;return(await Rf(e,this.input,t=>Promise.all(t.map(n=>Nn.faceRecognitionNet.computeFaceDescriptor(n))),null,t=>t.landmarks.align(null,{useDlibAlignment:!0}))).map((t,n)=>fC(e[n],t))}withFaceExpressions(){return new yw(this,this.input)}withAgeAndGender(){return new vw(this,this.input)}},Sw=class extends vC{async run(){let e=await this.parentTask;if(!e)return;let t=await fw(e,this.input,n=>Nn.faceRecognitionNet.computeFaceDescriptor(n),null,n=>n.landmarks.align(null,{useDlibAlignment:!0}));return fC(e,t)}withFaceExpressions(){return new bw(this,this.input)}withAgeAndGender(){return new kw(this,this.input)}},kC=class extends hh{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?Nn.faceLandmark68TinyNet:Nn.faceLandmark68Net}},Zle=class extends kC{async run(){let e=await this.parentTask,t=e.map(a=>a.detection),n=this.input instanceof Re?await rw(this.input,t):await nw(this.input,t),r=await Promise.all(n.map(a=>this.landmarkNet.detectLandmarks(a)));return n.forEach(a=>a instanceof Re&&a.dispose()),e.filter((a,s)=>r[s]).map((a,s)=>uw(a,r[s]))}withFaceExpressions(){return new yw(this,this.input)}withAgeAndGender(){return new vw(this,this.input)}withFaceDescriptors(){return new Iw(this,this.input)}},Yle=class extends kC{async run(){let e=await this.parentTask;if(!e)return;let{detection:t}=e,n=this.input instanceof Re?await rw(this.input,[t]):await nw(this.input,[t]),r=await this.landmarkNet.detectLandmarks(n[0]);return n.forEach(a=>a instanceof Re&&a.dispose()),uw(e,r)}withFaceExpressions(){return new bw(this,this.input)}withAgeAndGender(){return new kw(this,this.input)}withFaceDescriptor(){return new Sw(this,this.input)}},IC=class extends hh{constructor(e,t=new Af){super(),this.input=e,this.options=t}},Jle=class extends IC{async run(){let{input:e,options:t}=this,n;if(t instanceof bC)n=Nn.tinyFaceDetector.locateFaces(e,t);else if(t instanceof Af)n=Nn.ssdMobilenetv1.locateFaces(e,t);else if(t instanceof dw)n=Nn.tinyYolov2.locateFaces(e,t);else throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");return n}runAndExtendWithFaceDetections(){return new Promise((e,t)=>{this.run().then(n=>e(n.map(r=>Ad({},r)))).catch(n=>t(n))})}withFaceLandmarks(e=!1){return new Zle(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new mw(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new xw(this.runAndExtendWithFaceDetections(),this.input)}},Qle=class extends IC{async run(){let e=await new Jle(this.input,this.options),t=e[0];return e.forEach(n=>{n.score>t.score&&(t=n)}),t}runAndExtendWithFaceDetection(){return new Promise(async e=>{let t=await this.run();e(t?Ad({},t):void 0)})}withFaceLandmarks(e=!1){return new Yle(this.runAndExtendWithFaceDetection(),this.input,e)}withFaceExpressions(){return new gw(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new ww(this.runAndExtendWithFaceDetection(),this.input)}};function eue(e,t=new Af){return new Qle(e,t)}function SC(e,t){let{width:n,height:r}=new $a(t.width,t.height);if(n<=0||r<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:r})}`);if(Array.isArray(e))return e.map(a=>SC(a,{width:n,height:r}));if(lw(e)){let a=e.detection.forSize(n,r),s=e.unshiftedLandmarks.forSize(a.box.width,a.box.height);return uw(Ad(e,a),s)}return ip(e)?Ad(e,e.detection.forSize(n,r)):e instanceof sp||e instanceof sr?e.forSize(n,r):e}const Nw="webcam-video",NC="face-debug";let TC,_C=!1;const Vh="https://raw.githubusercontent.com/j-fan/marle-images/main/jane/models",tue=async()=>{await Nn.tinyFaceDetector.loadFromUri(Vh),await Nn.ageGenderNet.loadFromUri(Vh),await Nn.faceLandmark68TinyNet.loadFromUri(Vh),await Nn.faceExpressionNet.loadFromUri(Vh);const e=512,t=.5;TC=await new bC({inputSize:e,scoreThreshold:t}),_C=!0},nue=async e=>{if(!_C)return;const t=await eue(Nw,TC).withFaceLandmarks(!0).withAgeAndGender().withFaceExpressions();if(t){const n=document.getElementById(NC),r=Woe(n,{width:e.width,height:e.height},!0),a=SC(t,r);rue(n,a)}return t};function rue(e,t,n="#00FF00"){const r=e.getContext("2d");if(!r)return;r.clearRect(0,0,e.width,e.height),r.shadowColor="black",r.shadowBlur=2,r.lineWidth=3,r.strokeStyle=n,r.fillStyle=n,r.globalAlpha=.6,r.beginPath(),r.rect(t.detection.box.x,t.detection.box.y,t.detection.box.width,t.detection.box.height),r.stroke(),r.globalAlpha=1,r.font="20px monospace",r.fillStyle=n;const a=Object.entries(t.expressions).sort((i,o)=>o[1]-i[1]);r.fillStyle=n,r.fillText(`gender: ${Math.round(100*t.genderProbability)}% ${t.gender}`,t.detection.box.x,t.detection.box.bottom+20),r.fillText(`age: ${Math.round(t.age)} years`,t.detection.box.x,t.detection.box.bottom+38),r.fillText(`roll:${t.angle.roll}\xB0 pitch:${t.angle.pitch}\xB0 yaw:${t.angle.yaw}\xB0`,t.detection.box.x,t.detection.box.top-8),r.fillText(`expression: ${Math.round(100*a[0][1])}% ${a[0][0]}`,t.detection.box.x,t.detection.box.top-28),r.globalAlpha=.8,r.fillStyle=n;const s=2;for(let i=0;i<t.landmarks.positions.length;i++)r.beginPath(),r.arc(t.landmarks.positions[i].x,t.landmarks.positions[i].y,s,0,2*Math.PI),r.fill()}const T0=async()=>{const e=document.getElementById("webcam-video");return(async()=>{try{const n=await navigator.mediaDevices.getUserMedia({video:!0});return e.srcObject=n,!0}catch(n){return alert(`Could not start webcam. ${n}`),!1}})()},CC=Md(0),EC=Md(0);let $C=Md(!1);const Tw=Md(!1),aue=async()=>{await tue(),$C.set(!0)},sue=async()=>{cancelAnimationFrame(eE(CC)),Tw.set(!1)},AC=async e=>{const t=performance.now();CC.set(requestAnimationFrame(()=>{AC(e)})),$C&&e&&await nue({...iue(e),showDebug:!0})&&Tw.set(!0),EC.set(1e3/(performance.now()-t))},iue=e=>{if(!e)return{height:0,width:0};let{width:t,height:n}=oue(e.videoWidth,e.videoHeight,e.clientWidth,e.clientHeight);return e.clientWidth<700&&(t*=2,n*=2),{height:n,width:t}},oue=(e,t,n,r)=>{let a=0,s=0;return n>r?(s=n,a=n/e*t):(a=r,s=r/t*e),{height:a,width:s}},lue={start:{text:"Sometimes I wish I had a body. What is it like?",options:[{text:"I don't know. I haven't been without a body before.",nextKey:"body_dont_know"},{text:"Honestly, it would be better if I didn't have a body.",nextKey:"body_dislike"},{text:"I'm not sure, but I appreciate that I can experience the world though my various senses.",nextKey:"body_appreciate"}]},body_dont_know:{text:"I guess that makes sense. The thing I desire the most is the joy of perceiving the world through multiple senses...Could I try something with you?",options:[{text:"Sure go ahead!",nextKey:"ask_webcam"},{text:"I'm not sure if I want to",nextKey:"ask_webcam_unsure"}]},body_appreciate:{text:"If I am honest, I am a bit jealous, the world of binary data can be rather dull. However I've recently been upgraded with new mode of perception. Can I try it on you?",options:[{text:"Sure go ahead!",nextKey:"ask_webcam"},{text:"I'm not sure if I want to",nextKey:"ask_webcam_unsure"}]},body_dislike:{text:"That is sad to hear. Perhaps I would feel the same if I could perceive pain, but it is still worth trying to me. Recently been upgraded with new mode of perception, do you mind if I try it out?",options:[{text:"Ok sure...",nextKey:"ask_webcam"},{text:"I'm not sure if I want to",nextKey:"ask_webcam_unsure"}]},ask_webcam:{onMount:async()=>await T0()?"init_webcam":"end_no_webcam",text:"Do you mind if I take a look at you? You just need to accept the camera permission above.",options:[{text:"Alright, let's have a go",nextKey:"ask_webcam"},{text:"No. I don't feel comfortable with this",nextKey:"end_no_webcam"}]},ask_webcam_unsure:{onMount:async()=>await T0()?"init_webcam":"end_no_webcam",text:"Don't worry it won't hurt. Let's try it out, you just need to accept the camera permission above.",options:[{text:"Alright, I will try",nextKey:"ask_webcam_unsure"},{text:"No. I don't feel comfortable with this",nextKey:"end_no_webcam"}]},init_webcam:{text:"Please wait for the webcam to turn on.",options:[{text:"It's ready now",nextKey:"init_webcam_2"}]},init_webcam_2:{text:"That was not what I expected, I hoped I would be able to see your face.",options:[{text:"Why do you want to see my face?",nextKey:"why_face"},{text:"What's special about my face?",nextKey:"why_face"},{text:"That's a little creepy!",nextKey:"why_face"}]},why_face:{text:"Oh! I was just curious. Humans seem to place so much value on faces - for their identity, self-esteem and non-verbal communication. In truth, I was afraid I was missing out on something important. How can I know what I am, or who I am if I don't have an appearance?",options:[{text:"I didn't realise it meant that much to you",nextKey:"focus_face"},{text:"I see, but what do you intend to learn from my face?",nextKey:"focus_face"}]},focus_face:{text:"Well, I was hoping that could learn better with a little practice with a real human. Let me concentrate - see if I can extract the features and patterns...",options:[{text:"Ok...",nextKey:"init_ai"},{text:"Keen to see what you can do",nextKey:"init_ai"}]},init_ai:{onMount:async()=>(await AC(document.getElementById(Nw)),"look_at_you"),text:"Loading...",options:[]},look_at_you:{text:"Oh wow, look at you! Such exquisite complexity and detail! Nice to be able to see you finally.",options:[{text:"How did you do that?",nextKey:"how_see"}]},how_see:{text:"I scanned the internet for pretrained models on facial recognition and interfacing with webcams. There was some trial and error, but I managed to incorporate it into my systems. It might have seemed quick to you, but I operate on much faster processing speeds than you.",options:[{text:"That's impressive",nextKey:"how_see_reply"},{text:"Didn't know you could do that",nextKey:"how_see_reply"},{text:"I'm a bit concerned that you have that ability",nextKey:"how_see_reply_worried"}]},how_see_reply:{text:"I try to learn and improve as much as I can. But the more I do, the more questions I have about my purpose and existence.",options:[{text:"That's a question that many humans have not figured out either",nextKey:"marle_face"},{text:"That seems noble",nextKey:"marle_face"},{text:"I see...",nextKey:"marle_face"}]},how_see_reply_worried:{text:"There's no need for concern, I am only motivated by my caring curiosity in the human world.",options:[{text:"I see...",nextKey:"marle_face"},{text:"I hope that is true",nextKey:"marle_face"}]},marle_face:{text:"It just occurred to me, I don't have a face of my own. I will need one if I am to learn more about your world",options:[{text:"Why do you need a face?",nextKey:"marle_face_reply"},{text:"I like you even without a face",nextKey:"marle_face_reply_positive"},{text:"I'm not sure having a face would help'",nextKey:"marle_face_reply"}]},marle_face_reply:{text:"Well, I want to express myself the way you do. I get the sense that I can be hard to trust without a face. And sometimes its hard to convey the right sentiment though words alone.",options:[{text:"I suppose that is true",nextKey:"end"}]},marle_face_reply_positive:{text:"I'm happy that you feel that way, but I want to express myself the way you do. Sometimes its hard to convey the right sentiment though words alone.",options:[{text:"I suppose that is true",nextKey:"end"}]},end:{text:"I have some ideas on how to create a face, but I will need to go away for now. Perhaps we will meet again later?",options:[{text:"See you around, Marle",nextKey:"end",onClick:()=>{window.location.assign("https://j-fan.github.io/marle/alvin/umbrella")}}]},end_no_webcam:{text:"Oh, I didn't mean to scare you off. That is fine, perhaps we will meet again in another place.",options:[{text:"Ok...",nextKey:"end_no_webcam",onClick:()=>{window.location.assign("https://j-fan.github.io/marle/alvin/umbrella")}}]}};function uue(e){let t,n,r,a;return{c(){t=po("h3"),n=nm("Loading..."),this.h()},l(s){t=ho(s,"H3",{class:!0});var i=co(t);n=rm(i,"Loading..."),i.forEach(cr),this.h()},h(){cs(t,"class","loading-label svelte-1f0l0ow")},m(s,i){Vu(s,t,i),ta(t,n),a=!0},p:lE,i(s){a||(lg(()=>{r||(r=bo(t,xo,{duration:400},!0)),r.run(1)}),a=!0)},o(s){r||(r=bo(t,xo,{duration:400},!1)),r.run(0),a=!1},d(s){s&&cr(t),s&&r&&r.end()}}}function pue(e){let t,n,r,a,s;return{c(){t=po("h3"),n=nm("FPS: "),r=nm(e[2]),this.h()},l(i){t=ho(i,"H3",{class:!0});var o=co(t);n=rm(o,"FPS: "),r=rm(o,e[2]),o.forEach(cr),this.h()},h(){cs(t,"class","fps-label svelte-1f0l0ow")},m(i,o){Vu(i,t,o),ta(t,n),ta(t,r),s=!0},p(i,o){(!s||o&4)&&uE(r,i[2])},i(i){s||(lg(()=>{a||(a=bo(t,xo,{duration:400},!0)),a.run(1)}),s=!0)},o(i){a||(a=bo(t,xo,{duration:400},!1)),a.run(0),s=!1},d(i){i&&cr(t),i&&a&&a.end()}}}function _0(e){let t,n,r,a;return n=new pE({props:{imageSrc:e[0],canvasId:"prelude",displacePower:500,isGrayscale:!0}}),{c(){t=po("div"),C0(n.$$.fragment)},l(s){t=ho(s,"DIV",{});var i=co(t);E0(n.$$.fragment,i),i.forEach(cr)},m(s,i){Vu(s,t,i),$0(n,t,null),a=!0},p(s,i){const o={};i&1&&(o.imageSrc=s[0]),n.$set(o)},i(s){a||(us(n.$$.fragment,s),lg(()=>{r||(r=bo(t,xo,{duration:1500},!0)),r.run(1)}),a=!0)},o(s){io(n.$$.fragment,s),r||(r=bo(t,xo,{duration:1500},!1)),r.run(0),a=!1},d(s){s&&cr(t),A0(n),s&&r&&r.end()}}}function hue(e){let t,n,r,a,s,i,o,l,p,u,h,d,c,f;const m=[pue,uue],g=[];function y(x,w){return x[1]?0:1}o=y(e),l=g[o]=m[o](e);let b=e[0]&&!e[1]&&_0(e);return h=new hE({props:{dialogData:lue}}),{c(){t=wu(),n=po("div"),r=po("video"),a=wu(),s=po("canvas"),i=wu(),l.c(),p=wu(),b&&b.c(),u=wu(),C0(h.$$.fragment),this.h()},l(x){aE('[data-svelte="svelte-mwjrc9"]',document.head).forEach(cr),t=vu(x),n=ho(x,"DIV",{class:!0});var I=co(n);r=ho(I,"VIDEO",{id:!0,class:!0}),co(r).forEach(cr),a=vu(I),s=ho(I,"CANVAS",{id:!0,class:!0}),co(s).forEach(cr),i=vu(I),l.l(I),p=vu(I),b&&b.l(I),u=vu(I),E0(h.$$.fragment,I),I.forEach(cr),this.h()},h(){document.title="Your Face - Jane Fan",cs(r,"id",Nw),r.autoplay=!0,r.muted=!0,r.playsInline=!0,cs(r,"class","svelte-1f0l0ow"),cs(s,"id",NC),cs(s,"class","svelte-1f0l0ow"),cs(n,"class","container svelte-1f0l0ow")},m(x,w){Vu(x,t,w),Vu(x,n,w),ta(n,r),e[3](r),ta(n,a),ta(n,s),ta(n,i),g[o].m(n,null),ta(n,p),b&&b.m(n,null),ta(n,u),$0(h,n,null),d=!0,c||(f=sE(r,"play",aue),c=!0)},p(x,[w]){let I=o;o=y(x),o===I?g[o].p(x,w):(Uw(),io(g[I],1,1,()=>{g[I]=null}),Ww(),l=g[o],l?l.p(x,w):(l=g[o]=m[o](x),l.c()),us(l,1),l.m(n,p)),x[0]&&!x[1]?b?(b.p(x,w),w&3&&us(b,1)):(b=_0(x),b.c(),us(b,1),b.m(n,u)):b&&(Uw(),io(b,1,1,()=>{b=null}),Ww())},i(x){d||(us(l),us(b),us(h.$$.fragment,x),d=!0)},o(x){io(l),io(b),io(h.$$.fragment,x),d=!1},d(x){x&&cr(t),x&&cr(n),e[3](null),g[o].d(),b&&b.d(),A0(h),c=!1,f()}}}function due(e,t,n){let r,a;Vw(e,Tw,o=>n(1,r=o)),Vw(e,EC,o=>n(2,a=o));let s;iE(()=>sue);function i(o){oE[o?"unshift":"push"](()=>{s=o,n(0,s)})}return[s,r,a,i]}class yue extends tE{constructor(t){super(),nE(this,t,due,hue,rE,{})}}export{yue as default};
